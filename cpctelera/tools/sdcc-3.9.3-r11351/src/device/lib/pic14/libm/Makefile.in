# Makefile.in generated by automake 1.16.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2018 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

VPATH = @srcdir@
am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
@ENABLE_ENHANCED_PICS_TRUE@am__append_1 = libme.a
@ENABLE_NOOPTS_TRUE@am__append_2 = libmo.a
@ENABLE_ENHANCED_PICS_TRUE@@ENABLE_NOOPTS_TRUE@am__append_3 = libmeo.a
@ENABLE_EXPERIMENTAL_TRUE@am__append_4 = libmx.a
@ENABLE_ENHANCED_PICS_TRUE@@ENABLE_EXPERIMENTAL_TRUE@am__append_5 = libmex.a
@ENABLE_EXPERIMENTAL_TRUE@@ENABLE_NOOPTS_TRUE@am__append_6 = libmox.a
@ENABLE_ENHANCED_PICS_TRUE@@ENABLE_EXPERIMENTAL_TRUE@@ENABLE_NOOPTS_TRUE@am__append_7 = libmeox.a
@ENABLE_EXTENDED_INSTRUCTIONS_FALSE@am__append_8 = --no-extended-instructions

# extra flags when DEBUG is enabled
@ENABLE_DEBUG_TRUE@am__append_9 = --debug --debug-xtra --debug-ralloc  --debug-glue
@ENABLE_DEBUG_TRUE@am__append_10 = --debug-variadics
subdir = libm
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
LIBRARIES = $(noinst_LIBRARIES)
AM_V_AR = $(am__v_AR_@AM_V@)
am__v_AR_ = $(am__v_AR_@AM_DEFAULT_V@)
am__v_AR_0 = @echo "  AR      " $@;
am__v_AR_1 = 
libm_a_AR = $(AR) $(ARFLAGS)
libm_a_LIBADD =
am_libm_a_OBJECTS = libm_a-acosf.$(OBJEXT) libm_a-asincosf.$(OBJEXT) \
	libm_a-asinf.$(OBJEXT) libm_a-atan2f.$(OBJEXT) \
	libm_a-atanf.$(OBJEXT) libm_a-ceilf.$(OBJEXT) \
	libm_a-cosf.$(OBJEXT) libm_a-coshf.$(OBJEXT) \
	libm_a-cotf.$(OBJEXT) libm_a-errno.$(OBJEXT) \
	libm_a-expf.$(OBJEXT) libm_a-fabsf.$(OBJEXT) \
	libm_a-floorf.$(OBJEXT) libm_a-frexpf.$(OBJEXT) \
	libm_a-isinf.$(OBJEXT) libm_a-isnan.$(OBJEXT) \
	libm_a-ldexpf.$(OBJEXT) libm_a-log10f.$(OBJEXT) \
	libm_a-logf.$(OBJEXT) libm_a-modff.$(OBJEXT) \
	libm_a-powf.$(OBJEXT) libm_a-sincosf.$(OBJEXT) \
	libm_a-sincoshf.$(OBJEXT) libm_a-sinf.$(OBJEXT) \
	libm_a-sinhf.$(OBJEXT) libm_a-sqrtf.$(OBJEXT) \
	libm_a-tancotf.$(OBJEXT) libm_a-tanf.$(OBJEXT) \
	libm_a-tanhf.$(OBJEXT)
libm_a_OBJECTS = $(am_libm_a_OBJECTS)
libme_a_AR = $(AR) $(ARFLAGS)
libme_a_LIBADD =
am__libme_a_SOURCES_DIST = acosf.c asincosf.c asinf.c atan2f.c atanf.c \
	ceilf.c cosf.c coshf.c cotf.c errno.c expf.c fabsf.c floorf.c \
	frexpf.c isinf.c isnan.c ldexpf.c log10f.c logf.c modff.c \
	powf.c sincosf.c sincoshf.c sinf.c sinhf.c sqrtf.c tancotf.c \
	tanf.c tanhf.c
am__objects_1 = libme_a-acosf.$(OBJEXT) libme_a-asincosf.$(OBJEXT) \
	libme_a-asinf.$(OBJEXT) libme_a-atan2f.$(OBJEXT) \
	libme_a-atanf.$(OBJEXT) libme_a-ceilf.$(OBJEXT) \
	libme_a-cosf.$(OBJEXT) libme_a-coshf.$(OBJEXT) \
	libme_a-cotf.$(OBJEXT) libme_a-errno.$(OBJEXT) \
	libme_a-expf.$(OBJEXT) libme_a-fabsf.$(OBJEXT) \
	libme_a-floorf.$(OBJEXT) libme_a-frexpf.$(OBJEXT) \
	libme_a-isinf.$(OBJEXT) libme_a-isnan.$(OBJEXT) \
	libme_a-ldexpf.$(OBJEXT) libme_a-log10f.$(OBJEXT) \
	libme_a-logf.$(OBJEXT) libme_a-modff.$(OBJEXT) \
	libme_a-powf.$(OBJEXT) libme_a-sincosf.$(OBJEXT) \
	libme_a-sincoshf.$(OBJEXT) libme_a-sinf.$(OBJEXT) \
	libme_a-sinhf.$(OBJEXT) libme_a-sqrtf.$(OBJEXT) \
	libme_a-tancotf.$(OBJEXT) libme_a-tanf.$(OBJEXT) \
	libme_a-tanhf.$(OBJEXT)
@ENABLE_ENHANCED_PICS_TRUE@am_libme_a_OBJECTS = $(am__objects_1)
libme_a_OBJECTS = $(am_libme_a_OBJECTS)
libmeo_a_AR = $(AR) $(ARFLAGS)
libmeo_a_LIBADD =
am__libmeo_a_SOURCES_DIST = acosf.c asincosf.c asinf.c atan2f.c \
	atanf.c ceilf.c cosf.c coshf.c cotf.c errno.c expf.c fabsf.c \
	floorf.c frexpf.c isinf.c isnan.c ldexpf.c log10f.c logf.c \
	modff.c powf.c sincosf.c sincoshf.c sinf.c sinhf.c sqrtf.c \
	tancotf.c tanf.c tanhf.c
am__objects_2 = libmeo_a-acosf.$(OBJEXT) libmeo_a-asincosf.$(OBJEXT) \
	libmeo_a-asinf.$(OBJEXT) libmeo_a-atan2f.$(OBJEXT) \
	libmeo_a-atanf.$(OBJEXT) libmeo_a-ceilf.$(OBJEXT) \
	libmeo_a-cosf.$(OBJEXT) libmeo_a-coshf.$(OBJEXT) \
	libmeo_a-cotf.$(OBJEXT) libmeo_a-errno.$(OBJEXT) \
	libmeo_a-expf.$(OBJEXT) libmeo_a-fabsf.$(OBJEXT) \
	libmeo_a-floorf.$(OBJEXT) libmeo_a-frexpf.$(OBJEXT) \
	libmeo_a-isinf.$(OBJEXT) libmeo_a-isnan.$(OBJEXT) \
	libmeo_a-ldexpf.$(OBJEXT) libmeo_a-log10f.$(OBJEXT) \
	libmeo_a-logf.$(OBJEXT) libmeo_a-modff.$(OBJEXT) \
	libmeo_a-powf.$(OBJEXT) libmeo_a-sincosf.$(OBJEXT) \
	libmeo_a-sincoshf.$(OBJEXT) libmeo_a-sinf.$(OBJEXT) \
	libmeo_a-sinhf.$(OBJEXT) libmeo_a-sqrtf.$(OBJEXT) \
	libmeo_a-tancotf.$(OBJEXT) libmeo_a-tanf.$(OBJEXT) \
	libmeo_a-tanhf.$(OBJEXT)
@ENABLE_ENHANCED_PICS_TRUE@@ENABLE_NOOPTS_TRUE@am_libmeo_a_OBJECTS = $(am__objects_2)
libmeo_a_OBJECTS = $(am_libmeo_a_OBJECTS)
libmeox_a_AR = $(AR) $(ARFLAGS)
libmeox_a_LIBADD =
am__libmeox_a_SOURCES_DIST = acosf.c asincosf.c asinf.c atan2f.c \
	atanf.c ceilf.c cosf.c coshf.c cotf.c errno.c expf.c fabsf.c \
	floorf.c frexpf.c isinf.c isnan.c ldexpf.c log10f.c logf.c \
	modff.c powf.c sincosf.c sincoshf.c sinf.c sinhf.c sqrtf.c \
	tancotf.c tanf.c tanhf.c
am__objects_3 = libmeox_a-acosf.$(OBJEXT) libmeox_a-asincosf.$(OBJEXT) \
	libmeox_a-asinf.$(OBJEXT) libmeox_a-atan2f.$(OBJEXT) \
	libmeox_a-atanf.$(OBJEXT) libmeox_a-ceilf.$(OBJEXT) \
	libmeox_a-cosf.$(OBJEXT) libmeox_a-coshf.$(OBJEXT) \
	libmeox_a-cotf.$(OBJEXT) libmeox_a-errno.$(OBJEXT) \
	libmeox_a-expf.$(OBJEXT) libmeox_a-fabsf.$(OBJEXT) \
	libmeox_a-floorf.$(OBJEXT) libmeox_a-frexpf.$(OBJEXT) \
	libmeox_a-isinf.$(OBJEXT) libmeox_a-isnan.$(OBJEXT) \
	libmeox_a-ldexpf.$(OBJEXT) libmeox_a-log10f.$(OBJEXT) \
	libmeox_a-logf.$(OBJEXT) libmeox_a-modff.$(OBJEXT) \
	libmeox_a-powf.$(OBJEXT) libmeox_a-sincosf.$(OBJEXT) \
	libmeox_a-sincoshf.$(OBJEXT) libmeox_a-sinf.$(OBJEXT) \
	libmeox_a-sinhf.$(OBJEXT) libmeox_a-sqrtf.$(OBJEXT) \
	libmeox_a-tancotf.$(OBJEXT) libmeox_a-tanf.$(OBJEXT) \
	libmeox_a-tanhf.$(OBJEXT)
@ENABLE_ENHANCED_PICS_TRUE@@ENABLE_EXPERIMENTAL_TRUE@@ENABLE_NOOPTS_TRUE@am_libmeox_a_OBJECTS = $(am__objects_3)
libmeox_a_OBJECTS = $(am_libmeox_a_OBJECTS)
libmex_a_AR = $(AR) $(ARFLAGS)
libmex_a_LIBADD =
am__libmex_a_SOURCES_DIST = acosf.c asincosf.c asinf.c atan2f.c \
	atanf.c ceilf.c cosf.c coshf.c cotf.c errno.c expf.c fabsf.c \
	floorf.c frexpf.c isinf.c isnan.c ldexpf.c log10f.c logf.c \
	modff.c powf.c sincosf.c sincoshf.c sinf.c sinhf.c sqrtf.c \
	tancotf.c tanf.c tanhf.c
am__objects_4 = libmex_a-acosf.$(OBJEXT) libmex_a-asincosf.$(OBJEXT) \
	libmex_a-asinf.$(OBJEXT) libmex_a-atan2f.$(OBJEXT) \
	libmex_a-atanf.$(OBJEXT) libmex_a-ceilf.$(OBJEXT) \
	libmex_a-cosf.$(OBJEXT) libmex_a-coshf.$(OBJEXT) \
	libmex_a-cotf.$(OBJEXT) libmex_a-errno.$(OBJEXT) \
	libmex_a-expf.$(OBJEXT) libmex_a-fabsf.$(OBJEXT) \
	libmex_a-floorf.$(OBJEXT) libmex_a-frexpf.$(OBJEXT) \
	libmex_a-isinf.$(OBJEXT) libmex_a-isnan.$(OBJEXT) \
	libmex_a-ldexpf.$(OBJEXT) libmex_a-log10f.$(OBJEXT) \
	libmex_a-logf.$(OBJEXT) libmex_a-modff.$(OBJEXT) \
	libmex_a-powf.$(OBJEXT) libmex_a-sincosf.$(OBJEXT) \
	libmex_a-sincoshf.$(OBJEXT) libmex_a-sinf.$(OBJEXT) \
	libmex_a-sinhf.$(OBJEXT) libmex_a-sqrtf.$(OBJEXT) \
	libmex_a-tancotf.$(OBJEXT) libmex_a-tanf.$(OBJEXT) \
	libmex_a-tanhf.$(OBJEXT)
@ENABLE_ENHANCED_PICS_TRUE@@ENABLE_EXPERIMENTAL_TRUE@am_libmex_a_OBJECTS = $(am__objects_4)
libmex_a_OBJECTS = $(am_libmex_a_OBJECTS)
libmo_a_AR = $(AR) $(ARFLAGS)
libmo_a_LIBADD =
am__libmo_a_SOURCES_DIST = acosf.c asincosf.c asinf.c atan2f.c atanf.c \
	ceilf.c cosf.c coshf.c cotf.c errno.c expf.c fabsf.c floorf.c \
	frexpf.c isinf.c isnan.c ldexpf.c log10f.c logf.c modff.c \
	powf.c sincosf.c sincoshf.c sinf.c sinhf.c sqrtf.c tancotf.c \
	tanf.c tanhf.c
am__objects_5 = libmo_a-acosf.$(OBJEXT) libmo_a-asincosf.$(OBJEXT) \
	libmo_a-asinf.$(OBJEXT) libmo_a-atan2f.$(OBJEXT) \
	libmo_a-atanf.$(OBJEXT) libmo_a-ceilf.$(OBJEXT) \
	libmo_a-cosf.$(OBJEXT) libmo_a-coshf.$(OBJEXT) \
	libmo_a-cotf.$(OBJEXT) libmo_a-errno.$(OBJEXT) \
	libmo_a-expf.$(OBJEXT) libmo_a-fabsf.$(OBJEXT) \
	libmo_a-floorf.$(OBJEXT) libmo_a-frexpf.$(OBJEXT) \
	libmo_a-isinf.$(OBJEXT) libmo_a-isnan.$(OBJEXT) \
	libmo_a-ldexpf.$(OBJEXT) libmo_a-log10f.$(OBJEXT) \
	libmo_a-logf.$(OBJEXT) libmo_a-modff.$(OBJEXT) \
	libmo_a-powf.$(OBJEXT) libmo_a-sincosf.$(OBJEXT) \
	libmo_a-sincoshf.$(OBJEXT) libmo_a-sinf.$(OBJEXT) \
	libmo_a-sinhf.$(OBJEXT) libmo_a-sqrtf.$(OBJEXT) \
	libmo_a-tancotf.$(OBJEXT) libmo_a-tanf.$(OBJEXT) \
	libmo_a-tanhf.$(OBJEXT)
@ENABLE_NOOPTS_TRUE@am_libmo_a_OBJECTS = $(am__objects_5)
libmo_a_OBJECTS = $(am_libmo_a_OBJECTS)
libmox_a_AR = $(AR) $(ARFLAGS)
libmox_a_LIBADD =
am__libmox_a_SOURCES_DIST = acosf.c asincosf.c asinf.c atan2f.c \
	atanf.c ceilf.c cosf.c coshf.c cotf.c errno.c expf.c fabsf.c \
	floorf.c frexpf.c isinf.c isnan.c ldexpf.c log10f.c logf.c \
	modff.c powf.c sincosf.c sincoshf.c sinf.c sinhf.c sqrtf.c \
	tancotf.c tanf.c tanhf.c
am__objects_6 = libmox_a-acosf.$(OBJEXT) libmox_a-asincosf.$(OBJEXT) \
	libmox_a-asinf.$(OBJEXT) libmox_a-atan2f.$(OBJEXT) \
	libmox_a-atanf.$(OBJEXT) libmox_a-ceilf.$(OBJEXT) \
	libmox_a-cosf.$(OBJEXT) libmox_a-coshf.$(OBJEXT) \
	libmox_a-cotf.$(OBJEXT) libmox_a-errno.$(OBJEXT) \
	libmox_a-expf.$(OBJEXT) libmox_a-fabsf.$(OBJEXT) \
	libmox_a-floorf.$(OBJEXT) libmox_a-frexpf.$(OBJEXT) \
	libmox_a-isinf.$(OBJEXT) libmox_a-isnan.$(OBJEXT) \
	libmox_a-ldexpf.$(OBJEXT) libmox_a-log10f.$(OBJEXT) \
	libmox_a-logf.$(OBJEXT) libmox_a-modff.$(OBJEXT) \
	libmox_a-powf.$(OBJEXT) libmox_a-sincosf.$(OBJEXT) \
	libmox_a-sincoshf.$(OBJEXT) libmox_a-sinf.$(OBJEXT) \
	libmox_a-sinhf.$(OBJEXT) libmox_a-sqrtf.$(OBJEXT) \
	libmox_a-tancotf.$(OBJEXT) libmox_a-tanf.$(OBJEXT) \
	libmox_a-tanhf.$(OBJEXT)
@ENABLE_EXPERIMENTAL_TRUE@@ENABLE_NOOPTS_TRUE@am_libmox_a_OBJECTS = $(am__objects_6)
libmox_a_OBJECTS = $(am_libmox_a_OBJECTS)
libmx_a_AR = $(AR) $(ARFLAGS)
libmx_a_LIBADD =
am__libmx_a_SOURCES_DIST = acosf.c asincosf.c asinf.c atan2f.c atanf.c \
	ceilf.c cosf.c coshf.c cotf.c errno.c expf.c fabsf.c floorf.c \
	frexpf.c isinf.c isnan.c ldexpf.c log10f.c logf.c modff.c \
	powf.c sincosf.c sincoshf.c sinf.c sinhf.c sqrtf.c tancotf.c \
	tanf.c tanhf.c
am__objects_7 = libmx_a-acosf.$(OBJEXT) libmx_a-asincosf.$(OBJEXT) \
	libmx_a-asinf.$(OBJEXT) libmx_a-atan2f.$(OBJEXT) \
	libmx_a-atanf.$(OBJEXT) libmx_a-ceilf.$(OBJEXT) \
	libmx_a-cosf.$(OBJEXT) libmx_a-coshf.$(OBJEXT) \
	libmx_a-cotf.$(OBJEXT) libmx_a-errno.$(OBJEXT) \
	libmx_a-expf.$(OBJEXT) libmx_a-fabsf.$(OBJEXT) \
	libmx_a-floorf.$(OBJEXT) libmx_a-frexpf.$(OBJEXT) \
	libmx_a-isinf.$(OBJEXT) libmx_a-isnan.$(OBJEXT) \
	libmx_a-ldexpf.$(OBJEXT) libmx_a-log10f.$(OBJEXT) \
	libmx_a-logf.$(OBJEXT) libmx_a-modff.$(OBJEXT) \
	libmx_a-powf.$(OBJEXT) libmx_a-sincosf.$(OBJEXT) \
	libmx_a-sincoshf.$(OBJEXT) libmx_a-sinf.$(OBJEXT) \
	libmx_a-sinhf.$(OBJEXT) libmx_a-sqrtf.$(OBJEXT) \
	libmx_a-tancotf.$(OBJEXT) libmx_a-tanf.$(OBJEXT) \
	libmx_a-tanhf.$(OBJEXT)
@ENABLE_EXPERIMENTAL_TRUE@am_libmx_a_OBJECTS = $(am__objects_7)
libmx_a_OBJECTS = $(am_libmx_a_OBJECTS)
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp =
am__maybe_remake_depfiles =
AM_V_lt = $(am__v_lt_@AM_V@)
am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
am__v_lt_0 = --silent
am__v_lt_1 = 
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_@AM_V@)
am__v_CC_ = $(am__v_CC_@AM_DEFAULT_V@)
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_@AM_V@)
am__v_CCLD_ = $(am__v_CCLD_@AM_DEFAULT_V@)
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(libm_a_SOURCES) $(libme_a_SOURCES) $(libmeo_a_SOURCES) \
	$(libmeox_a_SOURCES) $(libmex_a_SOURCES) $(libmo_a_SOURCES) \
	$(libmox_a_SOURCES) $(libmx_a_SOURCES)
DIST_SOURCES = $(libm_a_SOURCES) $(am__libme_a_SOURCES_DIST) \
	$(am__libmeo_a_SOURCES_DIST) $(am__libmeox_a_SOURCES_DIST) \
	$(am__libmex_a_SOURCES_DIST) $(am__libmo_a_SOURCES_DIST) \
	$(am__libmox_a_SOURCES_DIST) $(am__libmx_a_SOURCES_DIST)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__DIST_COMMON = $(srcdir)/Makefile.in $(top_srcdir)/Makefile.common
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AR = @AR@
ARCH = @ARCH@
ARFLAGS = @ARFLAGS@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCAS = @CCAS@
CCASDEPMODE = @CCASDEPMODE@
CCASFLAGS = @CCASFLAGS@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
EARCH = @EARCH@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
RANLIB = @RANLIB@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build_alias = @build_alias@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host_alias = @host_alias@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
runstatedir = @runstatedir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
noinst_LIBRARIES = libm.a $(am__append_1) $(am__append_2) \
	$(am__append_3) $(am__append_4) $(am__append_5) \
	$(am__append_6) $(am__append_7)
libm_a_SOURCES = acosf.c asincosf.c asinf.c atan2f.c atanf.c ceilf.c \
	cosf.c coshf.c cotf.c errno.c expf.c fabsf.c floorf.c frexpf.c \
	isinf.c isnan.c ldexpf.c log10f.c logf.c modff.c powf.c \
	sincosf.c sincoshf.c sinf.c sinhf.c sqrtf.c tancotf.c tanf.c \
	tanhf.c
libm_a_CFLAGS = $(AM_CFLAGS)
@ENABLE_ENHANCED_PICS_TRUE@libme_a_SOURCES = $(libm_a_SOURCES)
@ENABLE_ENHANCED_PICS_TRUE@libme_a_CFLAGS = $(AM_CFLAGS_E)
@ENABLE_NOOPTS_TRUE@libmo_a_SOURCES = $(libm_a_SOURCES)
@ENABLE_NOOPTS_TRUE@libmo_a_CFLAGS = $(AM_CFLAGS_O)
@ENABLE_ENHANCED_PICS_TRUE@@ENABLE_NOOPTS_TRUE@libmeo_a_SOURCES = $(libm_a_SOURCES)
@ENABLE_ENHANCED_PICS_TRUE@@ENABLE_NOOPTS_TRUE@libmeo_a_CFLAGS = $(AM_CFLAGS_EO)
@ENABLE_EXPERIMENTAL_TRUE@libmx_a_SOURCES = $(libm_a_SOURCES)
@ENABLE_EXPERIMENTAL_TRUE@libmx_a_CFLAGS = $(AM_CFLAGS_X)
@ENABLE_ENHANCED_PICS_TRUE@@ENABLE_EXPERIMENTAL_TRUE@libmex_a_SOURCES = $(libm_a_SOURCES)
@ENABLE_ENHANCED_PICS_TRUE@@ENABLE_EXPERIMENTAL_TRUE@libmex_a_CFLAGS = $(AM_CFLAGS_EX)
@ENABLE_EXPERIMENTAL_TRUE@@ENABLE_NOOPTS_TRUE@libmox_a_SOURCES = $(libm_a_SOURCES)
@ENABLE_EXPERIMENTAL_TRUE@@ENABLE_NOOPTS_TRUE@libmox_a_CFLAGS = $(AM_CFLAGS_OX)
@ENABLE_ENHANCED_PICS_TRUE@@ENABLE_EXPERIMENTAL_TRUE@@ENABLE_NOOPTS_TRUE@libmeox_a_SOURCES = $(libm_a_SOURCES)
@ENABLE_ENHANCED_PICS_TRUE@@ENABLE_EXPERIMENTAL_TRUE@@ENABLE_NOOPTS_TRUE@libmeox_a_CFLAGS = $(AM_CFLAGS_EOX)
SOURCE_DIRS = .

############################################################
# common source files for all variants of the sdcc library
############################################################
LIBSDCC_SOURCES_COMMON = ../_divschar.c ../_divsint.c ../_divslong.c \
	../_divuchar.c ../_divuint.c ../_divulong.c ../_modschar.c \
	../_modsint.c ../_modslong.c ../_moduchar.c ../_moduint.c \
	../_modulong.c ../_mulschar.c ../_muluchar.c ../_mulint.c \
	../_mullong.c ../_fs2schar.c ../_fs2sint.c ../_fs2slong.c \
	../_fs2uchar.c ../_fs2uint.c ../_fs2ulong.c ../_fsadd.c \
	../_fsdiv.c ../_fseq.c ../_fslt.c ../_fsmul.c ../_fsneq.c \
	../_fssub.c ../_schar2fs.c ../_sint2fs.c ../_slong2fs.c \
	../_uchar2fs.c ../_uint2fs.c ../_ulong2fs.c ../idata.c

############################################################
# Directories when building from the sdcc sources
############################################################

# the directory where sdcc device files can be found
DEVICE_TOP_DIR = $(top_srcdir)/../..

# the directory where generic device lib sources can be found
GENERIC_SRC_DIR = $(DEVICE_TOP_DIR)/lib

# If compiling from the installed device sources, use these directories
#DEVICE_TOP_DIR = $(top_srcdir)/../../..
#GENERIC_SRC_DIR = $(DEVICE_TOP_DIR)/lib/src
GENERIC_SRC_DIR_ABS = $(abspath $(GENERIC_SRC_DIR))

############################################################
# C preprocessor flags
############################################################
AM_CPPFLAGS = -I. -I$(top_srcdir) -I$(DEVICE_TOP_DIR)/include/pic14 \
	-I$(DEVICE_TOP_DIR)/non-free/include/pic14 \
	-I$(DEVICE_TOP_DIR)/include

############################################################
# C compiler flags
############################################################
SDCC_FLAGS = -mpic14 --less-pedantic --no-warn-non-free \
	--i-code-in-asm --fverbose-asm --std-c11 $(am__append_9)

# extra flags for enhanced cores
SDCC_FLAGS_ENHANCED = $(am__append_8)

# extra flags to disable optimizations
SDCC_FLAGS_NOOPT = --no-pcode-opt --no-peep

# extra flags to enable experimental support
SDCC_FLAGS_EXP = --experimental-pcall-all \
	--experimental-pcall-enhanced --experimental-variadics \
	--experimental-ralloc $(am__append_10)
AM_CFLAGS = -p$(ARCH) $(SDCC_FLAGS)
AM_CFLAGS_O = -p$(ARCH) $(SDCC_FLAGS) $(SDCC_FLAGS_NOOPT)
AM_CFLAGS_X = -p$(ARCH) $(SDCC_FLAGS) $(SDCC_FLAGS_EXP)
AM_CFLAGS_OX = -p$(ARCH) $(SDCC_FLAGS) $(SDCC_FLAGS_NOOPT) $(SDCC_FLAGS_EXP)
AM_CFLAGS_E = -p$(EARCH) $(SDCC_FLAGS) $(SDCC_FLAGS_ENHANCED)
AM_CFLAGS_EO = -p$(EARCH) $(SDCC_FLAGS) $(SDCC_FLAGS_ENHANCED) $(SDCC_FLAGS_NOOPT)
AM_CFLAGS_EX = -p$(EARCH) $(SDCC_FLAGS) $(SDCC_FLAGS_ENHANCED) $(SDCC_FLAGS_EXP)
AM_CFLAGS_EOX = -p$(EARCH) $(SDCC_FLAGS) $(SDCC_FLAGS_ENHANCED) $(SDCC_FLAGS_NOOPT) $(SDCC_FLAGS_EXP)

############################################################
# Assembler flags
############################################################
AM_CCASFLAGS = -p$(ARCH) -I$(srcdir) -I$(DEVICE_TOP_DIR)/include/pic14 \
	-I$(DEVICE_TOP_DIR)/non-free/include/pic14

# extensions generated by the build process
CLEAN_EXTENSIONS = .asm .lst .sym .d .p .g .v .adb
all: all-am

.SUFFIXES:
.SUFFIXES: .c .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(top_srcdir)/Makefile.common $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign --ignore-deps libm/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign --ignore-deps libm/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles);; \
	esac;
$(top_srcdir)/Makefile.common $(am__empty):

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-noinstLIBRARIES:
	-test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)

libm.a: $(libm_a_OBJECTS) $(libm_a_DEPENDENCIES) $(EXTRA_libm_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libm.a
	$(AM_V_AR)$(libm_a_AR) libm.a $(libm_a_OBJECTS) $(libm_a_LIBADD)
	$(AM_V_at)$(RANLIB) libm.a

libme.a: $(libme_a_OBJECTS) $(libme_a_DEPENDENCIES) $(EXTRA_libme_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libme.a
	$(AM_V_AR)$(libme_a_AR) libme.a $(libme_a_OBJECTS) $(libme_a_LIBADD)
	$(AM_V_at)$(RANLIB) libme.a

libmeo.a: $(libmeo_a_OBJECTS) $(libmeo_a_DEPENDENCIES) $(EXTRA_libmeo_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libmeo.a
	$(AM_V_AR)$(libmeo_a_AR) libmeo.a $(libmeo_a_OBJECTS) $(libmeo_a_LIBADD)
	$(AM_V_at)$(RANLIB) libmeo.a

libmeox.a: $(libmeox_a_OBJECTS) $(libmeox_a_DEPENDENCIES) $(EXTRA_libmeox_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libmeox.a
	$(AM_V_AR)$(libmeox_a_AR) libmeox.a $(libmeox_a_OBJECTS) $(libmeox_a_LIBADD)
	$(AM_V_at)$(RANLIB) libmeox.a

libmex.a: $(libmex_a_OBJECTS) $(libmex_a_DEPENDENCIES) $(EXTRA_libmex_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libmex.a
	$(AM_V_AR)$(libmex_a_AR) libmex.a $(libmex_a_OBJECTS) $(libmex_a_LIBADD)
	$(AM_V_at)$(RANLIB) libmex.a

libmo.a: $(libmo_a_OBJECTS) $(libmo_a_DEPENDENCIES) $(EXTRA_libmo_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libmo.a
	$(AM_V_AR)$(libmo_a_AR) libmo.a $(libmo_a_OBJECTS) $(libmo_a_LIBADD)
	$(AM_V_at)$(RANLIB) libmo.a

libmox.a: $(libmox_a_OBJECTS) $(libmox_a_DEPENDENCIES) $(EXTRA_libmox_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libmox.a
	$(AM_V_AR)$(libmox_a_AR) libmox.a $(libmox_a_OBJECTS) $(libmox_a_LIBADD)
	$(AM_V_at)$(RANLIB) libmox.a

libmx.a: $(libmx_a_OBJECTS) $(libmx_a_DEPENDENCIES) $(EXTRA_libmx_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libmx.a
	$(AM_V_AR)$(libmx_a_AR) libmx.a $(libmx_a_OBJECTS) $(libmx_a_LIBADD)
	$(AM_V_at)$(RANLIB) libmx.a

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

.c.o:
	$(AM_V_CC)$(COMPILE) -c -o $@ $<

.c.obj:
	$(AM_V_CC)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

libm_a-acosf.o: acosf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libm_a_CFLAGS) $(CFLAGS) -c -o libm_a-acosf.o `test -f 'acosf.c' || echo '$(srcdir)/'`acosf.c

libm_a-acosf.obj: acosf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libm_a_CFLAGS) $(CFLAGS) -c -o libm_a-acosf.obj `if test -f 'acosf.c'; then $(CYGPATH_W) 'acosf.c'; else $(CYGPATH_W) '$(srcdir)/acosf.c'; fi`

libm_a-asincosf.o: asincosf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libm_a_CFLAGS) $(CFLAGS) -c -o libm_a-asincosf.o `test -f 'asincosf.c' || echo '$(srcdir)/'`asincosf.c

libm_a-asincosf.obj: asincosf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libm_a_CFLAGS) $(CFLAGS) -c -o libm_a-asincosf.obj `if test -f 'asincosf.c'; then $(CYGPATH_W) 'asincosf.c'; else $(CYGPATH_W) '$(srcdir)/asincosf.c'; fi`

libm_a-asinf.o: asinf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libm_a_CFLAGS) $(CFLAGS) -c -o libm_a-asinf.o `test -f 'asinf.c' || echo '$(srcdir)/'`asinf.c

libm_a-asinf.obj: asinf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libm_a_CFLAGS) $(CFLAGS) -c -o libm_a-asinf.obj `if test -f 'asinf.c'; then $(CYGPATH_W) 'asinf.c'; else $(CYGPATH_W) '$(srcdir)/asinf.c'; fi`

libm_a-atan2f.o: atan2f.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libm_a_CFLAGS) $(CFLAGS) -c -o libm_a-atan2f.o `test -f 'atan2f.c' || echo '$(srcdir)/'`atan2f.c

libm_a-atan2f.obj: atan2f.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libm_a_CFLAGS) $(CFLAGS) -c -o libm_a-atan2f.obj `if test -f 'atan2f.c'; then $(CYGPATH_W) 'atan2f.c'; else $(CYGPATH_W) '$(srcdir)/atan2f.c'; fi`

libm_a-atanf.o: atanf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libm_a_CFLAGS) $(CFLAGS) -c -o libm_a-atanf.o `test -f 'atanf.c' || echo '$(srcdir)/'`atanf.c

libm_a-atanf.obj: atanf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libm_a_CFLAGS) $(CFLAGS) -c -o libm_a-atanf.obj `if test -f 'atanf.c'; then $(CYGPATH_W) 'atanf.c'; else $(CYGPATH_W) '$(srcdir)/atanf.c'; fi`

libm_a-ceilf.o: ceilf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libm_a_CFLAGS) $(CFLAGS) -c -o libm_a-ceilf.o `test -f 'ceilf.c' || echo '$(srcdir)/'`ceilf.c

libm_a-ceilf.obj: ceilf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libm_a_CFLAGS) $(CFLAGS) -c -o libm_a-ceilf.obj `if test -f 'ceilf.c'; then $(CYGPATH_W) 'ceilf.c'; else $(CYGPATH_W) '$(srcdir)/ceilf.c'; fi`

libm_a-cosf.o: cosf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libm_a_CFLAGS) $(CFLAGS) -c -o libm_a-cosf.o `test -f 'cosf.c' || echo '$(srcdir)/'`cosf.c

libm_a-cosf.obj: cosf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libm_a_CFLAGS) $(CFLAGS) -c -o libm_a-cosf.obj `if test -f 'cosf.c'; then $(CYGPATH_W) 'cosf.c'; else $(CYGPATH_W) '$(srcdir)/cosf.c'; fi`

libm_a-coshf.o: coshf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libm_a_CFLAGS) $(CFLAGS) -c -o libm_a-coshf.o `test -f 'coshf.c' || echo '$(srcdir)/'`coshf.c

libm_a-coshf.obj: coshf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libm_a_CFLAGS) $(CFLAGS) -c -o libm_a-coshf.obj `if test -f 'coshf.c'; then $(CYGPATH_W) 'coshf.c'; else $(CYGPATH_W) '$(srcdir)/coshf.c'; fi`

libm_a-cotf.o: cotf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libm_a_CFLAGS) $(CFLAGS) -c -o libm_a-cotf.o `test -f 'cotf.c' || echo '$(srcdir)/'`cotf.c

libm_a-cotf.obj: cotf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libm_a_CFLAGS) $(CFLAGS) -c -o libm_a-cotf.obj `if test -f 'cotf.c'; then $(CYGPATH_W) 'cotf.c'; else $(CYGPATH_W) '$(srcdir)/cotf.c'; fi`

libm_a-errno.o: errno.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libm_a_CFLAGS) $(CFLAGS) -c -o libm_a-errno.o `test -f 'errno.c' || echo '$(srcdir)/'`errno.c

libm_a-errno.obj: errno.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libm_a_CFLAGS) $(CFLAGS) -c -o libm_a-errno.obj `if test -f 'errno.c'; then $(CYGPATH_W) 'errno.c'; else $(CYGPATH_W) '$(srcdir)/errno.c'; fi`

libm_a-expf.o: expf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libm_a_CFLAGS) $(CFLAGS) -c -o libm_a-expf.o `test -f 'expf.c' || echo '$(srcdir)/'`expf.c

libm_a-expf.obj: expf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libm_a_CFLAGS) $(CFLAGS) -c -o libm_a-expf.obj `if test -f 'expf.c'; then $(CYGPATH_W) 'expf.c'; else $(CYGPATH_W) '$(srcdir)/expf.c'; fi`

libm_a-fabsf.o: fabsf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libm_a_CFLAGS) $(CFLAGS) -c -o libm_a-fabsf.o `test -f 'fabsf.c' || echo '$(srcdir)/'`fabsf.c

libm_a-fabsf.obj: fabsf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libm_a_CFLAGS) $(CFLAGS) -c -o libm_a-fabsf.obj `if test -f 'fabsf.c'; then $(CYGPATH_W) 'fabsf.c'; else $(CYGPATH_W) '$(srcdir)/fabsf.c'; fi`

libm_a-floorf.o: floorf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libm_a_CFLAGS) $(CFLAGS) -c -o libm_a-floorf.o `test -f 'floorf.c' || echo '$(srcdir)/'`floorf.c

libm_a-floorf.obj: floorf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libm_a_CFLAGS) $(CFLAGS) -c -o libm_a-floorf.obj `if test -f 'floorf.c'; then $(CYGPATH_W) 'floorf.c'; else $(CYGPATH_W) '$(srcdir)/floorf.c'; fi`

libm_a-frexpf.o: frexpf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libm_a_CFLAGS) $(CFLAGS) -c -o libm_a-frexpf.o `test -f 'frexpf.c' || echo '$(srcdir)/'`frexpf.c

libm_a-frexpf.obj: frexpf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libm_a_CFLAGS) $(CFLAGS) -c -o libm_a-frexpf.obj `if test -f 'frexpf.c'; then $(CYGPATH_W) 'frexpf.c'; else $(CYGPATH_W) '$(srcdir)/frexpf.c'; fi`

libm_a-isinf.o: isinf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libm_a_CFLAGS) $(CFLAGS) -c -o libm_a-isinf.o `test -f 'isinf.c' || echo '$(srcdir)/'`isinf.c

libm_a-isinf.obj: isinf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libm_a_CFLAGS) $(CFLAGS) -c -o libm_a-isinf.obj `if test -f 'isinf.c'; then $(CYGPATH_W) 'isinf.c'; else $(CYGPATH_W) '$(srcdir)/isinf.c'; fi`

libm_a-isnan.o: isnan.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libm_a_CFLAGS) $(CFLAGS) -c -o libm_a-isnan.o `test -f 'isnan.c' || echo '$(srcdir)/'`isnan.c

libm_a-isnan.obj: isnan.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libm_a_CFLAGS) $(CFLAGS) -c -o libm_a-isnan.obj `if test -f 'isnan.c'; then $(CYGPATH_W) 'isnan.c'; else $(CYGPATH_W) '$(srcdir)/isnan.c'; fi`

libm_a-ldexpf.o: ldexpf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libm_a_CFLAGS) $(CFLAGS) -c -o libm_a-ldexpf.o `test -f 'ldexpf.c' || echo '$(srcdir)/'`ldexpf.c

libm_a-ldexpf.obj: ldexpf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libm_a_CFLAGS) $(CFLAGS) -c -o libm_a-ldexpf.obj `if test -f 'ldexpf.c'; then $(CYGPATH_W) 'ldexpf.c'; else $(CYGPATH_W) '$(srcdir)/ldexpf.c'; fi`

libm_a-log10f.o: log10f.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libm_a_CFLAGS) $(CFLAGS) -c -o libm_a-log10f.o `test -f 'log10f.c' || echo '$(srcdir)/'`log10f.c

libm_a-log10f.obj: log10f.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libm_a_CFLAGS) $(CFLAGS) -c -o libm_a-log10f.obj `if test -f 'log10f.c'; then $(CYGPATH_W) 'log10f.c'; else $(CYGPATH_W) '$(srcdir)/log10f.c'; fi`

libm_a-logf.o: logf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libm_a_CFLAGS) $(CFLAGS) -c -o libm_a-logf.o `test -f 'logf.c' || echo '$(srcdir)/'`logf.c

libm_a-logf.obj: logf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libm_a_CFLAGS) $(CFLAGS) -c -o libm_a-logf.obj `if test -f 'logf.c'; then $(CYGPATH_W) 'logf.c'; else $(CYGPATH_W) '$(srcdir)/logf.c'; fi`

libm_a-modff.o: modff.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libm_a_CFLAGS) $(CFLAGS) -c -o libm_a-modff.o `test -f 'modff.c' || echo '$(srcdir)/'`modff.c

libm_a-modff.obj: modff.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libm_a_CFLAGS) $(CFLAGS) -c -o libm_a-modff.obj `if test -f 'modff.c'; then $(CYGPATH_W) 'modff.c'; else $(CYGPATH_W) '$(srcdir)/modff.c'; fi`

libm_a-powf.o: powf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libm_a_CFLAGS) $(CFLAGS) -c -o libm_a-powf.o `test -f 'powf.c' || echo '$(srcdir)/'`powf.c

libm_a-powf.obj: powf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libm_a_CFLAGS) $(CFLAGS) -c -o libm_a-powf.obj `if test -f 'powf.c'; then $(CYGPATH_W) 'powf.c'; else $(CYGPATH_W) '$(srcdir)/powf.c'; fi`

libm_a-sincosf.o: sincosf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libm_a_CFLAGS) $(CFLAGS) -c -o libm_a-sincosf.o `test -f 'sincosf.c' || echo '$(srcdir)/'`sincosf.c

libm_a-sincosf.obj: sincosf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libm_a_CFLAGS) $(CFLAGS) -c -o libm_a-sincosf.obj `if test -f 'sincosf.c'; then $(CYGPATH_W) 'sincosf.c'; else $(CYGPATH_W) '$(srcdir)/sincosf.c'; fi`

libm_a-sincoshf.o: sincoshf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libm_a_CFLAGS) $(CFLAGS) -c -o libm_a-sincoshf.o `test -f 'sincoshf.c' || echo '$(srcdir)/'`sincoshf.c

libm_a-sincoshf.obj: sincoshf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libm_a_CFLAGS) $(CFLAGS) -c -o libm_a-sincoshf.obj `if test -f 'sincoshf.c'; then $(CYGPATH_W) 'sincoshf.c'; else $(CYGPATH_W) '$(srcdir)/sincoshf.c'; fi`

libm_a-sinf.o: sinf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libm_a_CFLAGS) $(CFLAGS) -c -o libm_a-sinf.o `test -f 'sinf.c' || echo '$(srcdir)/'`sinf.c

libm_a-sinf.obj: sinf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libm_a_CFLAGS) $(CFLAGS) -c -o libm_a-sinf.obj `if test -f 'sinf.c'; then $(CYGPATH_W) 'sinf.c'; else $(CYGPATH_W) '$(srcdir)/sinf.c'; fi`

libm_a-sinhf.o: sinhf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libm_a_CFLAGS) $(CFLAGS) -c -o libm_a-sinhf.o `test -f 'sinhf.c' || echo '$(srcdir)/'`sinhf.c

libm_a-sinhf.obj: sinhf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libm_a_CFLAGS) $(CFLAGS) -c -o libm_a-sinhf.obj `if test -f 'sinhf.c'; then $(CYGPATH_W) 'sinhf.c'; else $(CYGPATH_W) '$(srcdir)/sinhf.c'; fi`

libm_a-sqrtf.o: sqrtf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libm_a_CFLAGS) $(CFLAGS) -c -o libm_a-sqrtf.o `test -f 'sqrtf.c' || echo '$(srcdir)/'`sqrtf.c

libm_a-sqrtf.obj: sqrtf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libm_a_CFLAGS) $(CFLAGS) -c -o libm_a-sqrtf.obj `if test -f 'sqrtf.c'; then $(CYGPATH_W) 'sqrtf.c'; else $(CYGPATH_W) '$(srcdir)/sqrtf.c'; fi`

libm_a-tancotf.o: tancotf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libm_a_CFLAGS) $(CFLAGS) -c -o libm_a-tancotf.o `test -f 'tancotf.c' || echo '$(srcdir)/'`tancotf.c

libm_a-tancotf.obj: tancotf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libm_a_CFLAGS) $(CFLAGS) -c -o libm_a-tancotf.obj `if test -f 'tancotf.c'; then $(CYGPATH_W) 'tancotf.c'; else $(CYGPATH_W) '$(srcdir)/tancotf.c'; fi`

libm_a-tanf.o: tanf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libm_a_CFLAGS) $(CFLAGS) -c -o libm_a-tanf.o `test -f 'tanf.c' || echo '$(srcdir)/'`tanf.c

libm_a-tanf.obj: tanf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libm_a_CFLAGS) $(CFLAGS) -c -o libm_a-tanf.obj `if test -f 'tanf.c'; then $(CYGPATH_W) 'tanf.c'; else $(CYGPATH_W) '$(srcdir)/tanf.c'; fi`

libm_a-tanhf.o: tanhf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libm_a_CFLAGS) $(CFLAGS) -c -o libm_a-tanhf.o `test -f 'tanhf.c' || echo '$(srcdir)/'`tanhf.c

libm_a-tanhf.obj: tanhf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libm_a_CFLAGS) $(CFLAGS) -c -o libm_a-tanhf.obj `if test -f 'tanhf.c'; then $(CYGPATH_W) 'tanhf.c'; else $(CYGPATH_W) '$(srcdir)/tanhf.c'; fi`

libme_a-acosf.o: acosf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libme_a_CFLAGS) $(CFLAGS) -c -o libme_a-acosf.o `test -f 'acosf.c' || echo '$(srcdir)/'`acosf.c

libme_a-acosf.obj: acosf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libme_a_CFLAGS) $(CFLAGS) -c -o libme_a-acosf.obj `if test -f 'acosf.c'; then $(CYGPATH_W) 'acosf.c'; else $(CYGPATH_W) '$(srcdir)/acosf.c'; fi`

libme_a-asincosf.o: asincosf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libme_a_CFLAGS) $(CFLAGS) -c -o libme_a-asincosf.o `test -f 'asincosf.c' || echo '$(srcdir)/'`asincosf.c

libme_a-asincosf.obj: asincosf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libme_a_CFLAGS) $(CFLAGS) -c -o libme_a-asincosf.obj `if test -f 'asincosf.c'; then $(CYGPATH_W) 'asincosf.c'; else $(CYGPATH_W) '$(srcdir)/asincosf.c'; fi`

libme_a-asinf.o: asinf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libme_a_CFLAGS) $(CFLAGS) -c -o libme_a-asinf.o `test -f 'asinf.c' || echo '$(srcdir)/'`asinf.c

libme_a-asinf.obj: asinf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libme_a_CFLAGS) $(CFLAGS) -c -o libme_a-asinf.obj `if test -f 'asinf.c'; then $(CYGPATH_W) 'asinf.c'; else $(CYGPATH_W) '$(srcdir)/asinf.c'; fi`

libme_a-atan2f.o: atan2f.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libme_a_CFLAGS) $(CFLAGS) -c -o libme_a-atan2f.o `test -f 'atan2f.c' || echo '$(srcdir)/'`atan2f.c

libme_a-atan2f.obj: atan2f.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libme_a_CFLAGS) $(CFLAGS) -c -o libme_a-atan2f.obj `if test -f 'atan2f.c'; then $(CYGPATH_W) 'atan2f.c'; else $(CYGPATH_W) '$(srcdir)/atan2f.c'; fi`

libme_a-atanf.o: atanf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libme_a_CFLAGS) $(CFLAGS) -c -o libme_a-atanf.o `test -f 'atanf.c' || echo '$(srcdir)/'`atanf.c

libme_a-atanf.obj: atanf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libme_a_CFLAGS) $(CFLAGS) -c -o libme_a-atanf.obj `if test -f 'atanf.c'; then $(CYGPATH_W) 'atanf.c'; else $(CYGPATH_W) '$(srcdir)/atanf.c'; fi`

libme_a-ceilf.o: ceilf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libme_a_CFLAGS) $(CFLAGS) -c -o libme_a-ceilf.o `test -f 'ceilf.c' || echo '$(srcdir)/'`ceilf.c

libme_a-ceilf.obj: ceilf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libme_a_CFLAGS) $(CFLAGS) -c -o libme_a-ceilf.obj `if test -f 'ceilf.c'; then $(CYGPATH_W) 'ceilf.c'; else $(CYGPATH_W) '$(srcdir)/ceilf.c'; fi`

libme_a-cosf.o: cosf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libme_a_CFLAGS) $(CFLAGS) -c -o libme_a-cosf.o `test -f 'cosf.c' || echo '$(srcdir)/'`cosf.c

libme_a-cosf.obj: cosf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libme_a_CFLAGS) $(CFLAGS) -c -o libme_a-cosf.obj `if test -f 'cosf.c'; then $(CYGPATH_W) 'cosf.c'; else $(CYGPATH_W) '$(srcdir)/cosf.c'; fi`

libme_a-coshf.o: coshf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libme_a_CFLAGS) $(CFLAGS) -c -o libme_a-coshf.o `test -f 'coshf.c' || echo '$(srcdir)/'`coshf.c

libme_a-coshf.obj: coshf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libme_a_CFLAGS) $(CFLAGS) -c -o libme_a-coshf.obj `if test -f 'coshf.c'; then $(CYGPATH_W) 'coshf.c'; else $(CYGPATH_W) '$(srcdir)/coshf.c'; fi`

libme_a-cotf.o: cotf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libme_a_CFLAGS) $(CFLAGS) -c -o libme_a-cotf.o `test -f 'cotf.c' || echo '$(srcdir)/'`cotf.c

libme_a-cotf.obj: cotf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libme_a_CFLAGS) $(CFLAGS) -c -o libme_a-cotf.obj `if test -f 'cotf.c'; then $(CYGPATH_W) 'cotf.c'; else $(CYGPATH_W) '$(srcdir)/cotf.c'; fi`

libme_a-errno.o: errno.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libme_a_CFLAGS) $(CFLAGS) -c -o libme_a-errno.o `test -f 'errno.c' || echo '$(srcdir)/'`errno.c

libme_a-errno.obj: errno.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libme_a_CFLAGS) $(CFLAGS) -c -o libme_a-errno.obj `if test -f 'errno.c'; then $(CYGPATH_W) 'errno.c'; else $(CYGPATH_W) '$(srcdir)/errno.c'; fi`

libme_a-expf.o: expf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libme_a_CFLAGS) $(CFLAGS) -c -o libme_a-expf.o `test -f 'expf.c' || echo '$(srcdir)/'`expf.c

libme_a-expf.obj: expf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libme_a_CFLAGS) $(CFLAGS) -c -o libme_a-expf.obj `if test -f 'expf.c'; then $(CYGPATH_W) 'expf.c'; else $(CYGPATH_W) '$(srcdir)/expf.c'; fi`

libme_a-fabsf.o: fabsf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libme_a_CFLAGS) $(CFLAGS) -c -o libme_a-fabsf.o `test -f 'fabsf.c' || echo '$(srcdir)/'`fabsf.c

libme_a-fabsf.obj: fabsf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libme_a_CFLAGS) $(CFLAGS) -c -o libme_a-fabsf.obj `if test -f 'fabsf.c'; then $(CYGPATH_W) 'fabsf.c'; else $(CYGPATH_W) '$(srcdir)/fabsf.c'; fi`

libme_a-floorf.o: floorf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libme_a_CFLAGS) $(CFLAGS) -c -o libme_a-floorf.o `test -f 'floorf.c' || echo '$(srcdir)/'`floorf.c

libme_a-floorf.obj: floorf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libme_a_CFLAGS) $(CFLAGS) -c -o libme_a-floorf.obj `if test -f 'floorf.c'; then $(CYGPATH_W) 'floorf.c'; else $(CYGPATH_W) '$(srcdir)/floorf.c'; fi`

libme_a-frexpf.o: frexpf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libme_a_CFLAGS) $(CFLAGS) -c -o libme_a-frexpf.o `test -f 'frexpf.c' || echo '$(srcdir)/'`frexpf.c

libme_a-frexpf.obj: frexpf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libme_a_CFLAGS) $(CFLAGS) -c -o libme_a-frexpf.obj `if test -f 'frexpf.c'; then $(CYGPATH_W) 'frexpf.c'; else $(CYGPATH_W) '$(srcdir)/frexpf.c'; fi`

libme_a-isinf.o: isinf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libme_a_CFLAGS) $(CFLAGS) -c -o libme_a-isinf.o `test -f 'isinf.c' || echo '$(srcdir)/'`isinf.c

libme_a-isinf.obj: isinf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libme_a_CFLAGS) $(CFLAGS) -c -o libme_a-isinf.obj `if test -f 'isinf.c'; then $(CYGPATH_W) 'isinf.c'; else $(CYGPATH_W) '$(srcdir)/isinf.c'; fi`

libme_a-isnan.o: isnan.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libme_a_CFLAGS) $(CFLAGS) -c -o libme_a-isnan.o `test -f 'isnan.c' || echo '$(srcdir)/'`isnan.c

libme_a-isnan.obj: isnan.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libme_a_CFLAGS) $(CFLAGS) -c -o libme_a-isnan.obj `if test -f 'isnan.c'; then $(CYGPATH_W) 'isnan.c'; else $(CYGPATH_W) '$(srcdir)/isnan.c'; fi`

libme_a-ldexpf.o: ldexpf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libme_a_CFLAGS) $(CFLAGS) -c -o libme_a-ldexpf.o `test -f 'ldexpf.c' || echo '$(srcdir)/'`ldexpf.c

libme_a-ldexpf.obj: ldexpf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libme_a_CFLAGS) $(CFLAGS) -c -o libme_a-ldexpf.obj `if test -f 'ldexpf.c'; then $(CYGPATH_W) 'ldexpf.c'; else $(CYGPATH_W) '$(srcdir)/ldexpf.c'; fi`

libme_a-log10f.o: log10f.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libme_a_CFLAGS) $(CFLAGS) -c -o libme_a-log10f.o `test -f 'log10f.c' || echo '$(srcdir)/'`log10f.c

libme_a-log10f.obj: log10f.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libme_a_CFLAGS) $(CFLAGS) -c -o libme_a-log10f.obj `if test -f 'log10f.c'; then $(CYGPATH_W) 'log10f.c'; else $(CYGPATH_W) '$(srcdir)/log10f.c'; fi`

libme_a-logf.o: logf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libme_a_CFLAGS) $(CFLAGS) -c -o libme_a-logf.o `test -f 'logf.c' || echo '$(srcdir)/'`logf.c

libme_a-logf.obj: logf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libme_a_CFLAGS) $(CFLAGS) -c -o libme_a-logf.obj `if test -f 'logf.c'; then $(CYGPATH_W) 'logf.c'; else $(CYGPATH_W) '$(srcdir)/logf.c'; fi`

libme_a-modff.o: modff.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libme_a_CFLAGS) $(CFLAGS) -c -o libme_a-modff.o `test -f 'modff.c' || echo '$(srcdir)/'`modff.c

libme_a-modff.obj: modff.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libme_a_CFLAGS) $(CFLAGS) -c -o libme_a-modff.obj `if test -f 'modff.c'; then $(CYGPATH_W) 'modff.c'; else $(CYGPATH_W) '$(srcdir)/modff.c'; fi`

libme_a-powf.o: powf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libme_a_CFLAGS) $(CFLAGS) -c -o libme_a-powf.o `test -f 'powf.c' || echo '$(srcdir)/'`powf.c

libme_a-powf.obj: powf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libme_a_CFLAGS) $(CFLAGS) -c -o libme_a-powf.obj `if test -f 'powf.c'; then $(CYGPATH_W) 'powf.c'; else $(CYGPATH_W) '$(srcdir)/powf.c'; fi`

libme_a-sincosf.o: sincosf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libme_a_CFLAGS) $(CFLAGS) -c -o libme_a-sincosf.o `test -f 'sincosf.c' || echo '$(srcdir)/'`sincosf.c

libme_a-sincosf.obj: sincosf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libme_a_CFLAGS) $(CFLAGS) -c -o libme_a-sincosf.obj `if test -f 'sincosf.c'; then $(CYGPATH_W) 'sincosf.c'; else $(CYGPATH_W) '$(srcdir)/sincosf.c'; fi`

libme_a-sincoshf.o: sincoshf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libme_a_CFLAGS) $(CFLAGS) -c -o libme_a-sincoshf.o `test -f 'sincoshf.c' || echo '$(srcdir)/'`sincoshf.c

libme_a-sincoshf.obj: sincoshf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libme_a_CFLAGS) $(CFLAGS) -c -o libme_a-sincoshf.obj `if test -f 'sincoshf.c'; then $(CYGPATH_W) 'sincoshf.c'; else $(CYGPATH_W) '$(srcdir)/sincoshf.c'; fi`

libme_a-sinf.o: sinf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libme_a_CFLAGS) $(CFLAGS) -c -o libme_a-sinf.o `test -f 'sinf.c' || echo '$(srcdir)/'`sinf.c

libme_a-sinf.obj: sinf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libme_a_CFLAGS) $(CFLAGS) -c -o libme_a-sinf.obj `if test -f 'sinf.c'; then $(CYGPATH_W) 'sinf.c'; else $(CYGPATH_W) '$(srcdir)/sinf.c'; fi`

libme_a-sinhf.o: sinhf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libme_a_CFLAGS) $(CFLAGS) -c -o libme_a-sinhf.o `test -f 'sinhf.c' || echo '$(srcdir)/'`sinhf.c

libme_a-sinhf.obj: sinhf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libme_a_CFLAGS) $(CFLAGS) -c -o libme_a-sinhf.obj `if test -f 'sinhf.c'; then $(CYGPATH_W) 'sinhf.c'; else $(CYGPATH_W) '$(srcdir)/sinhf.c'; fi`

libme_a-sqrtf.o: sqrtf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libme_a_CFLAGS) $(CFLAGS) -c -o libme_a-sqrtf.o `test -f 'sqrtf.c' || echo '$(srcdir)/'`sqrtf.c

libme_a-sqrtf.obj: sqrtf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libme_a_CFLAGS) $(CFLAGS) -c -o libme_a-sqrtf.obj `if test -f 'sqrtf.c'; then $(CYGPATH_W) 'sqrtf.c'; else $(CYGPATH_W) '$(srcdir)/sqrtf.c'; fi`

libme_a-tancotf.o: tancotf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libme_a_CFLAGS) $(CFLAGS) -c -o libme_a-tancotf.o `test -f 'tancotf.c' || echo '$(srcdir)/'`tancotf.c

libme_a-tancotf.obj: tancotf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libme_a_CFLAGS) $(CFLAGS) -c -o libme_a-tancotf.obj `if test -f 'tancotf.c'; then $(CYGPATH_W) 'tancotf.c'; else $(CYGPATH_W) '$(srcdir)/tancotf.c'; fi`

libme_a-tanf.o: tanf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libme_a_CFLAGS) $(CFLAGS) -c -o libme_a-tanf.o `test -f 'tanf.c' || echo '$(srcdir)/'`tanf.c

libme_a-tanf.obj: tanf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libme_a_CFLAGS) $(CFLAGS) -c -o libme_a-tanf.obj `if test -f 'tanf.c'; then $(CYGPATH_W) 'tanf.c'; else $(CYGPATH_W) '$(srcdir)/tanf.c'; fi`

libme_a-tanhf.o: tanhf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libme_a_CFLAGS) $(CFLAGS) -c -o libme_a-tanhf.o `test -f 'tanhf.c' || echo '$(srcdir)/'`tanhf.c

libme_a-tanhf.obj: tanhf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libme_a_CFLAGS) $(CFLAGS) -c -o libme_a-tanhf.obj `if test -f 'tanhf.c'; then $(CYGPATH_W) 'tanhf.c'; else $(CYGPATH_W) '$(srcdir)/tanhf.c'; fi`

libmeo_a-acosf.o: acosf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmeo_a_CFLAGS) $(CFLAGS) -c -o libmeo_a-acosf.o `test -f 'acosf.c' || echo '$(srcdir)/'`acosf.c

libmeo_a-acosf.obj: acosf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmeo_a_CFLAGS) $(CFLAGS) -c -o libmeo_a-acosf.obj `if test -f 'acosf.c'; then $(CYGPATH_W) 'acosf.c'; else $(CYGPATH_W) '$(srcdir)/acosf.c'; fi`

libmeo_a-asincosf.o: asincosf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmeo_a_CFLAGS) $(CFLAGS) -c -o libmeo_a-asincosf.o `test -f 'asincosf.c' || echo '$(srcdir)/'`asincosf.c

libmeo_a-asincosf.obj: asincosf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmeo_a_CFLAGS) $(CFLAGS) -c -o libmeo_a-asincosf.obj `if test -f 'asincosf.c'; then $(CYGPATH_W) 'asincosf.c'; else $(CYGPATH_W) '$(srcdir)/asincosf.c'; fi`

libmeo_a-asinf.o: asinf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmeo_a_CFLAGS) $(CFLAGS) -c -o libmeo_a-asinf.o `test -f 'asinf.c' || echo '$(srcdir)/'`asinf.c

libmeo_a-asinf.obj: asinf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmeo_a_CFLAGS) $(CFLAGS) -c -o libmeo_a-asinf.obj `if test -f 'asinf.c'; then $(CYGPATH_W) 'asinf.c'; else $(CYGPATH_W) '$(srcdir)/asinf.c'; fi`

libmeo_a-atan2f.o: atan2f.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmeo_a_CFLAGS) $(CFLAGS) -c -o libmeo_a-atan2f.o `test -f 'atan2f.c' || echo '$(srcdir)/'`atan2f.c

libmeo_a-atan2f.obj: atan2f.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmeo_a_CFLAGS) $(CFLAGS) -c -o libmeo_a-atan2f.obj `if test -f 'atan2f.c'; then $(CYGPATH_W) 'atan2f.c'; else $(CYGPATH_W) '$(srcdir)/atan2f.c'; fi`

libmeo_a-atanf.o: atanf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmeo_a_CFLAGS) $(CFLAGS) -c -o libmeo_a-atanf.o `test -f 'atanf.c' || echo '$(srcdir)/'`atanf.c

libmeo_a-atanf.obj: atanf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmeo_a_CFLAGS) $(CFLAGS) -c -o libmeo_a-atanf.obj `if test -f 'atanf.c'; then $(CYGPATH_W) 'atanf.c'; else $(CYGPATH_W) '$(srcdir)/atanf.c'; fi`

libmeo_a-ceilf.o: ceilf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmeo_a_CFLAGS) $(CFLAGS) -c -o libmeo_a-ceilf.o `test -f 'ceilf.c' || echo '$(srcdir)/'`ceilf.c

libmeo_a-ceilf.obj: ceilf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmeo_a_CFLAGS) $(CFLAGS) -c -o libmeo_a-ceilf.obj `if test -f 'ceilf.c'; then $(CYGPATH_W) 'ceilf.c'; else $(CYGPATH_W) '$(srcdir)/ceilf.c'; fi`

libmeo_a-cosf.o: cosf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmeo_a_CFLAGS) $(CFLAGS) -c -o libmeo_a-cosf.o `test -f 'cosf.c' || echo '$(srcdir)/'`cosf.c

libmeo_a-cosf.obj: cosf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmeo_a_CFLAGS) $(CFLAGS) -c -o libmeo_a-cosf.obj `if test -f 'cosf.c'; then $(CYGPATH_W) 'cosf.c'; else $(CYGPATH_W) '$(srcdir)/cosf.c'; fi`

libmeo_a-coshf.o: coshf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmeo_a_CFLAGS) $(CFLAGS) -c -o libmeo_a-coshf.o `test -f 'coshf.c' || echo '$(srcdir)/'`coshf.c

libmeo_a-coshf.obj: coshf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmeo_a_CFLAGS) $(CFLAGS) -c -o libmeo_a-coshf.obj `if test -f 'coshf.c'; then $(CYGPATH_W) 'coshf.c'; else $(CYGPATH_W) '$(srcdir)/coshf.c'; fi`

libmeo_a-cotf.o: cotf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmeo_a_CFLAGS) $(CFLAGS) -c -o libmeo_a-cotf.o `test -f 'cotf.c' || echo '$(srcdir)/'`cotf.c

libmeo_a-cotf.obj: cotf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmeo_a_CFLAGS) $(CFLAGS) -c -o libmeo_a-cotf.obj `if test -f 'cotf.c'; then $(CYGPATH_W) 'cotf.c'; else $(CYGPATH_W) '$(srcdir)/cotf.c'; fi`

libmeo_a-errno.o: errno.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmeo_a_CFLAGS) $(CFLAGS) -c -o libmeo_a-errno.o `test -f 'errno.c' || echo '$(srcdir)/'`errno.c

libmeo_a-errno.obj: errno.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmeo_a_CFLAGS) $(CFLAGS) -c -o libmeo_a-errno.obj `if test -f 'errno.c'; then $(CYGPATH_W) 'errno.c'; else $(CYGPATH_W) '$(srcdir)/errno.c'; fi`

libmeo_a-expf.o: expf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmeo_a_CFLAGS) $(CFLAGS) -c -o libmeo_a-expf.o `test -f 'expf.c' || echo '$(srcdir)/'`expf.c

libmeo_a-expf.obj: expf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmeo_a_CFLAGS) $(CFLAGS) -c -o libmeo_a-expf.obj `if test -f 'expf.c'; then $(CYGPATH_W) 'expf.c'; else $(CYGPATH_W) '$(srcdir)/expf.c'; fi`

libmeo_a-fabsf.o: fabsf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmeo_a_CFLAGS) $(CFLAGS) -c -o libmeo_a-fabsf.o `test -f 'fabsf.c' || echo '$(srcdir)/'`fabsf.c

libmeo_a-fabsf.obj: fabsf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmeo_a_CFLAGS) $(CFLAGS) -c -o libmeo_a-fabsf.obj `if test -f 'fabsf.c'; then $(CYGPATH_W) 'fabsf.c'; else $(CYGPATH_W) '$(srcdir)/fabsf.c'; fi`

libmeo_a-floorf.o: floorf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmeo_a_CFLAGS) $(CFLAGS) -c -o libmeo_a-floorf.o `test -f 'floorf.c' || echo '$(srcdir)/'`floorf.c

libmeo_a-floorf.obj: floorf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmeo_a_CFLAGS) $(CFLAGS) -c -o libmeo_a-floorf.obj `if test -f 'floorf.c'; then $(CYGPATH_W) 'floorf.c'; else $(CYGPATH_W) '$(srcdir)/floorf.c'; fi`

libmeo_a-frexpf.o: frexpf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmeo_a_CFLAGS) $(CFLAGS) -c -o libmeo_a-frexpf.o `test -f 'frexpf.c' || echo '$(srcdir)/'`frexpf.c

libmeo_a-frexpf.obj: frexpf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmeo_a_CFLAGS) $(CFLAGS) -c -o libmeo_a-frexpf.obj `if test -f 'frexpf.c'; then $(CYGPATH_W) 'frexpf.c'; else $(CYGPATH_W) '$(srcdir)/frexpf.c'; fi`

libmeo_a-isinf.o: isinf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmeo_a_CFLAGS) $(CFLAGS) -c -o libmeo_a-isinf.o `test -f 'isinf.c' || echo '$(srcdir)/'`isinf.c

libmeo_a-isinf.obj: isinf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmeo_a_CFLAGS) $(CFLAGS) -c -o libmeo_a-isinf.obj `if test -f 'isinf.c'; then $(CYGPATH_W) 'isinf.c'; else $(CYGPATH_W) '$(srcdir)/isinf.c'; fi`

libmeo_a-isnan.o: isnan.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmeo_a_CFLAGS) $(CFLAGS) -c -o libmeo_a-isnan.o `test -f 'isnan.c' || echo '$(srcdir)/'`isnan.c

libmeo_a-isnan.obj: isnan.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmeo_a_CFLAGS) $(CFLAGS) -c -o libmeo_a-isnan.obj `if test -f 'isnan.c'; then $(CYGPATH_W) 'isnan.c'; else $(CYGPATH_W) '$(srcdir)/isnan.c'; fi`

libmeo_a-ldexpf.o: ldexpf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmeo_a_CFLAGS) $(CFLAGS) -c -o libmeo_a-ldexpf.o `test -f 'ldexpf.c' || echo '$(srcdir)/'`ldexpf.c

libmeo_a-ldexpf.obj: ldexpf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmeo_a_CFLAGS) $(CFLAGS) -c -o libmeo_a-ldexpf.obj `if test -f 'ldexpf.c'; then $(CYGPATH_W) 'ldexpf.c'; else $(CYGPATH_W) '$(srcdir)/ldexpf.c'; fi`

libmeo_a-log10f.o: log10f.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmeo_a_CFLAGS) $(CFLAGS) -c -o libmeo_a-log10f.o `test -f 'log10f.c' || echo '$(srcdir)/'`log10f.c

libmeo_a-log10f.obj: log10f.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmeo_a_CFLAGS) $(CFLAGS) -c -o libmeo_a-log10f.obj `if test -f 'log10f.c'; then $(CYGPATH_W) 'log10f.c'; else $(CYGPATH_W) '$(srcdir)/log10f.c'; fi`

libmeo_a-logf.o: logf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmeo_a_CFLAGS) $(CFLAGS) -c -o libmeo_a-logf.o `test -f 'logf.c' || echo '$(srcdir)/'`logf.c

libmeo_a-logf.obj: logf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmeo_a_CFLAGS) $(CFLAGS) -c -o libmeo_a-logf.obj `if test -f 'logf.c'; then $(CYGPATH_W) 'logf.c'; else $(CYGPATH_W) '$(srcdir)/logf.c'; fi`

libmeo_a-modff.o: modff.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmeo_a_CFLAGS) $(CFLAGS) -c -o libmeo_a-modff.o `test -f 'modff.c' || echo '$(srcdir)/'`modff.c

libmeo_a-modff.obj: modff.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmeo_a_CFLAGS) $(CFLAGS) -c -o libmeo_a-modff.obj `if test -f 'modff.c'; then $(CYGPATH_W) 'modff.c'; else $(CYGPATH_W) '$(srcdir)/modff.c'; fi`

libmeo_a-powf.o: powf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmeo_a_CFLAGS) $(CFLAGS) -c -o libmeo_a-powf.o `test -f 'powf.c' || echo '$(srcdir)/'`powf.c

libmeo_a-powf.obj: powf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmeo_a_CFLAGS) $(CFLAGS) -c -o libmeo_a-powf.obj `if test -f 'powf.c'; then $(CYGPATH_W) 'powf.c'; else $(CYGPATH_W) '$(srcdir)/powf.c'; fi`

libmeo_a-sincosf.o: sincosf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmeo_a_CFLAGS) $(CFLAGS) -c -o libmeo_a-sincosf.o `test -f 'sincosf.c' || echo '$(srcdir)/'`sincosf.c

libmeo_a-sincosf.obj: sincosf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmeo_a_CFLAGS) $(CFLAGS) -c -o libmeo_a-sincosf.obj `if test -f 'sincosf.c'; then $(CYGPATH_W) 'sincosf.c'; else $(CYGPATH_W) '$(srcdir)/sincosf.c'; fi`

libmeo_a-sincoshf.o: sincoshf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmeo_a_CFLAGS) $(CFLAGS) -c -o libmeo_a-sincoshf.o `test -f 'sincoshf.c' || echo '$(srcdir)/'`sincoshf.c

libmeo_a-sincoshf.obj: sincoshf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmeo_a_CFLAGS) $(CFLAGS) -c -o libmeo_a-sincoshf.obj `if test -f 'sincoshf.c'; then $(CYGPATH_W) 'sincoshf.c'; else $(CYGPATH_W) '$(srcdir)/sincoshf.c'; fi`

libmeo_a-sinf.o: sinf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmeo_a_CFLAGS) $(CFLAGS) -c -o libmeo_a-sinf.o `test -f 'sinf.c' || echo '$(srcdir)/'`sinf.c

libmeo_a-sinf.obj: sinf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmeo_a_CFLAGS) $(CFLAGS) -c -o libmeo_a-sinf.obj `if test -f 'sinf.c'; then $(CYGPATH_W) 'sinf.c'; else $(CYGPATH_W) '$(srcdir)/sinf.c'; fi`

libmeo_a-sinhf.o: sinhf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmeo_a_CFLAGS) $(CFLAGS) -c -o libmeo_a-sinhf.o `test -f 'sinhf.c' || echo '$(srcdir)/'`sinhf.c

libmeo_a-sinhf.obj: sinhf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmeo_a_CFLAGS) $(CFLAGS) -c -o libmeo_a-sinhf.obj `if test -f 'sinhf.c'; then $(CYGPATH_W) 'sinhf.c'; else $(CYGPATH_W) '$(srcdir)/sinhf.c'; fi`

libmeo_a-sqrtf.o: sqrtf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmeo_a_CFLAGS) $(CFLAGS) -c -o libmeo_a-sqrtf.o `test -f 'sqrtf.c' || echo '$(srcdir)/'`sqrtf.c

libmeo_a-sqrtf.obj: sqrtf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmeo_a_CFLAGS) $(CFLAGS) -c -o libmeo_a-sqrtf.obj `if test -f 'sqrtf.c'; then $(CYGPATH_W) 'sqrtf.c'; else $(CYGPATH_W) '$(srcdir)/sqrtf.c'; fi`

libmeo_a-tancotf.o: tancotf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmeo_a_CFLAGS) $(CFLAGS) -c -o libmeo_a-tancotf.o `test -f 'tancotf.c' || echo '$(srcdir)/'`tancotf.c

libmeo_a-tancotf.obj: tancotf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmeo_a_CFLAGS) $(CFLAGS) -c -o libmeo_a-tancotf.obj `if test -f 'tancotf.c'; then $(CYGPATH_W) 'tancotf.c'; else $(CYGPATH_W) '$(srcdir)/tancotf.c'; fi`

libmeo_a-tanf.o: tanf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmeo_a_CFLAGS) $(CFLAGS) -c -o libmeo_a-tanf.o `test -f 'tanf.c' || echo '$(srcdir)/'`tanf.c

libmeo_a-tanf.obj: tanf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmeo_a_CFLAGS) $(CFLAGS) -c -o libmeo_a-tanf.obj `if test -f 'tanf.c'; then $(CYGPATH_W) 'tanf.c'; else $(CYGPATH_W) '$(srcdir)/tanf.c'; fi`

libmeo_a-tanhf.o: tanhf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmeo_a_CFLAGS) $(CFLAGS) -c -o libmeo_a-tanhf.o `test -f 'tanhf.c' || echo '$(srcdir)/'`tanhf.c

libmeo_a-tanhf.obj: tanhf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmeo_a_CFLAGS) $(CFLAGS) -c -o libmeo_a-tanhf.obj `if test -f 'tanhf.c'; then $(CYGPATH_W) 'tanhf.c'; else $(CYGPATH_W) '$(srcdir)/tanhf.c'; fi`

libmeox_a-acosf.o: acosf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmeox_a_CFLAGS) $(CFLAGS) -c -o libmeox_a-acosf.o `test -f 'acosf.c' || echo '$(srcdir)/'`acosf.c

libmeox_a-acosf.obj: acosf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmeox_a_CFLAGS) $(CFLAGS) -c -o libmeox_a-acosf.obj `if test -f 'acosf.c'; then $(CYGPATH_W) 'acosf.c'; else $(CYGPATH_W) '$(srcdir)/acosf.c'; fi`

libmeox_a-asincosf.o: asincosf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmeox_a_CFLAGS) $(CFLAGS) -c -o libmeox_a-asincosf.o `test -f 'asincosf.c' || echo '$(srcdir)/'`asincosf.c

libmeox_a-asincosf.obj: asincosf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmeox_a_CFLAGS) $(CFLAGS) -c -o libmeox_a-asincosf.obj `if test -f 'asincosf.c'; then $(CYGPATH_W) 'asincosf.c'; else $(CYGPATH_W) '$(srcdir)/asincosf.c'; fi`

libmeox_a-asinf.o: asinf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmeox_a_CFLAGS) $(CFLAGS) -c -o libmeox_a-asinf.o `test -f 'asinf.c' || echo '$(srcdir)/'`asinf.c

libmeox_a-asinf.obj: asinf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmeox_a_CFLAGS) $(CFLAGS) -c -o libmeox_a-asinf.obj `if test -f 'asinf.c'; then $(CYGPATH_W) 'asinf.c'; else $(CYGPATH_W) '$(srcdir)/asinf.c'; fi`

libmeox_a-atan2f.o: atan2f.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmeox_a_CFLAGS) $(CFLAGS) -c -o libmeox_a-atan2f.o `test -f 'atan2f.c' || echo '$(srcdir)/'`atan2f.c

libmeox_a-atan2f.obj: atan2f.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmeox_a_CFLAGS) $(CFLAGS) -c -o libmeox_a-atan2f.obj `if test -f 'atan2f.c'; then $(CYGPATH_W) 'atan2f.c'; else $(CYGPATH_W) '$(srcdir)/atan2f.c'; fi`

libmeox_a-atanf.o: atanf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmeox_a_CFLAGS) $(CFLAGS) -c -o libmeox_a-atanf.o `test -f 'atanf.c' || echo '$(srcdir)/'`atanf.c

libmeox_a-atanf.obj: atanf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmeox_a_CFLAGS) $(CFLAGS) -c -o libmeox_a-atanf.obj `if test -f 'atanf.c'; then $(CYGPATH_W) 'atanf.c'; else $(CYGPATH_W) '$(srcdir)/atanf.c'; fi`

libmeox_a-ceilf.o: ceilf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmeox_a_CFLAGS) $(CFLAGS) -c -o libmeox_a-ceilf.o `test -f 'ceilf.c' || echo '$(srcdir)/'`ceilf.c

libmeox_a-ceilf.obj: ceilf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmeox_a_CFLAGS) $(CFLAGS) -c -o libmeox_a-ceilf.obj `if test -f 'ceilf.c'; then $(CYGPATH_W) 'ceilf.c'; else $(CYGPATH_W) '$(srcdir)/ceilf.c'; fi`

libmeox_a-cosf.o: cosf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmeox_a_CFLAGS) $(CFLAGS) -c -o libmeox_a-cosf.o `test -f 'cosf.c' || echo '$(srcdir)/'`cosf.c

libmeox_a-cosf.obj: cosf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmeox_a_CFLAGS) $(CFLAGS) -c -o libmeox_a-cosf.obj `if test -f 'cosf.c'; then $(CYGPATH_W) 'cosf.c'; else $(CYGPATH_W) '$(srcdir)/cosf.c'; fi`

libmeox_a-coshf.o: coshf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmeox_a_CFLAGS) $(CFLAGS) -c -o libmeox_a-coshf.o `test -f 'coshf.c' || echo '$(srcdir)/'`coshf.c

libmeox_a-coshf.obj: coshf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmeox_a_CFLAGS) $(CFLAGS) -c -o libmeox_a-coshf.obj `if test -f 'coshf.c'; then $(CYGPATH_W) 'coshf.c'; else $(CYGPATH_W) '$(srcdir)/coshf.c'; fi`

libmeox_a-cotf.o: cotf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmeox_a_CFLAGS) $(CFLAGS) -c -o libmeox_a-cotf.o `test -f 'cotf.c' || echo '$(srcdir)/'`cotf.c

libmeox_a-cotf.obj: cotf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmeox_a_CFLAGS) $(CFLAGS) -c -o libmeox_a-cotf.obj `if test -f 'cotf.c'; then $(CYGPATH_W) 'cotf.c'; else $(CYGPATH_W) '$(srcdir)/cotf.c'; fi`

libmeox_a-errno.o: errno.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmeox_a_CFLAGS) $(CFLAGS) -c -o libmeox_a-errno.o `test -f 'errno.c' || echo '$(srcdir)/'`errno.c

libmeox_a-errno.obj: errno.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmeox_a_CFLAGS) $(CFLAGS) -c -o libmeox_a-errno.obj `if test -f 'errno.c'; then $(CYGPATH_W) 'errno.c'; else $(CYGPATH_W) '$(srcdir)/errno.c'; fi`

libmeox_a-expf.o: expf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmeox_a_CFLAGS) $(CFLAGS) -c -o libmeox_a-expf.o `test -f 'expf.c' || echo '$(srcdir)/'`expf.c

libmeox_a-expf.obj: expf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmeox_a_CFLAGS) $(CFLAGS) -c -o libmeox_a-expf.obj `if test -f 'expf.c'; then $(CYGPATH_W) 'expf.c'; else $(CYGPATH_W) '$(srcdir)/expf.c'; fi`

libmeox_a-fabsf.o: fabsf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmeox_a_CFLAGS) $(CFLAGS) -c -o libmeox_a-fabsf.o `test -f 'fabsf.c' || echo '$(srcdir)/'`fabsf.c

libmeox_a-fabsf.obj: fabsf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmeox_a_CFLAGS) $(CFLAGS) -c -o libmeox_a-fabsf.obj `if test -f 'fabsf.c'; then $(CYGPATH_W) 'fabsf.c'; else $(CYGPATH_W) '$(srcdir)/fabsf.c'; fi`

libmeox_a-floorf.o: floorf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmeox_a_CFLAGS) $(CFLAGS) -c -o libmeox_a-floorf.o `test -f 'floorf.c' || echo '$(srcdir)/'`floorf.c

libmeox_a-floorf.obj: floorf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmeox_a_CFLAGS) $(CFLAGS) -c -o libmeox_a-floorf.obj `if test -f 'floorf.c'; then $(CYGPATH_W) 'floorf.c'; else $(CYGPATH_W) '$(srcdir)/floorf.c'; fi`

libmeox_a-frexpf.o: frexpf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmeox_a_CFLAGS) $(CFLAGS) -c -o libmeox_a-frexpf.o `test -f 'frexpf.c' || echo '$(srcdir)/'`frexpf.c

libmeox_a-frexpf.obj: frexpf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmeox_a_CFLAGS) $(CFLAGS) -c -o libmeox_a-frexpf.obj `if test -f 'frexpf.c'; then $(CYGPATH_W) 'frexpf.c'; else $(CYGPATH_W) '$(srcdir)/frexpf.c'; fi`

libmeox_a-isinf.o: isinf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmeox_a_CFLAGS) $(CFLAGS) -c -o libmeox_a-isinf.o `test -f 'isinf.c' || echo '$(srcdir)/'`isinf.c

libmeox_a-isinf.obj: isinf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmeox_a_CFLAGS) $(CFLAGS) -c -o libmeox_a-isinf.obj `if test -f 'isinf.c'; then $(CYGPATH_W) 'isinf.c'; else $(CYGPATH_W) '$(srcdir)/isinf.c'; fi`

libmeox_a-isnan.o: isnan.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmeox_a_CFLAGS) $(CFLAGS) -c -o libmeox_a-isnan.o `test -f 'isnan.c' || echo '$(srcdir)/'`isnan.c

libmeox_a-isnan.obj: isnan.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmeox_a_CFLAGS) $(CFLAGS) -c -o libmeox_a-isnan.obj `if test -f 'isnan.c'; then $(CYGPATH_W) 'isnan.c'; else $(CYGPATH_W) '$(srcdir)/isnan.c'; fi`

libmeox_a-ldexpf.o: ldexpf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmeox_a_CFLAGS) $(CFLAGS) -c -o libmeox_a-ldexpf.o `test -f 'ldexpf.c' || echo '$(srcdir)/'`ldexpf.c

libmeox_a-ldexpf.obj: ldexpf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmeox_a_CFLAGS) $(CFLAGS) -c -o libmeox_a-ldexpf.obj `if test -f 'ldexpf.c'; then $(CYGPATH_W) 'ldexpf.c'; else $(CYGPATH_W) '$(srcdir)/ldexpf.c'; fi`

libmeox_a-log10f.o: log10f.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmeox_a_CFLAGS) $(CFLAGS) -c -o libmeox_a-log10f.o `test -f 'log10f.c' || echo '$(srcdir)/'`log10f.c

libmeox_a-log10f.obj: log10f.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmeox_a_CFLAGS) $(CFLAGS) -c -o libmeox_a-log10f.obj `if test -f 'log10f.c'; then $(CYGPATH_W) 'log10f.c'; else $(CYGPATH_W) '$(srcdir)/log10f.c'; fi`

libmeox_a-logf.o: logf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmeox_a_CFLAGS) $(CFLAGS) -c -o libmeox_a-logf.o `test -f 'logf.c' || echo '$(srcdir)/'`logf.c

libmeox_a-logf.obj: logf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmeox_a_CFLAGS) $(CFLAGS) -c -o libmeox_a-logf.obj `if test -f 'logf.c'; then $(CYGPATH_W) 'logf.c'; else $(CYGPATH_W) '$(srcdir)/logf.c'; fi`

libmeox_a-modff.o: modff.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmeox_a_CFLAGS) $(CFLAGS) -c -o libmeox_a-modff.o `test -f 'modff.c' || echo '$(srcdir)/'`modff.c

libmeox_a-modff.obj: modff.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmeox_a_CFLAGS) $(CFLAGS) -c -o libmeox_a-modff.obj `if test -f 'modff.c'; then $(CYGPATH_W) 'modff.c'; else $(CYGPATH_W) '$(srcdir)/modff.c'; fi`

libmeox_a-powf.o: powf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmeox_a_CFLAGS) $(CFLAGS) -c -o libmeox_a-powf.o `test -f 'powf.c' || echo '$(srcdir)/'`powf.c

libmeox_a-powf.obj: powf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmeox_a_CFLAGS) $(CFLAGS) -c -o libmeox_a-powf.obj `if test -f 'powf.c'; then $(CYGPATH_W) 'powf.c'; else $(CYGPATH_W) '$(srcdir)/powf.c'; fi`

libmeox_a-sincosf.o: sincosf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmeox_a_CFLAGS) $(CFLAGS) -c -o libmeox_a-sincosf.o `test -f 'sincosf.c' || echo '$(srcdir)/'`sincosf.c

libmeox_a-sincosf.obj: sincosf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmeox_a_CFLAGS) $(CFLAGS) -c -o libmeox_a-sincosf.obj `if test -f 'sincosf.c'; then $(CYGPATH_W) 'sincosf.c'; else $(CYGPATH_W) '$(srcdir)/sincosf.c'; fi`

libmeox_a-sincoshf.o: sincoshf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmeox_a_CFLAGS) $(CFLAGS) -c -o libmeox_a-sincoshf.o `test -f 'sincoshf.c' || echo '$(srcdir)/'`sincoshf.c

libmeox_a-sincoshf.obj: sincoshf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmeox_a_CFLAGS) $(CFLAGS) -c -o libmeox_a-sincoshf.obj `if test -f 'sincoshf.c'; then $(CYGPATH_W) 'sincoshf.c'; else $(CYGPATH_W) '$(srcdir)/sincoshf.c'; fi`

libmeox_a-sinf.o: sinf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmeox_a_CFLAGS) $(CFLAGS) -c -o libmeox_a-sinf.o `test -f 'sinf.c' || echo '$(srcdir)/'`sinf.c

libmeox_a-sinf.obj: sinf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmeox_a_CFLAGS) $(CFLAGS) -c -o libmeox_a-sinf.obj `if test -f 'sinf.c'; then $(CYGPATH_W) 'sinf.c'; else $(CYGPATH_W) '$(srcdir)/sinf.c'; fi`

libmeox_a-sinhf.o: sinhf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmeox_a_CFLAGS) $(CFLAGS) -c -o libmeox_a-sinhf.o `test -f 'sinhf.c' || echo '$(srcdir)/'`sinhf.c

libmeox_a-sinhf.obj: sinhf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmeox_a_CFLAGS) $(CFLAGS) -c -o libmeox_a-sinhf.obj `if test -f 'sinhf.c'; then $(CYGPATH_W) 'sinhf.c'; else $(CYGPATH_W) '$(srcdir)/sinhf.c'; fi`

libmeox_a-sqrtf.o: sqrtf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmeox_a_CFLAGS) $(CFLAGS) -c -o libmeox_a-sqrtf.o `test -f 'sqrtf.c' || echo '$(srcdir)/'`sqrtf.c

libmeox_a-sqrtf.obj: sqrtf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmeox_a_CFLAGS) $(CFLAGS) -c -o libmeox_a-sqrtf.obj `if test -f 'sqrtf.c'; then $(CYGPATH_W) 'sqrtf.c'; else $(CYGPATH_W) '$(srcdir)/sqrtf.c'; fi`

libmeox_a-tancotf.o: tancotf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmeox_a_CFLAGS) $(CFLAGS) -c -o libmeox_a-tancotf.o `test -f 'tancotf.c' || echo '$(srcdir)/'`tancotf.c

libmeox_a-tancotf.obj: tancotf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmeox_a_CFLAGS) $(CFLAGS) -c -o libmeox_a-tancotf.obj `if test -f 'tancotf.c'; then $(CYGPATH_W) 'tancotf.c'; else $(CYGPATH_W) '$(srcdir)/tancotf.c'; fi`

libmeox_a-tanf.o: tanf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmeox_a_CFLAGS) $(CFLAGS) -c -o libmeox_a-tanf.o `test -f 'tanf.c' || echo '$(srcdir)/'`tanf.c

libmeox_a-tanf.obj: tanf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmeox_a_CFLAGS) $(CFLAGS) -c -o libmeox_a-tanf.obj `if test -f 'tanf.c'; then $(CYGPATH_W) 'tanf.c'; else $(CYGPATH_W) '$(srcdir)/tanf.c'; fi`

libmeox_a-tanhf.o: tanhf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmeox_a_CFLAGS) $(CFLAGS) -c -o libmeox_a-tanhf.o `test -f 'tanhf.c' || echo '$(srcdir)/'`tanhf.c

libmeox_a-tanhf.obj: tanhf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmeox_a_CFLAGS) $(CFLAGS) -c -o libmeox_a-tanhf.obj `if test -f 'tanhf.c'; then $(CYGPATH_W) 'tanhf.c'; else $(CYGPATH_W) '$(srcdir)/tanhf.c'; fi`

libmex_a-acosf.o: acosf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmex_a_CFLAGS) $(CFLAGS) -c -o libmex_a-acosf.o `test -f 'acosf.c' || echo '$(srcdir)/'`acosf.c

libmex_a-acosf.obj: acosf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmex_a_CFLAGS) $(CFLAGS) -c -o libmex_a-acosf.obj `if test -f 'acosf.c'; then $(CYGPATH_W) 'acosf.c'; else $(CYGPATH_W) '$(srcdir)/acosf.c'; fi`

libmex_a-asincosf.o: asincosf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmex_a_CFLAGS) $(CFLAGS) -c -o libmex_a-asincosf.o `test -f 'asincosf.c' || echo '$(srcdir)/'`asincosf.c

libmex_a-asincosf.obj: asincosf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmex_a_CFLAGS) $(CFLAGS) -c -o libmex_a-asincosf.obj `if test -f 'asincosf.c'; then $(CYGPATH_W) 'asincosf.c'; else $(CYGPATH_W) '$(srcdir)/asincosf.c'; fi`

libmex_a-asinf.o: asinf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmex_a_CFLAGS) $(CFLAGS) -c -o libmex_a-asinf.o `test -f 'asinf.c' || echo '$(srcdir)/'`asinf.c

libmex_a-asinf.obj: asinf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmex_a_CFLAGS) $(CFLAGS) -c -o libmex_a-asinf.obj `if test -f 'asinf.c'; then $(CYGPATH_W) 'asinf.c'; else $(CYGPATH_W) '$(srcdir)/asinf.c'; fi`

libmex_a-atan2f.o: atan2f.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmex_a_CFLAGS) $(CFLAGS) -c -o libmex_a-atan2f.o `test -f 'atan2f.c' || echo '$(srcdir)/'`atan2f.c

libmex_a-atan2f.obj: atan2f.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmex_a_CFLAGS) $(CFLAGS) -c -o libmex_a-atan2f.obj `if test -f 'atan2f.c'; then $(CYGPATH_W) 'atan2f.c'; else $(CYGPATH_W) '$(srcdir)/atan2f.c'; fi`

libmex_a-atanf.o: atanf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmex_a_CFLAGS) $(CFLAGS) -c -o libmex_a-atanf.o `test -f 'atanf.c' || echo '$(srcdir)/'`atanf.c

libmex_a-atanf.obj: atanf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmex_a_CFLAGS) $(CFLAGS) -c -o libmex_a-atanf.obj `if test -f 'atanf.c'; then $(CYGPATH_W) 'atanf.c'; else $(CYGPATH_W) '$(srcdir)/atanf.c'; fi`

libmex_a-ceilf.o: ceilf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmex_a_CFLAGS) $(CFLAGS) -c -o libmex_a-ceilf.o `test -f 'ceilf.c' || echo '$(srcdir)/'`ceilf.c

libmex_a-ceilf.obj: ceilf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmex_a_CFLAGS) $(CFLAGS) -c -o libmex_a-ceilf.obj `if test -f 'ceilf.c'; then $(CYGPATH_W) 'ceilf.c'; else $(CYGPATH_W) '$(srcdir)/ceilf.c'; fi`

libmex_a-cosf.o: cosf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmex_a_CFLAGS) $(CFLAGS) -c -o libmex_a-cosf.o `test -f 'cosf.c' || echo '$(srcdir)/'`cosf.c

libmex_a-cosf.obj: cosf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmex_a_CFLAGS) $(CFLAGS) -c -o libmex_a-cosf.obj `if test -f 'cosf.c'; then $(CYGPATH_W) 'cosf.c'; else $(CYGPATH_W) '$(srcdir)/cosf.c'; fi`

libmex_a-coshf.o: coshf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmex_a_CFLAGS) $(CFLAGS) -c -o libmex_a-coshf.o `test -f 'coshf.c' || echo '$(srcdir)/'`coshf.c

libmex_a-coshf.obj: coshf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmex_a_CFLAGS) $(CFLAGS) -c -o libmex_a-coshf.obj `if test -f 'coshf.c'; then $(CYGPATH_W) 'coshf.c'; else $(CYGPATH_W) '$(srcdir)/coshf.c'; fi`

libmex_a-cotf.o: cotf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmex_a_CFLAGS) $(CFLAGS) -c -o libmex_a-cotf.o `test -f 'cotf.c' || echo '$(srcdir)/'`cotf.c

libmex_a-cotf.obj: cotf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmex_a_CFLAGS) $(CFLAGS) -c -o libmex_a-cotf.obj `if test -f 'cotf.c'; then $(CYGPATH_W) 'cotf.c'; else $(CYGPATH_W) '$(srcdir)/cotf.c'; fi`

libmex_a-errno.o: errno.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmex_a_CFLAGS) $(CFLAGS) -c -o libmex_a-errno.o `test -f 'errno.c' || echo '$(srcdir)/'`errno.c

libmex_a-errno.obj: errno.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmex_a_CFLAGS) $(CFLAGS) -c -o libmex_a-errno.obj `if test -f 'errno.c'; then $(CYGPATH_W) 'errno.c'; else $(CYGPATH_W) '$(srcdir)/errno.c'; fi`

libmex_a-expf.o: expf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmex_a_CFLAGS) $(CFLAGS) -c -o libmex_a-expf.o `test -f 'expf.c' || echo '$(srcdir)/'`expf.c

libmex_a-expf.obj: expf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmex_a_CFLAGS) $(CFLAGS) -c -o libmex_a-expf.obj `if test -f 'expf.c'; then $(CYGPATH_W) 'expf.c'; else $(CYGPATH_W) '$(srcdir)/expf.c'; fi`

libmex_a-fabsf.o: fabsf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmex_a_CFLAGS) $(CFLAGS) -c -o libmex_a-fabsf.o `test -f 'fabsf.c' || echo '$(srcdir)/'`fabsf.c

libmex_a-fabsf.obj: fabsf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmex_a_CFLAGS) $(CFLAGS) -c -o libmex_a-fabsf.obj `if test -f 'fabsf.c'; then $(CYGPATH_W) 'fabsf.c'; else $(CYGPATH_W) '$(srcdir)/fabsf.c'; fi`

libmex_a-floorf.o: floorf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmex_a_CFLAGS) $(CFLAGS) -c -o libmex_a-floorf.o `test -f 'floorf.c' || echo '$(srcdir)/'`floorf.c

libmex_a-floorf.obj: floorf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmex_a_CFLAGS) $(CFLAGS) -c -o libmex_a-floorf.obj `if test -f 'floorf.c'; then $(CYGPATH_W) 'floorf.c'; else $(CYGPATH_W) '$(srcdir)/floorf.c'; fi`

libmex_a-frexpf.o: frexpf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmex_a_CFLAGS) $(CFLAGS) -c -o libmex_a-frexpf.o `test -f 'frexpf.c' || echo '$(srcdir)/'`frexpf.c

libmex_a-frexpf.obj: frexpf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmex_a_CFLAGS) $(CFLAGS) -c -o libmex_a-frexpf.obj `if test -f 'frexpf.c'; then $(CYGPATH_W) 'frexpf.c'; else $(CYGPATH_W) '$(srcdir)/frexpf.c'; fi`

libmex_a-isinf.o: isinf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmex_a_CFLAGS) $(CFLAGS) -c -o libmex_a-isinf.o `test -f 'isinf.c' || echo '$(srcdir)/'`isinf.c

libmex_a-isinf.obj: isinf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmex_a_CFLAGS) $(CFLAGS) -c -o libmex_a-isinf.obj `if test -f 'isinf.c'; then $(CYGPATH_W) 'isinf.c'; else $(CYGPATH_W) '$(srcdir)/isinf.c'; fi`

libmex_a-isnan.o: isnan.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmex_a_CFLAGS) $(CFLAGS) -c -o libmex_a-isnan.o `test -f 'isnan.c' || echo '$(srcdir)/'`isnan.c

libmex_a-isnan.obj: isnan.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmex_a_CFLAGS) $(CFLAGS) -c -o libmex_a-isnan.obj `if test -f 'isnan.c'; then $(CYGPATH_W) 'isnan.c'; else $(CYGPATH_W) '$(srcdir)/isnan.c'; fi`

libmex_a-ldexpf.o: ldexpf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmex_a_CFLAGS) $(CFLAGS) -c -o libmex_a-ldexpf.o `test -f 'ldexpf.c' || echo '$(srcdir)/'`ldexpf.c

libmex_a-ldexpf.obj: ldexpf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmex_a_CFLAGS) $(CFLAGS) -c -o libmex_a-ldexpf.obj `if test -f 'ldexpf.c'; then $(CYGPATH_W) 'ldexpf.c'; else $(CYGPATH_W) '$(srcdir)/ldexpf.c'; fi`

libmex_a-log10f.o: log10f.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmex_a_CFLAGS) $(CFLAGS) -c -o libmex_a-log10f.o `test -f 'log10f.c' || echo '$(srcdir)/'`log10f.c

libmex_a-log10f.obj: log10f.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmex_a_CFLAGS) $(CFLAGS) -c -o libmex_a-log10f.obj `if test -f 'log10f.c'; then $(CYGPATH_W) 'log10f.c'; else $(CYGPATH_W) '$(srcdir)/log10f.c'; fi`

libmex_a-logf.o: logf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmex_a_CFLAGS) $(CFLAGS) -c -o libmex_a-logf.o `test -f 'logf.c' || echo '$(srcdir)/'`logf.c

libmex_a-logf.obj: logf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmex_a_CFLAGS) $(CFLAGS) -c -o libmex_a-logf.obj `if test -f 'logf.c'; then $(CYGPATH_W) 'logf.c'; else $(CYGPATH_W) '$(srcdir)/logf.c'; fi`

libmex_a-modff.o: modff.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmex_a_CFLAGS) $(CFLAGS) -c -o libmex_a-modff.o `test -f 'modff.c' || echo '$(srcdir)/'`modff.c

libmex_a-modff.obj: modff.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmex_a_CFLAGS) $(CFLAGS) -c -o libmex_a-modff.obj `if test -f 'modff.c'; then $(CYGPATH_W) 'modff.c'; else $(CYGPATH_W) '$(srcdir)/modff.c'; fi`

libmex_a-powf.o: powf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmex_a_CFLAGS) $(CFLAGS) -c -o libmex_a-powf.o `test -f 'powf.c' || echo '$(srcdir)/'`powf.c

libmex_a-powf.obj: powf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmex_a_CFLAGS) $(CFLAGS) -c -o libmex_a-powf.obj `if test -f 'powf.c'; then $(CYGPATH_W) 'powf.c'; else $(CYGPATH_W) '$(srcdir)/powf.c'; fi`

libmex_a-sincosf.o: sincosf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmex_a_CFLAGS) $(CFLAGS) -c -o libmex_a-sincosf.o `test -f 'sincosf.c' || echo '$(srcdir)/'`sincosf.c

libmex_a-sincosf.obj: sincosf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmex_a_CFLAGS) $(CFLAGS) -c -o libmex_a-sincosf.obj `if test -f 'sincosf.c'; then $(CYGPATH_W) 'sincosf.c'; else $(CYGPATH_W) '$(srcdir)/sincosf.c'; fi`

libmex_a-sincoshf.o: sincoshf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmex_a_CFLAGS) $(CFLAGS) -c -o libmex_a-sincoshf.o `test -f 'sincoshf.c' || echo '$(srcdir)/'`sincoshf.c

libmex_a-sincoshf.obj: sincoshf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmex_a_CFLAGS) $(CFLAGS) -c -o libmex_a-sincoshf.obj `if test -f 'sincoshf.c'; then $(CYGPATH_W) 'sincoshf.c'; else $(CYGPATH_W) '$(srcdir)/sincoshf.c'; fi`

libmex_a-sinf.o: sinf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmex_a_CFLAGS) $(CFLAGS) -c -o libmex_a-sinf.o `test -f 'sinf.c' || echo '$(srcdir)/'`sinf.c

libmex_a-sinf.obj: sinf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmex_a_CFLAGS) $(CFLAGS) -c -o libmex_a-sinf.obj `if test -f 'sinf.c'; then $(CYGPATH_W) 'sinf.c'; else $(CYGPATH_W) '$(srcdir)/sinf.c'; fi`

libmex_a-sinhf.o: sinhf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmex_a_CFLAGS) $(CFLAGS) -c -o libmex_a-sinhf.o `test -f 'sinhf.c' || echo '$(srcdir)/'`sinhf.c

libmex_a-sinhf.obj: sinhf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmex_a_CFLAGS) $(CFLAGS) -c -o libmex_a-sinhf.obj `if test -f 'sinhf.c'; then $(CYGPATH_W) 'sinhf.c'; else $(CYGPATH_W) '$(srcdir)/sinhf.c'; fi`

libmex_a-sqrtf.o: sqrtf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmex_a_CFLAGS) $(CFLAGS) -c -o libmex_a-sqrtf.o `test -f 'sqrtf.c' || echo '$(srcdir)/'`sqrtf.c

libmex_a-sqrtf.obj: sqrtf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmex_a_CFLAGS) $(CFLAGS) -c -o libmex_a-sqrtf.obj `if test -f 'sqrtf.c'; then $(CYGPATH_W) 'sqrtf.c'; else $(CYGPATH_W) '$(srcdir)/sqrtf.c'; fi`

libmex_a-tancotf.o: tancotf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmex_a_CFLAGS) $(CFLAGS) -c -o libmex_a-tancotf.o `test -f 'tancotf.c' || echo '$(srcdir)/'`tancotf.c

libmex_a-tancotf.obj: tancotf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmex_a_CFLAGS) $(CFLAGS) -c -o libmex_a-tancotf.obj `if test -f 'tancotf.c'; then $(CYGPATH_W) 'tancotf.c'; else $(CYGPATH_W) '$(srcdir)/tancotf.c'; fi`

libmex_a-tanf.o: tanf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmex_a_CFLAGS) $(CFLAGS) -c -o libmex_a-tanf.o `test -f 'tanf.c' || echo '$(srcdir)/'`tanf.c

libmex_a-tanf.obj: tanf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmex_a_CFLAGS) $(CFLAGS) -c -o libmex_a-tanf.obj `if test -f 'tanf.c'; then $(CYGPATH_W) 'tanf.c'; else $(CYGPATH_W) '$(srcdir)/tanf.c'; fi`

libmex_a-tanhf.o: tanhf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmex_a_CFLAGS) $(CFLAGS) -c -o libmex_a-tanhf.o `test -f 'tanhf.c' || echo '$(srcdir)/'`tanhf.c

libmex_a-tanhf.obj: tanhf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmex_a_CFLAGS) $(CFLAGS) -c -o libmex_a-tanhf.obj `if test -f 'tanhf.c'; then $(CYGPATH_W) 'tanhf.c'; else $(CYGPATH_W) '$(srcdir)/tanhf.c'; fi`

libmo_a-acosf.o: acosf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmo_a_CFLAGS) $(CFLAGS) -c -o libmo_a-acosf.o `test -f 'acosf.c' || echo '$(srcdir)/'`acosf.c

libmo_a-acosf.obj: acosf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmo_a_CFLAGS) $(CFLAGS) -c -o libmo_a-acosf.obj `if test -f 'acosf.c'; then $(CYGPATH_W) 'acosf.c'; else $(CYGPATH_W) '$(srcdir)/acosf.c'; fi`

libmo_a-asincosf.o: asincosf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmo_a_CFLAGS) $(CFLAGS) -c -o libmo_a-asincosf.o `test -f 'asincosf.c' || echo '$(srcdir)/'`asincosf.c

libmo_a-asincosf.obj: asincosf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmo_a_CFLAGS) $(CFLAGS) -c -o libmo_a-asincosf.obj `if test -f 'asincosf.c'; then $(CYGPATH_W) 'asincosf.c'; else $(CYGPATH_W) '$(srcdir)/asincosf.c'; fi`

libmo_a-asinf.o: asinf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmo_a_CFLAGS) $(CFLAGS) -c -o libmo_a-asinf.o `test -f 'asinf.c' || echo '$(srcdir)/'`asinf.c

libmo_a-asinf.obj: asinf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmo_a_CFLAGS) $(CFLAGS) -c -o libmo_a-asinf.obj `if test -f 'asinf.c'; then $(CYGPATH_W) 'asinf.c'; else $(CYGPATH_W) '$(srcdir)/asinf.c'; fi`

libmo_a-atan2f.o: atan2f.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmo_a_CFLAGS) $(CFLAGS) -c -o libmo_a-atan2f.o `test -f 'atan2f.c' || echo '$(srcdir)/'`atan2f.c

libmo_a-atan2f.obj: atan2f.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmo_a_CFLAGS) $(CFLAGS) -c -o libmo_a-atan2f.obj `if test -f 'atan2f.c'; then $(CYGPATH_W) 'atan2f.c'; else $(CYGPATH_W) '$(srcdir)/atan2f.c'; fi`

libmo_a-atanf.o: atanf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmo_a_CFLAGS) $(CFLAGS) -c -o libmo_a-atanf.o `test -f 'atanf.c' || echo '$(srcdir)/'`atanf.c

libmo_a-atanf.obj: atanf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmo_a_CFLAGS) $(CFLAGS) -c -o libmo_a-atanf.obj `if test -f 'atanf.c'; then $(CYGPATH_W) 'atanf.c'; else $(CYGPATH_W) '$(srcdir)/atanf.c'; fi`

libmo_a-ceilf.o: ceilf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmo_a_CFLAGS) $(CFLAGS) -c -o libmo_a-ceilf.o `test -f 'ceilf.c' || echo '$(srcdir)/'`ceilf.c

libmo_a-ceilf.obj: ceilf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmo_a_CFLAGS) $(CFLAGS) -c -o libmo_a-ceilf.obj `if test -f 'ceilf.c'; then $(CYGPATH_W) 'ceilf.c'; else $(CYGPATH_W) '$(srcdir)/ceilf.c'; fi`

libmo_a-cosf.o: cosf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmo_a_CFLAGS) $(CFLAGS) -c -o libmo_a-cosf.o `test -f 'cosf.c' || echo '$(srcdir)/'`cosf.c

libmo_a-cosf.obj: cosf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmo_a_CFLAGS) $(CFLAGS) -c -o libmo_a-cosf.obj `if test -f 'cosf.c'; then $(CYGPATH_W) 'cosf.c'; else $(CYGPATH_W) '$(srcdir)/cosf.c'; fi`

libmo_a-coshf.o: coshf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmo_a_CFLAGS) $(CFLAGS) -c -o libmo_a-coshf.o `test -f 'coshf.c' || echo '$(srcdir)/'`coshf.c

libmo_a-coshf.obj: coshf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmo_a_CFLAGS) $(CFLAGS) -c -o libmo_a-coshf.obj `if test -f 'coshf.c'; then $(CYGPATH_W) 'coshf.c'; else $(CYGPATH_W) '$(srcdir)/coshf.c'; fi`

libmo_a-cotf.o: cotf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmo_a_CFLAGS) $(CFLAGS) -c -o libmo_a-cotf.o `test -f 'cotf.c' || echo '$(srcdir)/'`cotf.c

libmo_a-cotf.obj: cotf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmo_a_CFLAGS) $(CFLAGS) -c -o libmo_a-cotf.obj `if test -f 'cotf.c'; then $(CYGPATH_W) 'cotf.c'; else $(CYGPATH_W) '$(srcdir)/cotf.c'; fi`

libmo_a-errno.o: errno.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmo_a_CFLAGS) $(CFLAGS) -c -o libmo_a-errno.o `test -f 'errno.c' || echo '$(srcdir)/'`errno.c

libmo_a-errno.obj: errno.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmo_a_CFLAGS) $(CFLAGS) -c -o libmo_a-errno.obj `if test -f 'errno.c'; then $(CYGPATH_W) 'errno.c'; else $(CYGPATH_W) '$(srcdir)/errno.c'; fi`

libmo_a-expf.o: expf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmo_a_CFLAGS) $(CFLAGS) -c -o libmo_a-expf.o `test -f 'expf.c' || echo '$(srcdir)/'`expf.c

libmo_a-expf.obj: expf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmo_a_CFLAGS) $(CFLAGS) -c -o libmo_a-expf.obj `if test -f 'expf.c'; then $(CYGPATH_W) 'expf.c'; else $(CYGPATH_W) '$(srcdir)/expf.c'; fi`

libmo_a-fabsf.o: fabsf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmo_a_CFLAGS) $(CFLAGS) -c -o libmo_a-fabsf.o `test -f 'fabsf.c' || echo '$(srcdir)/'`fabsf.c

libmo_a-fabsf.obj: fabsf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmo_a_CFLAGS) $(CFLAGS) -c -o libmo_a-fabsf.obj `if test -f 'fabsf.c'; then $(CYGPATH_W) 'fabsf.c'; else $(CYGPATH_W) '$(srcdir)/fabsf.c'; fi`

libmo_a-floorf.o: floorf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmo_a_CFLAGS) $(CFLAGS) -c -o libmo_a-floorf.o `test -f 'floorf.c' || echo '$(srcdir)/'`floorf.c

libmo_a-floorf.obj: floorf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmo_a_CFLAGS) $(CFLAGS) -c -o libmo_a-floorf.obj `if test -f 'floorf.c'; then $(CYGPATH_W) 'floorf.c'; else $(CYGPATH_W) '$(srcdir)/floorf.c'; fi`

libmo_a-frexpf.o: frexpf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmo_a_CFLAGS) $(CFLAGS) -c -o libmo_a-frexpf.o `test -f 'frexpf.c' || echo '$(srcdir)/'`frexpf.c

libmo_a-frexpf.obj: frexpf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmo_a_CFLAGS) $(CFLAGS) -c -o libmo_a-frexpf.obj `if test -f 'frexpf.c'; then $(CYGPATH_W) 'frexpf.c'; else $(CYGPATH_W) '$(srcdir)/frexpf.c'; fi`

libmo_a-isinf.o: isinf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmo_a_CFLAGS) $(CFLAGS) -c -o libmo_a-isinf.o `test -f 'isinf.c' || echo '$(srcdir)/'`isinf.c

libmo_a-isinf.obj: isinf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmo_a_CFLAGS) $(CFLAGS) -c -o libmo_a-isinf.obj `if test -f 'isinf.c'; then $(CYGPATH_W) 'isinf.c'; else $(CYGPATH_W) '$(srcdir)/isinf.c'; fi`

libmo_a-isnan.o: isnan.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmo_a_CFLAGS) $(CFLAGS) -c -o libmo_a-isnan.o `test -f 'isnan.c' || echo '$(srcdir)/'`isnan.c

libmo_a-isnan.obj: isnan.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmo_a_CFLAGS) $(CFLAGS) -c -o libmo_a-isnan.obj `if test -f 'isnan.c'; then $(CYGPATH_W) 'isnan.c'; else $(CYGPATH_W) '$(srcdir)/isnan.c'; fi`

libmo_a-ldexpf.o: ldexpf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmo_a_CFLAGS) $(CFLAGS) -c -o libmo_a-ldexpf.o `test -f 'ldexpf.c' || echo '$(srcdir)/'`ldexpf.c

libmo_a-ldexpf.obj: ldexpf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmo_a_CFLAGS) $(CFLAGS) -c -o libmo_a-ldexpf.obj `if test -f 'ldexpf.c'; then $(CYGPATH_W) 'ldexpf.c'; else $(CYGPATH_W) '$(srcdir)/ldexpf.c'; fi`

libmo_a-log10f.o: log10f.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmo_a_CFLAGS) $(CFLAGS) -c -o libmo_a-log10f.o `test -f 'log10f.c' || echo '$(srcdir)/'`log10f.c

libmo_a-log10f.obj: log10f.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmo_a_CFLAGS) $(CFLAGS) -c -o libmo_a-log10f.obj `if test -f 'log10f.c'; then $(CYGPATH_W) 'log10f.c'; else $(CYGPATH_W) '$(srcdir)/log10f.c'; fi`

libmo_a-logf.o: logf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmo_a_CFLAGS) $(CFLAGS) -c -o libmo_a-logf.o `test -f 'logf.c' || echo '$(srcdir)/'`logf.c

libmo_a-logf.obj: logf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmo_a_CFLAGS) $(CFLAGS) -c -o libmo_a-logf.obj `if test -f 'logf.c'; then $(CYGPATH_W) 'logf.c'; else $(CYGPATH_W) '$(srcdir)/logf.c'; fi`

libmo_a-modff.o: modff.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmo_a_CFLAGS) $(CFLAGS) -c -o libmo_a-modff.o `test -f 'modff.c' || echo '$(srcdir)/'`modff.c

libmo_a-modff.obj: modff.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmo_a_CFLAGS) $(CFLAGS) -c -o libmo_a-modff.obj `if test -f 'modff.c'; then $(CYGPATH_W) 'modff.c'; else $(CYGPATH_W) '$(srcdir)/modff.c'; fi`

libmo_a-powf.o: powf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmo_a_CFLAGS) $(CFLAGS) -c -o libmo_a-powf.o `test -f 'powf.c' || echo '$(srcdir)/'`powf.c

libmo_a-powf.obj: powf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmo_a_CFLAGS) $(CFLAGS) -c -o libmo_a-powf.obj `if test -f 'powf.c'; then $(CYGPATH_W) 'powf.c'; else $(CYGPATH_W) '$(srcdir)/powf.c'; fi`

libmo_a-sincosf.o: sincosf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmo_a_CFLAGS) $(CFLAGS) -c -o libmo_a-sincosf.o `test -f 'sincosf.c' || echo '$(srcdir)/'`sincosf.c

libmo_a-sincosf.obj: sincosf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmo_a_CFLAGS) $(CFLAGS) -c -o libmo_a-sincosf.obj `if test -f 'sincosf.c'; then $(CYGPATH_W) 'sincosf.c'; else $(CYGPATH_W) '$(srcdir)/sincosf.c'; fi`

libmo_a-sincoshf.o: sincoshf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmo_a_CFLAGS) $(CFLAGS) -c -o libmo_a-sincoshf.o `test -f 'sincoshf.c' || echo '$(srcdir)/'`sincoshf.c

libmo_a-sincoshf.obj: sincoshf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmo_a_CFLAGS) $(CFLAGS) -c -o libmo_a-sincoshf.obj `if test -f 'sincoshf.c'; then $(CYGPATH_W) 'sincoshf.c'; else $(CYGPATH_W) '$(srcdir)/sincoshf.c'; fi`

libmo_a-sinf.o: sinf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmo_a_CFLAGS) $(CFLAGS) -c -o libmo_a-sinf.o `test -f 'sinf.c' || echo '$(srcdir)/'`sinf.c

libmo_a-sinf.obj: sinf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmo_a_CFLAGS) $(CFLAGS) -c -o libmo_a-sinf.obj `if test -f 'sinf.c'; then $(CYGPATH_W) 'sinf.c'; else $(CYGPATH_W) '$(srcdir)/sinf.c'; fi`

libmo_a-sinhf.o: sinhf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmo_a_CFLAGS) $(CFLAGS) -c -o libmo_a-sinhf.o `test -f 'sinhf.c' || echo '$(srcdir)/'`sinhf.c

libmo_a-sinhf.obj: sinhf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmo_a_CFLAGS) $(CFLAGS) -c -o libmo_a-sinhf.obj `if test -f 'sinhf.c'; then $(CYGPATH_W) 'sinhf.c'; else $(CYGPATH_W) '$(srcdir)/sinhf.c'; fi`

libmo_a-sqrtf.o: sqrtf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmo_a_CFLAGS) $(CFLAGS) -c -o libmo_a-sqrtf.o `test -f 'sqrtf.c' || echo '$(srcdir)/'`sqrtf.c

libmo_a-sqrtf.obj: sqrtf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmo_a_CFLAGS) $(CFLAGS) -c -o libmo_a-sqrtf.obj `if test -f 'sqrtf.c'; then $(CYGPATH_W) 'sqrtf.c'; else $(CYGPATH_W) '$(srcdir)/sqrtf.c'; fi`

libmo_a-tancotf.o: tancotf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmo_a_CFLAGS) $(CFLAGS) -c -o libmo_a-tancotf.o `test -f 'tancotf.c' || echo '$(srcdir)/'`tancotf.c

libmo_a-tancotf.obj: tancotf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmo_a_CFLAGS) $(CFLAGS) -c -o libmo_a-tancotf.obj `if test -f 'tancotf.c'; then $(CYGPATH_W) 'tancotf.c'; else $(CYGPATH_W) '$(srcdir)/tancotf.c'; fi`

libmo_a-tanf.o: tanf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmo_a_CFLAGS) $(CFLAGS) -c -o libmo_a-tanf.o `test -f 'tanf.c' || echo '$(srcdir)/'`tanf.c

libmo_a-tanf.obj: tanf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmo_a_CFLAGS) $(CFLAGS) -c -o libmo_a-tanf.obj `if test -f 'tanf.c'; then $(CYGPATH_W) 'tanf.c'; else $(CYGPATH_W) '$(srcdir)/tanf.c'; fi`

libmo_a-tanhf.o: tanhf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmo_a_CFLAGS) $(CFLAGS) -c -o libmo_a-tanhf.o `test -f 'tanhf.c' || echo '$(srcdir)/'`tanhf.c

libmo_a-tanhf.obj: tanhf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmo_a_CFLAGS) $(CFLAGS) -c -o libmo_a-tanhf.obj `if test -f 'tanhf.c'; then $(CYGPATH_W) 'tanhf.c'; else $(CYGPATH_W) '$(srcdir)/tanhf.c'; fi`

libmox_a-acosf.o: acosf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmox_a_CFLAGS) $(CFLAGS) -c -o libmox_a-acosf.o `test -f 'acosf.c' || echo '$(srcdir)/'`acosf.c

libmox_a-acosf.obj: acosf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmox_a_CFLAGS) $(CFLAGS) -c -o libmox_a-acosf.obj `if test -f 'acosf.c'; then $(CYGPATH_W) 'acosf.c'; else $(CYGPATH_W) '$(srcdir)/acosf.c'; fi`

libmox_a-asincosf.o: asincosf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmox_a_CFLAGS) $(CFLAGS) -c -o libmox_a-asincosf.o `test -f 'asincosf.c' || echo '$(srcdir)/'`asincosf.c

libmox_a-asincosf.obj: asincosf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmox_a_CFLAGS) $(CFLAGS) -c -o libmox_a-asincosf.obj `if test -f 'asincosf.c'; then $(CYGPATH_W) 'asincosf.c'; else $(CYGPATH_W) '$(srcdir)/asincosf.c'; fi`

libmox_a-asinf.o: asinf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmox_a_CFLAGS) $(CFLAGS) -c -o libmox_a-asinf.o `test -f 'asinf.c' || echo '$(srcdir)/'`asinf.c

libmox_a-asinf.obj: asinf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmox_a_CFLAGS) $(CFLAGS) -c -o libmox_a-asinf.obj `if test -f 'asinf.c'; then $(CYGPATH_W) 'asinf.c'; else $(CYGPATH_W) '$(srcdir)/asinf.c'; fi`

libmox_a-atan2f.o: atan2f.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmox_a_CFLAGS) $(CFLAGS) -c -o libmox_a-atan2f.o `test -f 'atan2f.c' || echo '$(srcdir)/'`atan2f.c

libmox_a-atan2f.obj: atan2f.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmox_a_CFLAGS) $(CFLAGS) -c -o libmox_a-atan2f.obj `if test -f 'atan2f.c'; then $(CYGPATH_W) 'atan2f.c'; else $(CYGPATH_W) '$(srcdir)/atan2f.c'; fi`

libmox_a-atanf.o: atanf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmox_a_CFLAGS) $(CFLAGS) -c -o libmox_a-atanf.o `test -f 'atanf.c' || echo '$(srcdir)/'`atanf.c

libmox_a-atanf.obj: atanf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmox_a_CFLAGS) $(CFLAGS) -c -o libmox_a-atanf.obj `if test -f 'atanf.c'; then $(CYGPATH_W) 'atanf.c'; else $(CYGPATH_W) '$(srcdir)/atanf.c'; fi`

libmox_a-ceilf.o: ceilf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmox_a_CFLAGS) $(CFLAGS) -c -o libmox_a-ceilf.o `test -f 'ceilf.c' || echo '$(srcdir)/'`ceilf.c

libmox_a-ceilf.obj: ceilf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmox_a_CFLAGS) $(CFLAGS) -c -o libmox_a-ceilf.obj `if test -f 'ceilf.c'; then $(CYGPATH_W) 'ceilf.c'; else $(CYGPATH_W) '$(srcdir)/ceilf.c'; fi`

libmox_a-cosf.o: cosf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmox_a_CFLAGS) $(CFLAGS) -c -o libmox_a-cosf.o `test -f 'cosf.c' || echo '$(srcdir)/'`cosf.c

libmox_a-cosf.obj: cosf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmox_a_CFLAGS) $(CFLAGS) -c -o libmox_a-cosf.obj `if test -f 'cosf.c'; then $(CYGPATH_W) 'cosf.c'; else $(CYGPATH_W) '$(srcdir)/cosf.c'; fi`

libmox_a-coshf.o: coshf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmox_a_CFLAGS) $(CFLAGS) -c -o libmox_a-coshf.o `test -f 'coshf.c' || echo '$(srcdir)/'`coshf.c

libmox_a-coshf.obj: coshf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmox_a_CFLAGS) $(CFLAGS) -c -o libmox_a-coshf.obj `if test -f 'coshf.c'; then $(CYGPATH_W) 'coshf.c'; else $(CYGPATH_W) '$(srcdir)/coshf.c'; fi`

libmox_a-cotf.o: cotf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmox_a_CFLAGS) $(CFLAGS) -c -o libmox_a-cotf.o `test -f 'cotf.c' || echo '$(srcdir)/'`cotf.c

libmox_a-cotf.obj: cotf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmox_a_CFLAGS) $(CFLAGS) -c -o libmox_a-cotf.obj `if test -f 'cotf.c'; then $(CYGPATH_W) 'cotf.c'; else $(CYGPATH_W) '$(srcdir)/cotf.c'; fi`

libmox_a-errno.o: errno.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmox_a_CFLAGS) $(CFLAGS) -c -o libmox_a-errno.o `test -f 'errno.c' || echo '$(srcdir)/'`errno.c

libmox_a-errno.obj: errno.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmox_a_CFLAGS) $(CFLAGS) -c -o libmox_a-errno.obj `if test -f 'errno.c'; then $(CYGPATH_W) 'errno.c'; else $(CYGPATH_W) '$(srcdir)/errno.c'; fi`

libmox_a-expf.o: expf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmox_a_CFLAGS) $(CFLAGS) -c -o libmox_a-expf.o `test -f 'expf.c' || echo '$(srcdir)/'`expf.c

libmox_a-expf.obj: expf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmox_a_CFLAGS) $(CFLAGS) -c -o libmox_a-expf.obj `if test -f 'expf.c'; then $(CYGPATH_W) 'expf.c'; else $(CYGPATH_W) '$(srcdir)/expf.c'; fi`

libmox_a-fabsf.o: fabsf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmox_a_CFLAGS) $(CFLAGS) -c -o libmox_a-fabsf.o `test -f 'fabsf.c' || echo '$(srcdir)/'`fabsf.c

libmox_a-fabsf.obj: fabsf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmox_a_CFLAGS) $(CFLAGS) -c -o libmox_a-fabsf.obj `if test -f 'fabsf.c'; then $(CYGPATH_W) 'fabsf.c'; else $(CYGPATH_W) '$(srcdir)/fabsf.c'; fi`

libmox_a-floorf.o: floorf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmox_a_CFLAGS) $(CFLAGS) -c -o libmox_a-floorf.o `test -f 'floorf.c' || echo '$(srcdir)/'`floorf.c

libmox_a-floorf.obj: floorf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmox_a_CFLAGS) $(CFLAGS) -c -o libmox_a-floorf.obj `if test -f 'floorf.c'; then $(CYGPATH_W) 'floorf.c'; else $(CYGPATH_W) '$(srcdir)/floorf.c'; fi`

libmox_a-frexpf.o: frexpf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmox_a_CFLAGS) $(CFLAGS) -c -o libmox_a-frexpf.o `test -f 'frexpf.c' || echo '$(srcdir)/'`frexpf.c

libmox_a-frexpf.obj: frexpf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmox_a_CFLAGS) $(CFLAGS) -c -o libmox_a-frexpf.obj `if test -f 'frexpf.c'; then $(CYGPATH_W) 'frexpf.c'; else $(CYGPATH_W) '$(srcdir)/frexpf.c'; fi`

libmox_a-isinf.o: isinf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmox_a_CFLAGS) $(CFLAGS) -c -o libmox_a-isinf.o `test -f 'isinf.c' || echo '$(srcdir)/'`isinf.c

libmox_a-isinf.obj: isinf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmox_a_CFLAGS) $(CFLAGS) -c -o libmox_a-isinf.obj `if test -f 'isinf.c'; then $(CYGPATH_W) 'isinf.c'; else $(CYGPATH_W) '$(srcdir)/isinf.c'; fi`

libmox_a-isnan.o: isnan.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmox_a_CFLAGS) $(CFLAGS) -c -o libmox_a-isnan.o `test -f 'isnan.c' || echo '$(srcdir)/'`isnan.c

libmox_a-isnan.obj: isnan.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmox_a_CFLAGS) $(CFLAGS) -c -o libmox_a-isnan.obj `if test -f 'isnan.c'; then $(CYGPATH_W) 'isnan.c'; else $(CYGPATH_W) '$(srcdir)/isnan.c'; fi`

libmox_a-ldexpf.o: ldexpf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmox_a_CFLAGS) $(CFLAGS) -c -o libmox_a-ldexpf.o `test -f 'ldexpf.c' || echo '$(srcdir)/'`ldexpf.c

libmox_a-ldexpf.obj: ldexpf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmox_a_CFLAGS) $(CFLAGS) -c -o libmox_a-ldexpf.obj `if test -f 'ldexpf.c'; then $(CYGPATH_W) 'ldexpf.c'; else $(CYGPATH_W) '$(srcdir)/ldexpf.c'; fi`

libmox_a-log10f.o: log10f.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmox_a_CFLAGS) $(CFLAGS) -c -o libmox_a-log10f.o `test -f 'log10f.c' || echo '$(srcdir)/'`log10f.c

libmox_a-log10f.obj: log10f.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmox_a_CFLAGS) $(CFLAGS) -c -o libmox_a-log10f.obj `if test -f 'log10f.c'; then $(CYGPATH_W) 'log10f.c'; else $(CYGPATH_W) '$(srcdir)/log10f.c'; fi`

libmox_a-logf.o: logf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmox_a_CFLAGS) $(CFLAGS) -c -o libmox_a-logf.o `test -f 'logf.c' || echo '$(srcdir)/'`logf.c

libmox_a-logf.obj: logf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmox_a_CFLAGS) $(CFLAGS) -c -o libmox_a-logf.obj `if test -f 'logf.c'; then $(CYGPATH_W) 'logf.c'; else $(CYGPATH_W) '$(srcdir)/logf.c'; fi`

libmox_a-modff.o: modff.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmox_a_CFLAGS) $(CFLAGS) -c -o libmox_a-modff.o `test -f 'modff.c' || echo '$(srcdir)/'`modff.c

libmox_a-modff.obj: modff.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmox_a_CFLAGS) $(CFLAGS) -c -o libmox_a-modff.obj `if test -f 'modff.c'; then $(CYGPATH_W) 'modff.c'; else $(CYGPATH_W) '$(srcdir)/modff.c'; fi`

libmox_a-powf.o: powf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmox_a_CFLAGS) $(CFLAGS) -c -o libmox_a-powf.o `test -f 'powf.c' || echo '$(srcdir)/'`powf.c

libmox_a-powf.obj: powf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmox_a_CFLAGS) $(CFLAGS) -c -o libmox_a-powf.obj `if test -f 'powf.c'; then $(CYGPATH_W) 'powf.c'; else $(CYGPATH_W) '$(srcdir)/powf.c'; fi`

libmox_a-sincosf.o: sincosf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmox_a_CFLAGS) $(CFLAGS) -c -o libmox_a-sincosf.o `test -f 'sincosf.c' || echo '$(srcdir)/'`sincosf.c

libmox_a-sincosf.obj: sincosf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmox_a_CFLAGS) $(CFLAGS) -c -o libmox_a-sincosf.obj `if test -f 'sincosf.c'; then $(CYGPATH_W) 'sincosf.c'; else $(CYGPATH_W) '$(srcdir)/sincosf.c'; fi`

libmox_a-sincoshf.o: sincoshf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmox_a_CFLAGS) $(CFLAGS) -c -o libmox_a-sincoshf.o `test -f 'sincoshf.c' || echo '$(srcdir)/'`sincoshf.c

libmox_a-sincoshf.obj: sincoshf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmox_a_CFLAGS) $(CFLAGS) -c -o libmox_a-sincoshf.obj `if test -f 'sincoshf.c'; then $(CYGPATH_W) 'sincoshf.c'; else $(CYGPATH_W) '$(srcdir)/sincoshf.c'; fi`

libmox_a-sinf.o: sinf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmox_a_CFLAGS) $(CFLAGS) -c -o libmox_a-sinf.o `test -f 'sinf.c' || echo '$(srcdir)/'`sinf.c

libmox_a-sinf.obj: sinf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmox_a_CFLAGS) $(CFLAGS) -c -o libmox_a-sinf.obj `if test -f 'sinf.c'; then $(CYGPATH_W) 'sinf.c'; else $(CYGPATH_W) '$(srcdir)/sinf.c'; fi`

libmox_a-sinhf.o: sinhf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmox_a_CFLAGS) $(CFLAGS) -c -o libmox_a-sinhf.o `test -f 'sinhf.c' || echo '$(srcdir)/'`sinhf.c

libmox_a-sinhf.obj: sinhf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmox_a_CFLAGS) $(CFLAGS) -c -o libmox_a-sinhf.obj `if test -f 'sinhf.c'; then $(CYGPATH_W) 'sinhf.c'; else $(CYGPATH_W) '$(srcdir)/sinhf.c'; fi`

libmox_a-sqrtf.o: sqrtf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmox_a_CFLAGS) $(CFLAGS) -c -o libmox_a-sqrtf.o `test -f 'sqrtf.c' || echo '$(srcdir)/'`sqrtf.c

libmox_a-sqrtf.obj: sqrtf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmox_a_CFLAGS) $(CFLAGS) -c -o libmox_a-sqrtf.obj `if test -f 'sqrtf.c'; then $(CYGPATH_W) 'sqrtf.c'; else $(CYGPATH_W) '$(srcdir)/sqrtf.c'; fi`

libmox_a-tancotf.o: tancotf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmox_a_CFLAGS) $(CFLAGS) -c -o libmox_a-tancotf.o `test -f 'tancotf.c' || echo '$(srcdir)/'`tancotf.c

libmox_a-tancotf.obj: tancotf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmox_a_CFLAGS) $(CFLAGS) -c -o libmox_a-tancotf.obj `if test -f 'tancotf.c'; then $(CYGPATH_W) 'tancotf.c'; else $(CYGPATH_W) '$(srcdir)/tancotf.c'; fi`

libmox_a-tanf.o: tanf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmox_a_CFLAGS) $(CFLAGS) -c -o libmox_a-tanf.o `test -f 'tanf.c' || echo '$(srcdir)/'`tanf.c

libmox_a-tanf.obj: tanf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmox_a_CFLAGS) $(CFLAGS) -c -o libmox_a-tanf.obj `if test -f 'tanf.c'; then $(CYGPATH_W) 'tanf.c'; else $(CYGPATH_W) '$(srcdir)/tanf.c'; fi`

libmox_a-tanhf.o: tanhf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmox_a_CFLAGS) $(CFLAGS) -c -o libmox_a-tanhf.o `test -f 'tanhf.c' || echo '$(srcdir)/'`tanhf.c

libmox_a-tanhf.obj: tanhf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmox_a_CFLAGS) $(CFLAGS) -c -o libmox_a-tanhf.obj `if test -f 'tanhf.c'; then $(CYGPATH_W) 'tanhf.c'; else $(CYGPATH_W) '$(srcdir)/tanhf.c'; fi`

libmx_a-acosf.o: acosf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmx_a_CFLAGS) $(CFLAGS) -c -o libmx_a-acosf.o `test -f 'acosf.c' || echo '$(srcdir)/'`acosf.c

libmx_a-acosf.obj: acosf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmx_a_CFLAGS) $(CFLAGS) -c -o libmx_a-acosf.obj `if test -f 'acosf.c'; then $(CYGPATH_W) 'acosf.c'; else $(CYGPATH_W) '$(srcdir)/acosf.c'; fi`

libmx_a-asincosf.o: asincosf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmx_a_CFLAGS) $(CFLAGS) -c -o libmx_a-asincosf.o `test -f 'asincosf.c' || echo '$(srcdir)/'`asincosf.c

libmx_a-asincosf.obj: asincosf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmx_a_CFLAGS) $(CFLAGS) -c -o libmx_a-asincosf.obj `if test -f 'asincosf.c'; then $(CYGPATH_W) 'asincosf.c'; else $(CYGPATH_W) '$(srcdir)/asincosf.c'; fi`

libmx_a-asinf.o: asinf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmx_a_CFLAGS) $(CFLAGS) -c -o libmx_a-asinf.o `test -f 'asinf.c' || echo '$(srcdir)/'`asinf.c

libmx_a-asinf.obj: asinf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmx_a_CFLAGS) $(CFLAGS) -c -o libmx_a-asinf.obj `if test -f 'asinf.c'; then $(CYGPATH_W) 'asinf.c'; else $(CYGPATH_W) '$(srcdir)/asinf.c'; fi`

libmx_a-atan2f.o: atan2f.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmx_a_CFLAGS) $(CFLAGS) -c -o libmx_a-atan2f.o `test -f 'atan2f.c' || echo '$(srcdir)/'`atan2f.c

libmx_a-atan2f.obj: atan2f.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmx_a_CFLAGS) $(CFLAGS) -c -o libmx_a-atan2f.obj `if test -f 'atan2f.c'; then $(CYGPATH_W) 'atan2f.c'; else $(CYGPATH_W) '$(srcdir)/atan2f.c'; fi`

libmx_a-atanf.o: atanf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmx_a_CFLAGS) $(CFLAGS) -c -o libmx_a-atanf.o `test -f 'atanf.c' || echo '$(srcdir)/'`atanf.c

libmx_a-atanf.obj: atanf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmx_a_CFLAGS) $(CFLAGS) -c -o libmx_a-atanf.obj `if test -f 'atanf.c'; then $(CYGPATH_W) 'atanf.c'; else $(CYGPATH_W) '$(srcdir)/atanf.c'; fi`

libmx_a-ceilf.o: ceilf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmx_a_CFLAGS) $(CFLAGS) -c -o libmx_a-ceilf.o `test -f 'ceilf.c' || echo '$(srcdir)/'`ceilf.c

libmx_a-ceilf.obj: ceilf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmx_a_CFLAGS) $(CFLAGS) -c -o libmx_a-ceilf.obj `if test -f 'ceilf.c'; then $(CYGPATH_W) 'ceilf.c'; else $(CYGPATH_W) '$(srcdir)/ceilf.c'; fi`

libmx_a-cosf.o: cosf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmx_a_CFLAGS) $(CFLAGS) -c -o libmx_a-cosf.o `test -f 'cosf.c' || echo '$(srcdir)/'`cosf.c

libmx_a-cosf.obj: cosf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmx_a_CFLAGS) $(CFLAGS) -c -o libmx_a-cosf.obj `if test -f 'cosf.c'; then $(CYGPATH_W) 'cosf.c'; else $(CYGPATH_W) '$(srcdir)/cosf.c'; fi`

libmx_a-coshf.o: coshf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmx_a_CFLAGS) $(CFLAGS) -c -o libmx_a-coshf.o `test -f 'coshf.c' || echo '$(srcdir)/'`coshf.c

libmx_a-coshf.obj: coshf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmx_a_CFLAGS) $(CFLAGS) -c -o libmx_a-coshf.obj `if test -f 'coshf.c'; then $(CYGPATH_W) 'coshf.c'; else $(CYGPATH_W) '$(srcdir)/coshf.c'; fi`

libmx_a-cotf.o: cotf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmx_a_CFLAGS) $(CFLAGS) -c -o libmx_a-cotf.o `test -f 'cotf.c' || echo '$(srcdir)/'`cotf.c

libmx_a-cotf.obj: cotf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmx_a_CFLAGS) $(CFLAGS) -c -o libmx_a-cotf.obj `if test -f 'cotf.c'; then $(CYGPATH_W) 'cotf.c'; else $(CYGPATH_W) '$(srcdir)/cotf.c'; fi`

libmx_a-errno.o: errno.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmx_a_CFLAGS) $(CFLAGS) -c -o libmx_a-errno.o `test -f 'errno.c' || echo '$(srcdir)/'`errno.c

libmx_a-errno.obj: errno.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmx_a_CFLAGS) $(CFLAGS) -c -o libmx_a-errno.obj `if test -f 'errno.c'; then $(CYGPATH_W) 'errno.c'; else $(CYGPATH_W) '$(srcdir)/errno.c'; fi`

libmx_a-expf.o: expf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmx_a_CFLAGS) $(CFLAGS) -c -o libmx_a-expf.o `test -f 'expf.c' || echo '$(srcdir)/'`expf.c

libmx_a-expf.obj: expf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmx_a_CFLAGS) $(CFLAGS) -c -o libmx_a-expf.obj `if test -f 'expf.c'; then $(CYGPATH_W) 'expf.c'; else $(CYGPATH_W) '$(srcdir)/expf.c'; fi`

libmx_a-fabsf.o: fabsf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmx_a_CFLAGS) $(CFLAGS) -c -o libmx_a-fabsf.o `test -f 'fabsf.c' || echo '$(srcdir)/'`fabsf.c

libmx_a-fabsf.obj: fabsf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmx_a_CFLAGS) $(CFLAGS) -c -o libmx_a-fabsf.obj `if test -f 'fabsf.c'; then $(CYGPATH_W) 'fabsf.c'; else $(CYGPATH_W) '$(srcdir)/fabsf.c'; fi`

libmx_a-floorf.o: floorf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmx_a_CFLAGS) $(CFLAGS) -c -o libmx_a-floorf.o `test -f 'floorf.c' || echo '$(srcdir)/'`floorf.c

libmx_a-floorf.obj: floorf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmx_a_CFLAGS) $(CFLAGS) -c -o libmx_a-floorf.obj `if test -f 'floorf.c'; then $(CYGPATH_W) 'floorf.c'; else $(CYGPATH_W) '$(srcdir)/floorf.c'; fi`

libmx_a-frexpf.o: frexpf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmx_a_CFLAGS) $(CFLAGS) -c -o libmx_a-frexpf.o `test -f 'frexpf.c' || echo '$(srcdir)/'`frexpf.c

libmx_a-frexpf.obj: frexpf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmx_a_CFLAGS) $(CFLAGS) -c -o libmx_a-frexpf.obj `if test -f 'frexpf.c'; then $(CYGPATH_W) 'frexpf.c'; else $(CYGPATH_W) '$(srcdir)/frexpf.c'; fi`

libmx_a-isinf.o: isinf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmx_a_CFLAGS) $(CFLAGS) -c -o libmx_a-isinf.o `test -f 'isinf.c' || echo '$(srcdir)/'`isinf.c

libmx_a-isinf.obj: isinf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmx_a_CFLAGS) $(CFLAGS) -c -o libmx_a-isinf.obj `if test -f 'isinf.c'; then $(CYGPATH_W) 'isinf.c'; else $(CYGPATH_W) '$(srcdir)/isinf.c'; fi`

libmx_a-isnan.o: isnan.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmx_a_CFLAGS) $(CFLAGS) -c -o libmx_a-isnan.o `test -f 'isnan.c' || echo '$(srcdir)/'`isnan.c

libmx_a-isnan.obj: isnan.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmx_a_CFLAGS) $(CFLAGS) -c -o libmx_a-isnan.obj `if test -f 'isnan.c'; then $(CYGPATH_W) 'isnan.c'; else $(CYGPATH_W) '$(srcdir)/isnan.c'; fi`

libmx_a-ldexpf.o: ldexpf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmx_a_CFLAGS) $(CFLAGS) -c -o libmx_a-ldexpf.o `test -f 'ldexpf.c' || echo '$(srcdir)/'`ldexpf.c

libmx_a-ldexpf.obj: ldexpf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmx_a_CFLAGS) $(CFLAGS) -c -o libmx_a-ldexpf.obj `if test -f 'ldexpf.c'; then $(CYGPATH_W) 'ldexpf.c'; else $(CYGPATH_W) '$(srcdir)/ldexpf.c'; fi`

libmx_a-log10f.o: log10f.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmx_a_CFLAGS) $(CFLAGS) -c -o libmx_a-log10f.o `test -f 'log10f.c' || echo '$(srcdir)/'`log10f.c

libmx_a-log10f.obj: log10f.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmx_a_CFLAGS) $(CFLAGS) -c -o libmx_a-log10f.obj `if test -f 'log10f.c'; then $(CYGPATH_W) 'log10f.c'; else $(CYGPATH_W) '$(srcdir)/log10f.c'; fi`

libmx_a-logf.o: logf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmx_a_CFLAGS) $(CFLAGS) -c -o libmx_a-logf.o `test -f 'logf.c' || echo '$(srcdir)/'`logf.c

libmx_a-logf.obj: logf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmx_a_CFLAGS) $(CFLAGS) -c -o libmx_a-logf.obj `if test -f 'logf.c'; then $(CYGPATH_W) 'logf.c'; else $(CYGPATH_W) '$(srcdir)/logf.c'; fi`

libmx_a-modff.o: modff.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmx_a_CFLAGS) $(CFLAGS) -c -o libmx_a-modff.o `test -f 'modff.c' || echo '$(srcdir)/'`modff.c

libmx_a-modff.obj: modff.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmx_a_CFLAGS) $(CFLAGS) -c -o libmx_a-modff.obj `if test -f 'modff.c'; then $(CYGPATH_W) 'modff.c'; else $(CYGPATH_W) '$(srcdir)/modff.c'; fi`

libmx_a-powf.o: powf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmx_a_CFLAGS) $(CFLAGS) -c -o libmx_a-powf.o `test -f 'powf.c' || echo '$(srcdir)/'`powf.c

libmx_a-powf.obj: powf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmx_a_CFLAGS) $(CFLAGS) -c -o libmx_a-powf.obj `if test -f 'powf.c'; then $(CYGPATH_W) 'powf.c'; else $(CYGPATH_W) '$(srcdir)/powf.c'; fi`

libmx_a-sincosf.o: sincosf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmx_a_CFLAGS) $(CFLAGS) -c -o libmx_a-sincosf.o `test -f 'sincosf.c' || echo '$(srcdir)/'`sincosf.c

libmx_a-sincosf.obj: sincosf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmx_a_CFLAGS) $(CFLAGS) -c -o libmx_a-sincosf.obj `if test -f 'sincosf.c'; then $(CYGPATH_W) 'sincosf.c'; else $(CYGPATH_W) '$(srcdir)/sincosf.c'; fi`

libmx_a-sincoshf.o: sincoshf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmx_a_CFLAGS) $(CFLAGS) -c -o libmx_a-sincoshf.o `test -f 'sincoshf.c' || echo '$(srcdir)/'`sincoshf.c

libmx_a-sincoshf.obj: sincoshf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmx_a_CFLAGS) $(CFLAGS) -c -o libmx_a-sincoshf.obj `if test -f 'sincoshf.c'; then $(CYGPATH_W) 'sincoshf.c'; else $(CYGPATH_W) '$(srcdir)/sincoshf.c'; fi`

libmx_a-sinf.o: sinf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmx_a_CFLAGS) $(CFLAGS) -c -o libmx_a-sinf.o `test -f 'sinf.c' || echo '$(srcdir)/'`sinf.c

libmx_a-sinf.obj: sinf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmx_a_CFLAGS) $(CFLAGS) -c -o libmx_a-sinf.obj `if test -f 'sinf.c'; then $(CYGPATH_W) 'sinf.c'; else $(CYGPATH_W) '$(srcdir)/sinf.c'; fi`

libmx_a-sinhf.o: sinhf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmx_a_CFLAGS) $(CFLAGS) -c -o libmx_a-sinhf.o `test -f 'sinhf.c' || echo '$(srcdir)/'`sinhf.c

libmx_a-sinhf.obj: sinhf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmx_a_CFLAGS) $(CFLAGS) -c -o libmx_a-sinhf.obj `if test -f 'sinhf.c'; then $(CYGPATH_W) 'sinhf.c'; else $(CYGPATH_W) '$(srcdir)/sinhf.c'; fi`

libmx_a-sqrtf.o: sqrtf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmx_a_CFLAGS) $(CFLAGS) -c -o libmx_a-sqrtf.o `test -f 'sqrtf.c' || echo '$(srcdir)/'`sqrtf.c

libmx_a-sqrtf.obj: sqrtf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmx_a_CFLAGS) $(CFLAGS) -c -o libmx_a-sqrtf.obj `if test -f 'sqrtf.c'; then $(CYGPATH_W) 'sqrtf.c'; else $(CYGPATH_W) '$(srcdir)/sqrtf.c'; fi`

libmx_a-tancotf.o: tancotf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmx_a_CFLAGS) $(CFLAGS) -c -o libmx_a-tancotf.o `test -f 'tancotf.c' || echo '$(srcdir)/'`tancotf.c

libmx_a-tancotf.obj: tancotf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmx_a_CFLAGS) $(CFLAGS) -c -o libmx_a-tancotf.obj `if test -f 'tancotf.c'; then $(CYGPATH_W) 'tancotf.c'; else $(CYGPATH_W) '$(srcdir)/tancotf.c'; fi`

libmx_a-tanf.o: tanf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmx_a_CFLAGS) $(CFLAGS) -c -o libmx_a-tanf.o `test -f 'tanf.c' || echo '$(srcdir)/'`tanf.c

libmx_a-tanf.obj: tanf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmx_a_CFLAGS) $(CFLAGS) -c -o libmx_a-tanf.obj `if test -f 'tanf.c'; then $(CYGPATH_W) 'tanf.c'; else $(CYGPATH_W) '$(srcdir)/tanf.c'; fi`

libmx_a-tanhf.o: tanhf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmx_a_CFLAGS) $(CFLAGS) -c -o libmx_a-tanhf.o `test -f 'tanhf.c' || echo '$(srcdir)/'`tanhf.c

libmx_a-tanhf.obj: tanhf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmx_a_CFLAGS) $(CFLAGS) -c -o libmx_a-tanhf.obj `if test -f 'tanhf.c'; then $(CYGPATH_W) 'tanhf.c'; else $(CYGPATH_W) '$(srcdir)/tanhf.c'; fi`

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) distdir-am

distdir-am: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LIBRARIES)
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-local clean-noinstLIBRARIES \
	mostlyclean-am

distclean: distclean-am
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-am clean clean-generic \
	clean-local clean-noinstLIBRARIES cscopelist-am ctags ctags-am \
	distclean distclean-compile distclean-generic distclean-tags \
	distdir dvi dvi-am html html-am info info-am install \
	install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic pdf pdf-am ps ps-am \
	tags tags-am uninstall uninstall-am

.PRECIOUS: Makefile


ARCH  ?= @ARCH@
EARCH ?= @EARCH@

############################################################
# Common actions
############################################################

# link missing source files to the generic sdcc ones
# NOTE: last empty line required because foreach concatenates several copies of this text
define link-generic-files
$(1)/%.c: $$(GENERIC_SRC_DIR_ABS)/%.c
	test -e $$(srcdir)/$$@ || ln -s $$< $$@

endef

# create links to generic source files in the source directories
$(foreach SOURCE_DIR,$(SOURCE_DIRS),$(eval $(call link-generic-files,$(SOURCE_DIR))))

# remove links to generic source files
# NOTE: last semicolon required because foreach concatenates several copies of this text
define remove-generic-links
	list='$(wildcard $(SOURCE_DIR)/*.c)' ; \
	for file in $$list ; do \
	  if test -L $$file ; then rm $$file ; fi \
	done ;
endef

# remove intermediate files generated by the build process
# NOTE: last semicolon required because foreach concatenates several copies of this text
define remove-intermediate-files
	list='$(wildcard $(addprefix $(SOURCE_DIR)/*,$(CLEAN_EXTENSIONS)))' ; \
	if test -n "$$list" ; then rm -rf $$list ; fi ;
endef

# clean-up (remove intermediate files and links to missing source files)
clean-local:
	$(foreach SOURCE_DIR,$(SOURCE_DIRS),$(remove-generic-links))
	$(foreach SOURCE_DIR,$(SOURCE_DIRS),$(remove-intermediate-files))

# do not remove intermediate files when DEBUG is enabled
@ENABLE_DEBUG_TRUE@clean-intermediate:
@ENABLE_DEBUG_TRUE@	list='$(SUBDIRS)'; for subdir in $$list; do \
@ENABLE_DEBUG_TRUE@	  echo "Making $@ in $$subdir"; \
@ENABLE_DEBUG_TRUE@	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $@); \
@ENABLE_DEBUG_TRUE@	done
@ENABLE_DEBUG_FALSE@clean-intermediate: clean-local
@ENABLE_DEBUG_FALSE@	list='$(SUBDIRS)'; for subdir in $$list; do \
@ENABLE_DEBUG_FALSE@	  echo "Making $@ in $$subdir"; \
@ENABLE_DEBUG_FALSE@	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $@); \
@ENABLE_DEBUG_FALSE@	done

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
