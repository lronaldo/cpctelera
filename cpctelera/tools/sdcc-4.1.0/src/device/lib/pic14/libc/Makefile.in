# Makefile.in generated by automake 1.16.2 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2020 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

VPATH = @srcdir@
am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
@ENABLE_ENHANCED_PICS_TRUE@am__append_1 = libce.a
@ENABLE_NOOPTS_TRUE@am__append_2 = libco.a
@ENABLE_ENHANCED_PICS_TRUE@@ENABLE_NOOPTS_TRUE@am__append_3 = libceo.a
@ENABLE_EXPERIMENTAL_TRUE@am__append_4 = libcx.a
@ENABLE_ENHANCED_PICS_TRUE@@ENABLE_EXPERIMENTAL_TRUE@am__append_5 = libcex.a
@ENABLE_EXPERIMENTAL_TRUE@@ENABLE_NOOPTS_TRUE@am__append_6 = libcox.a
@ENABLE_ENHANCED_PICS_TRUE@@ENABLE_EXPERIMENTAL_TRUE@@ENABLE_NOOPTS_TRUE@am__append_7 = libceox.a
@ENABLE_EXTENDED_INSTRUCTIONS_FALSE@am__append_8 = --no-extended-instructions

# extra flags when DEBUG is enabled
@ENABLE_DEBUG_TRUE@am__append_9 = --debug --debug-xtra --debug-ralloc  --debug-glue
@ENABLE_DEBUG_TRUE@am__append_10 = --debug-variadics
subdir = libc
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
LIBRARIES = $(noinst_LIBRARIES)
AM_V_AR = $(am__v_AR_@AM_V@)
am__v_AR_ = $(am__v_AR_@AM_DEFAULT_V@)
am__v_AR_0 = @echo "  AR      " $@;
am__v_AR_1 = 
libc_a_AR = $(AR) $(ARFLAGS)
libc_a_LIBADD =
am_libc_a_OBJECTS = libc_a-__assert.$(OBJEXT) libc_a-isalnum.$(OBJEXT) \
	libc_a-isalpha.$(OBJEXT) libc_a-isblank.$(OBJEXT) \
	libc_a-iscntrl.$(OBJEXT) libc_a-isdigit.$(OBJEXT) \
	libc_a-isgraph.$(OBJEXT) libc_a-islower.$(OBJEXT) \
	libc_a-isprint.$(OBJEXT) libc_a-ispunct.$(OBJEXT) \
	libc_a-isspace.$(OBJEXT) libc_a-isupper.$(OBJEXT) \
	libc_a-isxdigit.$(OBJEXT) libc_a-tolower.$(OBJEXT) \
	libc_a-toupper.$(OBJEXT) libc_a-errno.$(OBJEXT) \
	libc_a-fprintf.$(OBJEXT) libc_a-fputc.$(OBJEXT) \
	libc_a-fputs.$(OBJEXT) libc_a-getchar.$(OBJEXT) \
	libc_a-gets.$(OBJEXT) libc_a-printf.$(OBJEXT) \
	libc_a-printfl.$(OBJEXT) libc_a-putchar.$(OBJEXT) \
	libc_a-puts.$(OBJEXT) libc_a-sprintf.$(OBJEXT) \
	libc_a-streams.$(OBJEXT) libc_a-strmgpsim.$(OBJEXT) \
	libc_a-strmmssp.$(OBJEXT) libc_a-strmusart.$(OBJEXT) \
	libc_a-vfprintf.$(OBJEXT) libc_a-vprintf.$(OBJEXT) \
	libc_a-vsprintf.$(OBJEXT) libc_a-_atof.$(OBJEXT) \
	libc_a-_ftoa.$(OBJEXT) libc_a-__itoa.$(OBJEXT) \
	libc_a-__ltoa.$(OBJEXT) libc_a-abs.$(OBJEXT) \
	libc_a-aligned_alloc.$(OBJEXT) libc_a-atoi.$(OBJEXT) \
	libc_a-atol.$(OBJEXT) libc_a-bsearch.$(OBJEXT) \
	libc_a-_calloc.$(OBJEXT) libc_a-free.$(OBJEXT) \
	libc_a-labs.$(OBJEXT) libc_a-malloc.$(OBJEXT) \
	libc_a-mblen.$(OBJEXT) libc_a-mbstowcs.$(OBJEXT) \
	libc_a-mbtowc.$(OBJEXT) libc_a-memfree.$(OBJEXT) \
	libc_a-memfreemax.$(OBJEXT) libc_a-memmisc.$(OBJEXT) \
	libc_a-qsort.$(OBJEXT) libc_a-rand.$(OBJEXT) \
	libc_a-realloc.$(OBJEXT) libc_a-strtol.$(OBJEXT) \
	libc_a-strtoul.$(OBJEXT) libc_a-wcstombs.$(OBJEXT) \
	libc_a-wctomb.$(OBJEXT) libc_a-_memchr.$(OBJEXT) \
	libc_a-_memcmp.$(OBJEXT) libc_a-__memcpy.$(OBJEXT) \
	libc_a-memcpy.$(OBJEXT) libc_a-_memmove.$(OBJEXT) \
	libc_a-_memset.$(OBJEXT) libc_a-_strcat.$(OBJEXT) \
	libc_a-_strchr.$(OBJEXT) libc_a-_strcmp.$(OBJEXT) \
	libc_a-_strcpy.$(OBJEXT) libc_a-_strcspn.$(OBJEXT) \
	libc_a-_strlen.$(OBJEXT) libc_a-_strncat.$(OBJEXT) \
	libc_a-_strncmp.$(OBJEXT) libc_a-_strncpy.$(OBJEXT) \
	libc_a-_strpbrk.$(OBJEXT) libc_a-_strrchr.$(OBJEXT) \
	libc_a-_strspn.$(OBJEXT) libc_a-_strstr.$(OBJEXT) \
	libc_a-_strtok.$(OBJEXT) libc_a-strxfrm.$(OBJEXT) \
	libc_a-c16rtomb.$(OBJEXT) libc_a-c16stombs.$(OBJEXT) \
	libc_a-c32rtomb.$(OBJEXT) libc_a-mbrtoc16.$(OBJEXT) \
	libc_a-mbrtoc32.$(OBJEXT) libc_a-mbstoc16s.$(OBJEXT) \
	libc_a-btowc.$(OBJEXT) libc_a-mbrlen.$(OBJEXT) \
	libc_a-mbrtowc.$(OBJEXT) libc_a-mbsinit.$(OBJEXT) \
	libc_a-wcrtomb.$(OBJEXT) libc_a-wcscmp.$(OBJEXT) \
	libc_a-wcslen.$(OBJEXT) libc_a-wctob.$(OBJEXT)
libc_a_OBJECTS = $(am_libc_a_OBJECTS)
libce_a_AR = $(AR) $(ARFLAGS)
libce_a_LIBADD =
am__libce_a_SOURCES_DIST = __assert.c isalnum.c isalpha.c isblank.c \
	iscntrl.c isdigit.c isgraph.c islower.c isprint.c ispunct.c \
	isspace.c isupper.c isxdigit.c tolower.c toupper.c errno.c \
	fprintf.c fputc.c fputs.c getchar.c gets.c printf.c printfl.c \
	putchar.c puts.c sprintf.c streams.c strmgpsim.c strmmssp.c \
	strmusart.c vfprintf.c vprintf.c vsprintf.c _atof.c _ftoa.c \
	__itoa.c __ltoa.c abs.c aligned_alloc.c atoi.c atol.c \
	bsearch.c _calloc.c free.c labs.c malloc.c mblen.c mbstowcs.c \
	mbtowc.c memfree.c memfreemax.c memmisc.c qsort.c rand.c \
	realloc.c strtol.c strtoul.c wcstombs.c wctomb.c _memchr.c \
	_memcmp.c __memcpy.c memcpy.c _memmove.c _memset.c _strcat.c \
	_strchr.c _strcmp.c _strcpy.c _strcspn.c _strlen.c _strncat.c \
	_strncmp.c _strncpy.c _strpbrk.c _strrchr.c _strspn.c \
	_strstr.c _strtok.c strxfrm.c c16rtomb.c c16stombs.c \
	c32rtomb.c mbrtoc16.c mbrtoc32.c mbstoc16s.c btowc.c mbrlen.c \
	mbrtowc.c mbsinit.c wcrtomb.c wcscmp.c wcslen.c wctob.c
am__objects_1 = libce_a-__assert.$(OBJEXT) libce_a-isalnum.$(OBJEXT) \
	libce_a-isalpha.$(OBJEXT) libce_a-isblank.$(OBJEXT) \
	libce_a-iscntrl.$(OBJEXT) libce_a-isdigit.$(OBJEXT) \
	libce_a-isgraph.$(OBJEXT) libce_a-islower.$(OBJEXT) \
	libce_a-isprint.$(OBJEXT) libce_a-ispunct.$(OBJEXT) \
	libce_a-isspace.$(OBJEXT) libce_a-isupper.$(OBJEXT) \
	libce_a-isxdigit.$(OBJEXT) libce_a-tolower.$(OBJEXT) \
	libce_a-toupper.$(OBJEXT) libce_a-errno.$(OBJEXT) \
	libce_a-fprintf.$(OBJEXT) libce_a-fputc.$(OBJEXT) \
	libce_a-fputs.$(OBJEXT) libce_a-getchar.$(OBJEXT) \
	libce_a-gets.$(OBJEXT) libce_a-printf.$(OBJEXT) \
	libce_a-printfl.$(OBJEXT) libce_a-putchar.$(OBJEXT) \
	libce_a-puts.$(OBJEXT) libce_a-sprintf.$(OBJEXT) \
	libce_a-streams.$(OBJEXT) libce_a-strmgpsim.$(OBJEXT) \
	libce_a-strmmssp.$(OBJEXT) libce_a-strmusart.$(OBJEXT) \
	libce_a-vfprintf.$(OBJEXT) libce_a-vprintf.$(OBJEXT) \
	libce_a-vsprintf.$(OBJEXT) libce_a-_atof.$(OBJEXT) \
	libce_a-_ftoa.$(OBJEXT) libce_a-__itoa.$(OBJEXT) \
	libce_a-__ltoa.$(OBJEXT) libce_a-abs.$(OBJEXT) \
	libce_a-aligned_alloc.$(OBJEXT) libce_a-atoi.$(OBJEXT) \
	libce_a-atol.$(OBJEXT) libce_a-bsearch.$(OBJEXT) \
	libce_a-_calloc.$(OBJEXT) libce_a-free.$(OBJEXT) \
	libce_a-labs.$(OBJEXT) libce_a-malloc.$(OBJEXT) \
	libce_a-mblen.$(OBJEXT) libce_a-mbstowcs.$(OBJEXT) \
	libce_a-mbtowc.$(OBJEXT) libce_a-memfree.$(OBJEXT) \
	libce_a-memfreemax.$(OBJEXT) libce_a-memmisc.$(OBJEXT) \
	libce_a-qsort.$(OBJEXT) libce_a-rand.$(OBJEXT) \
	libce_a-realloc.$(OBJEXT) libce_a-strtol.$(OBJEXT) \
	libce_a-strtoul.$(OBJEXT) libce_a-wcstombs.$(OBJEXT) \
	libce_a-wctomb.$(OBJEXT) libce_a-_memchr.$(OBJEXT) \
	libce_a-_memcmp.$(OBJEXT) libce_a-__memcpy.$(OBJEXT) \
	libce_a-memcpy.$(OBJEXT) libce_a-_memmove.$(OBJEXT) \
	libce_a-_memset.$(OBJEXT) libce_a-_strcat.$(OBJEXT) \
	libce_a-_strchr.$(OBJEXT) libce_a-_strcmp.$(OBJEXT) \
	libce_a-_strcpy.$(OBJEXT) libce_a-_strcspn.$(OBJEXT) \
	libce_a-_strlen.$(OBJEXT) libce_a-_strncat.$(OBJEXT) \
	libce_a-_strncmp.$(OBJEXT) libce_a-_strncpy.$(OBJEXT) \
	libce_a-_strpbrk.$(OBJEXT) libce_a-_strrchr.$(OBJEXT) \
	libce_a-_strspn.$(OBJEXT) libce_a-_strstr.$(OBJEXT) \
	libce_a-_strtok.$(OBJEXT) libce_a-strxfrm.$(OBJEXT) \
	libce_a-c16rtomb.$(OBJEXT) libce_a-c16stombs.$(OBJEXT) \
	libce_a-c32rtomb.$(OBJEXT) libce_a-mbrtoc16.$(OBJEXT) \
	libce_a-mbrtoc32.$(OBJEXT) libce_a-mbstoc16s.$(OBJEXT) \
	libce_a-btowc.$(OBJEXT) libce_a-mbrlen.$(OBJEXT) \
	libce_a-mbrtowc.$(OBJEXT) libce_a-mbsinit.$(OBJEXT) \
	libce_a-wcrtomb.$(OBJEXT) libce_a-wcscmp.$(OBJEXT) \
	libce_a-wcslen.$(OBJEXT) libce_a-wctob.$(OBJEXT)
@ENABLE_ENHANCED_PICS_TRUE@am_libce_a_OBJECTS = $(am__objects_1)
libce_a_OBJECTS = $(am_libce_a_OBJECTS)
libceo_a_AR = $(AR) $(ARFLAGS)
libceo_a_LIBADD =
am__libceo_a_SOURCES_DIST = __assert.c isalnum.c isalpha.c isblank.c \
	iscntrl.c isdigit.c isgraph.c islower.c isprint.c ispunct.c \
	isspace.c isupper.c isxdigit.c tolower.c toupper.c errno.c \
	fprintf.c fputc.c fputs.c getchar.c gets.c printf.c printfl.c \
	putchar.c puts.c sprintf.c streams.c strmgpsim.c strmmssp.c \
	strmusart.c vfprintf.c vprintf.c vsprintf.c _atof.c _ftoa.c \
	__itoa.c __ltoa.c abs.c aligned_alloc.c atoi.c atol.c \
	bsearch.c _calloc.c free.c labs.c malloc.c mblen.c mbstowcs.c \
	mbtowc.c memfree.c memfreemax.c memmisc.c qsort.c rand.c \
	realloc.c strtol.c strtoul.c wcstombs.c wctomb.c _memchr.c \
	_memcmp.c __memcpy.c memcpy.c _memmove.c _memset.c _strcat.c \
	_strchr.c _strcmp.c _strcpy.c _strcspn.c _strlen.c _strncat.c \
	_strncmp.c _strncpy.c _strpbrk.c _strrchr.c _strspn.c \
	_strstr.c _strtok.c strxfrm.c c16rtomb.c c16stombs.c \
	c32rtomb.c mbrtoc16.c mbrtoc32.c mbstoc16s.c btowc.c mbrlen.c \
	mbrtowc.c mbsinit.c wcrtomb.c wcscmp.c wcslen.c wctob.c
am__objects_2 = libceo_a-__assert.$(OBJEXT) libceo_a-isalnum.$(OBJEXT) \
	libceo_a-isalpha.$(OBJEXT) libceo_a-isblank.$(OBJEXT) \
	libceo_a-iscntrl.$(OBJEXT) libceo_a-isdigit.$(OBJEXT) \
	libceo_a-isgraph.$(OBJEXT) libceo_a-islower.$(OBJEXT) \
	libceo_a-isprint.$(OBJEXT) libceo_a-ispunct.$(OBJEXT) \
	libceo_a-isspace.$(OBJEXT) libceo_a-isupper.$(OBJEXT) \
	libceo_a-isxdigit.$(OBJEXT) libceo_a-tolower.$(OBJEXT) \
	libceo_a-toupper.$(OBJEXT) libceo_a-errno.$(OBJEXT) \
	libceo_a-fprintf.$(OBJEXT) libceo_a-fputc.$(OBJEXT) \
	libceo_a-fputs.$(OBJEXT) libceo_a-getchar.$(OBJEXT) \
	libceo_a-gets.$(OBJEXT) libceo_a-printf.$(OBJEXT) \
	libceo_a-printfl.$(OBJEXT) libceo_a-putchar.$(OBJEXT) \
	libceo_a-puts.$(OBJEXT) libceo_a-sprintf.$(OBJEXT) \
	libceo_a-streams.$(OBJEXT) libceo_a-strmgpsim.$(OBJEXT) \
	libceo_a-strmmssp.$(OBJEXT) libceo_a-strmusart.$(OBJEXT) \
	libceo_a-vfprintf.$(OBJEXT) libceo_a-vprintf.$(OBJEXT) \
	libceo_a-vsprintf.$(OBJEXT) libceo_a-_atof.$(OBJEXT) \
	libceo_a-_ftoa.$(OBJEXT) libceo_a-__itoa.$(OBJEXT) \
	libceo_a-__ltoa.$(OBJEXT) libceo_a-abs.$(OBJEXT) \
	libceo_a-aligned_alloc.$(OBJEXT) libceo_a-atoi.$(OBJEXT) \
	libceo_a-atol.$(OBJEXT) libceo_a-bsearch.$(OBJEXT) \
	libceo_a-_calloc.$(OBJEXT) libceo_a-free.$(OBJEXT) \
	libceo_a-labs.$(OBJEXT) libceo_a-malloc.$(OBJEXT) \
	libceo_a-mblen.$(OBJEXT) libceo_a-mbstowcs.$(OBJEXT) \
	libceo_a-mbtowc.$(OBJEXT) libceo_a-memfree.$(OBJEXT) \
	libceo_a-memfreemax.$(OBJEXT) libceo_a-memmisc.$(OBJEXT) \
	libceo_a-qsort.$(OBJEXT) libceo_a-rand.$(OBJEXT) \
	libceo_a-realloc.$(OBJEXT) libceo_a-strtol.$(OBJEXT) \
	libceo_a-strtoul.$(OBJEXT) libceo_a-wcstombs.$(OBJEXT) \
	libceo_a-wctomb.$(OBJEXT) libceo_a-_memchr.$(OBJEXT) \
	libceo_a-_memcmp.$(OBJEXT) libceo_a-__memcpy.$(OBJEXT) \
	libceo_a-memcpy.$(OBJEXT) libceo_a-_memmove.$(OBJEXT) \
	libceo_a-_memset.$(OBJEXT) libceo_a-_strcat.$(OBJEXT) \
	libceo_a-_strchr.$(OBJEXT) libceo_a-_strcmp.$(OBJEXT) \
	libceo_a-_strcpy.$(OBJEXT) libceo_a-_strcspn.$(OBJEXT) \
	libceo_a-_strlen.$(OBJEXT) libceo_a-_strncat.$(OBJEXT) \
	libceo_a-_strncmp.$(OBJEXT) libceo_a-_strncpy.$(OBJEXT) \
	libceo_a-_strpbrk.$(OBJEXT) libceo_a-_strrchr.$(OBJEXT) \
	libceo_a-_strspn.$(OBJEXT) libceo_a-_strstr.$(OBJEXT) \
	libceo_a-_strtok.$(OBJEXT) libceo_a-strxfrm.$(OBJEXT) \
	libceo_a-c16rtomb.$(OBJEXT) libceo_a-c16stombs.$(OBJEXT) \
	libceo_a-c32rtomb.$(OBJEXT) libceo_a-mbrtoc16.$(OBJEXT) \
	libceo_a-mbrtoc32.$(OBJEXT) libceo_a-mbstoc16s.$(OBJEXT) \
	libceo_a-btowc.$(OBJEXT) libceo_a-mbrlen.$(OBJEXT) \
	libceo_a-mbrtowc.$(OBJEXT) libceo_a-mbsinit.$(OBJEXT) \
	libceo_a-wcrtomb.$(OBJEXT) libceo_a-wcscmp.$(OBJEXT) \
	libceo_a-wcslen.$(OBJEXT) libceo_a-wctob.$(OBJEXT)
@ENABLE_ENHANCED_PICS_TRUE@@ENABLE_NOOPTS_TRUE@am_libceo_a_OBJECTS = $(am__objects_2)
libceo_a_OBJECTS = $(am_libceo_a_OBJECTS)
libceox_a_AR = $(AR) $(ARFLAGS)
libceox_a_LIBADD =
am__libceox_a_SOURCES_DIST = __assert.c isalnum.c isalpha.c isblank.c \
	iscntrl.c isdigit.c isgraph.c islower.c isprint.c ispunct.c \
	isspace.c isupper.c isxdigit.c tolower.c toupper.c errno.c \
	fprintf.c fputc.c fputs.c getchar.c gets.c printf.c printfl.c \
	putchar.c puts.c sprintf.c streams.c strmgpsim.c strmmssp.c \
	strmusart.c vfprintf.c vprintf.c vsprintf.c _atof.c _ftoa.c \
	__itoa.c __ltoa.c abs.c aligned_alloc.c atoi.c atol.c \
	bsearch.c _calloc.c free.c labs.c malloc.c mblen.c mbstowcs.c \
	mbtowc.c memfree.c memfreemax.c memmisc.c qsort.c rand.c \
	realloc.c strtol.c strtoul.c wcstombs.c wctomb.c _memchr.c \
	_memcmp.c __memcpy.c memcpy.c _memmove.c _memset.c _strcat.c \
	_strchr.c _strcmp.c _strcpy.c _strcspn.c _strlen.c _strncat.c \
	_strncmp.c _strncpy.c _strpbrk.c _strrchr.c _strspn.c \
	_strstr.c _strtok.c strxfrm.c c16rtomb.c c16stombs.c \
	c32rtomb.c mbrtoc16.c mbrtoc32.c mbstoc16s.c btowc.c mbrlen.c \
	mbrtowc.c mbsinit.c wcrtomb.c wcscmp.c wcslen.c wctob.c
am__objects_3 = libceox_a-__assert.$(OBJEXT) \
	libceox_a-isalnum.$(OBJEXT) libceox_a-isalpha.$(OBJEXT) \
	libceox_a-isblank.$(OBJEXT) libceox_a-iscntrl.$(OBJEXT) \
	libceox_a-isdigit.$(OBJEXT) libceox_a-isgraph.$(OBJEXT) \
	libceox_a-islower.$(OBJEXT) libceox_a-isprint.$(OBJEXT) \
	libceox_a-ispunct.$(OBJEXT) libceox_a-isspace.$(OBJEXT) \
	libceox_a-isupper.$(OBJEXT) libceox_a-isxdigit.$(OBJEXT) \
	libceox_a-tolower.$(OBJEXT) libceox_a-toupper.$(OBJEXT) \
	libceox_a-errno.$(OBJEXT) libceox_a-fprintf.$(OBJEXT) \
	libceox_a-fputc.$(OBJEXT) libceox_a-fputs.$(OBJEXT) \
	libceox_a-getchar.$(OBJEXT) libceox_a-gets.$(OBJEXT) \
	libceox_a-printf.$(OBJEXT) libceox_a-printfl.$(OBJEXT) \
	libceox_a-putchar.$(OBJEXT) libceox_a-puts.$(OBJEXT) \
	libceox_a-sprintf.$(OBJEXT) libceox_a-streams.$(OBJEXT) \
	libceox_a-strmgpsim.$(OBJEXT) libceox_a-strmmssp.$(OBJEXT) \
	libceox_a-strmusart.$(OBJEXT) libceox_a-vfprintf.$(OBJEXT) \
	libceox_a-vprintf.$(OBJEXT) libceox_a-vsprintf.$(OBJEXT) \
	libceox_a-_atof.$(OBJEXT) libceox_a-_ftoa.$(OBJEXT) \
	libceox_a-__itoa.$(OBJEXT) libceox_a-__ltoa.$(OBJEXT) \
	libceox_a-abs.$(OBJEXT) libceox_a-aligned_alloc.$(OBJEXT) \
	libceox_a-atoi.$(OBJEXT) libceox_a-atol.$(OBJEXT) \
	libceox_a-bsearch.$(OBJEXT) libceox_a-_calloc.$(OBJEXT) \
	libceox_a-free.$(OBJEXT) libceox_a-labs.$(OBJEXT) \
	libceox_a-malloc.$(OBJEXT) libceox_a-mblen.$(OBJEXT) \
	libceox_a-mbstowcs.$(OBJEXT) libceox_a-mbtowc.$(OBJEXT) \
	libceox_a-memfree.$(OBJEXT) libceox_a-memfreemax.$(OBJEXT) \
	libceox_a-memmisc.$(OBJEXT) libceox_a-qsort.$(OBJEXT) \
	libceox_a-rand.$(OBJEXT) libceox_a-realloc.$(OBJEXT) \
	libceox_a-strtol.$(OBJEXT) libceox_a-strtoul.$(OBJEXT) \
	libceox_a-wcstombs.$(OBJEXT) libceox_a-wctomb.$(OBJEXT) \
	libceox_a-_memchr.$(OBJEXT) libceox_a-_memcmp.$(OBJEXT) \
	libceox_a-__memcpy.$(OBJEXT) libceox_a-memcpy.$(OBJEXT) \
	libceox_a-_memmove.$(OBJEXT) libceox_a-_memset.$(OBJEXT) \
	libceox_a-_strcat.$(OBJEXT) libceox_a-_strchr.$(OBJEXT) \
	libceox_a-_strcmp.$(OBJEXT) libceox_a-_strcpy.$(OBJEXT) \
	libceox_a-_strcspn.$(OBJEXT) libceox_a-_strlen.$(OBJEXT) \
	libceox_a-_strncat.$(OBJEXT) libceox_a-_strncmp.$(OBJEXT) \
	libceox_a-_strncpy.$(OBJEXT) libceox_a-_strpbrk.$(OBJEXT) \
	libceox_a-_strrchr.$(OBJEXT) libceox_a-_strspn.$(OBJEXT) \
	libceox_a-_strstr.$(OBJEXT) libceox_a-_strtok.$(OBJEXT) \
	libceox_a-strxfrm.$(OBJEXT) libceox_a-c16rtomb.$(OBJEXT) \
	libceox_a-c16stombs.$(OBJEXT) libceox_a-c32rtomb.$(OBJEXT) \
	libceox_a-mbrtoc16.$(OBJEXT) libceox_a-mbrtoc32.$(OBJEXT) \
	libceox_a-mbstoc16s.$(OBJEXT) libceox_a-btowc.$(OBJEXT) \
	libceox_a-mbrlen.$(OBJEXT) libceox_a-mbrtowc.$(OBJEXT) \
	libceox_a-mbsinit.$(OBJEXT) libceox_a-wcrtomb.$(OBJEXT) \
	libceox_a-wcscmp.$(OBJEXT) libceox_a-wcslen.$(OBJEXT) \
	libceox_a-wctob.$(OBJEXT)
@ENABLE_ENHANCED_PICS_TRUE@@ENABLE_EXPERIMENTAL_TRUE@@ENABLE_NOOPTS_TRUE@am_libceox_a_OBJECTS = $(am__objects_3)
libceox_a_OBJECTS = $(am_libceox_a_OBJECTS)
libcex_a_AR = $(AR) $(ARFLAGS)
libcex_a_LIBADD =
am__libcex_a_SOURCES_DIST = __assert.c isalnum.c isalpha.c isblank.c \
	iscntrl.c isdigit.c isgraph.c islower.c isprint.c ispunct.c \
	isspace.c isupper.c isxdigit.c tolower.c toupper.c errno.c \
	fprintf.c fputc.c fputs.c getchar.c gets.c printf.c printfl.c \
	putchar.c puts.c sprintf.c streams.c strmgpsim.c strmmssp.c \
	strmusart.c vfprintf.c vprintf.c vsprintf.c _atof.c _ftoa.c \
	__itoa.c __ltoa.c abs.c aligned_alloc.c atoi.c atol.c \
	bsearch.c _calloc.c free.c labs.c malloc.c mblen.c mbstowcs.c \
	mbtowc.c memfree.c memfreemax.c memmisc.c qsort.c rand.c \
	realloc.c strtol.c strtoul.c wcstombs.c wctomb.c _memchr.c \
	_memcmp.c __memcpy.c memcpy.c _memmove.c _memset.c _strcat.c \
	_strchr.c _strcmp.c _strcpy.c _strcspn.c _strlen.c _strncat.c \
	_strncmp.c _strncpy.c _strpbrk.c _strrchr.c _strspn.c \
	_strstr.c _strtok.c strxfrm.c c16rtomb.c c16stombs.c \
	c32rtomb.c mbrtoc16.c mbrtoc32.c mbstoc16s.c btowc.c mbrlen.c \
	mbrtowc.c mbsinit.c wcrtomb.c wcscmp.c wcslen.c wctob.c
am__objects_4 = libcex_a-__assert.$(OBJEXT) libcex_a-isalnum.$(OBJEXT) \
	libcex_a-isalpha.$(OBJEXT) libcex_a-isblank.$(OBJEXT) \
	libcex_a-iscntrl.$(OBJEXT) libcex_a-isdigit.$(OBJEXT) \
	libcex_a-isgraph.$(OBJEXT) libcex_a-islower.$(OBJEXT) \
	libcex_a-isprint.$(OBJEXT) libcex_a-ispunct.$(OBJEXT) \
	libcex_a-isspace.$(OBJEXT) libcex_a-isupper.$(OBJEXT) \
	libcex_a-isxdigit.$(OBJEXT) libcex_a-tolower.$(OBJEXT) \
	libcex_a-toupper.$(OBJEXT) libcex_a-errno.$(OBJEXT) \
	libcex_a-fprintf.$(OBJEXT) libcex_a-fputc.$(OBJEXT) \
	libcex_a-fputs.$(OBJEXT) libcex_a-getchar.$(OBJEXT) \
	libcex_a-gets.$(OBJEXT) libcex_a-printf.$(OBJEXT) \
	libcex_a-printfl.$(OBJEXT) libcex_a-putchar.$(OBJEXT) \
	libcex_a-puts.$(OBJEXT) libcex_a-sprintf.$(OBJEXT) \
	libcex_a-streams.$(OBJEXT) libcex_a-strmgpsim.$(OBJEXT) \
	libcex_a-strmmssp.$(OBJEXT) libcex_a-strmusart.$(OBJEXT) \
	libcex_a-vfprintf.$(OBJEXT) libcex_a-vprintf.$(OBJEXT) \
	libcex_a-vsprintf.$(OBJEXT) libcex_a-_atof.$(OBJEXT) \
	libcex_a-_ftoa.$(OBJEXT) libcex_a-__itoa.$(OBJEXT) \
	libcex_a-__ltoa.$(OBJEXT) libcex_a-abs.$(OBJEXT) \
	libcex_a-aligned_alloc.$(OBJEXT) libcex_a-atoi.$(OBJEXT) \
	libcex_a-atol.$(OBJEXT) libcex_a-bsearch.$(OBJEXT) \
	libcex_a-_calloc.$(OBJEXT) libcex_a-free.$(OBJEXT) \
	libcex_a-labs.$(OBJEXT) libcex_a-malloc.$(OBJEXT) \
	libcex_a-mblen.$(OBJEXT) libcex_a-mbstowcs.$(OBJEXT) \
	libcex_a-mbtowc.$(OBJEXT) libcex_a-memfree.$(OBJEXT) \
	libcex_a-memfreemax.$(OBJEXT) libcex_a-memmisc.$(OBJEXT) \
	libcex_a-qsort.$(OBJEXT) libcex_a-rand.$(OBJEXT) \
	libcex_a-realloc.$(OBJEXT) libcex_a-strtol.$(OBJEXT) \
	libcex_a-strtoul.$(OBJEXT) libcex_a-wcstombs.$(OBJEXT) \
	libcex_a-wctomb.$(OBJEXT) libcex_a-_memchr.$(OBJEXT) \
	libcex_a-_memcmp.$(OBJEXT) libcex_a-__memcpy.$(OBJEXT) \
	libcex_a-memcpy.$(OBJEXT) libcex_a-_memmove.$(OBJEXT) \
	libcex_a-_memset.$(OBJEXT) libcex_a-_strcat.$(OBJEXT) \
	libcex_a-_strchr.$(OBJEXT) libcex_a-_strcmp.$(OBJEXT) \
	libcex_a-_strcpy.$(OBJEXT) libcex_a-_strcspn.$(OBJEXT) \
	libcex_a-_strlen.$(OBJEXT) libcex_a-_strncat.$(OBJEXT) \
	libcex_a-_strncmp.$(OBJEXT) libcex_a-_strncpy.$(OBJEXT) \
	libcex_a-_strpbrk.$(OBJEXT) libcex_a-_strrchr.$(OBJEXT) \
	libcex_a-_strspn.$(OBJEXT) libcex_a-_strstr.$(OBJEXT) \
	libcex_a-_strtok.$(OBJEXT) libcex_a-strxfrm.$(OBJEXT) \
	libcex_a-c16rtomb.$(OBJEXT) libcex_a-c16stombs.$(OBJEXT) \
	libcex_a-c32rtomb.$(OBJEXT) libcex_a-mbrtoc16.$(OBJEXT) \
	libcex_a-mbrtoc32.$(OBJEXT) libcex_a-mbstoc16s.$(OBJEXT) \
	libcex_a-btowc.$(OBJEXT) libcex_a-mbrlen.$(OBJEXT) \
	libcex_a-mbrtowc.$(OBJEXT) libcex_a-mbsinit.$(OBJEXT) \
	libcex_a-wcrtomb.$(OBJEXT) libcex_a-wcscmp.$(OBJEXT) \
	libcex_a-wcslen.$(OBJEXT) libcex_a-wctob.$(OBJEXT)
@ENABLE_ENHANCED_PICS_TRUE@@ENABLE_EXPERIMENTAL_TRUE@am_libcex_a_OBJECTS = $(am__objects_4)
libcex_a_OBJECTS = $(am_libcex_a_OBJECTS)
libco_a_AR = $(AR) $(ARFLAGS)
libco_a_LIBADD =
am__libco_a_SOURCES_DIST = __assert.c isalnum.c isalpha.c isblank.c \
	iscntrl.c isdigit.c isgraph.c islower.c isprint.c ispunct.c \
	isspace.c isupper.c isxdigit.c tolower.c toupper.c errno.c \
	fprintf.c fputc.c fputs.c getchar.c gets.c printf.c printfl.c \
	putchar.c puts.c sprintf.c streams.c strmgpsim.c strmmssp.c \
	strmusart.c vfprintf.c vprintf.c vsprintf.c _atof.c _ftoa.c \
	__itoa.c __ltoa.c abs.c aligned_alloc.c atoi.c atol.c \
	bsearch.c _calloc.c free.c labs.c malloc.c mblen.c mbstowcs.c \
	mbtowc.c memfree.c memfreemax.c memmisc.c qsort.c rand.c \
	realloc.c strtol.c strtoul.c wcstombs.c wctomb.c _memchr.c \
	_memcmp.c __memcpy.c memcpy.c _memmove.c _memset.c _strcat.c \
	_strchr.c _strcmp.c _strcpy.c _strcspn.c _strlen.c _strncat.c \
	_strncmp.c _strncpy.c _strpbrk.c _strrchr.c _strspn.c \
	_strstr.c _strtok.c strxfrm.c c16rtomb.c c16stombs.c \
	c32rtomb.c mbrtoc16.c mbrtoc32.c mbstoc16s.c btowc.c mbrlen.c \
	mbrtowc.c mbsinit.c wcrtomb.c wcscmp.c wcslen.c wctob.c
am__objects_5 = libco_a-__assert.$(OBJEXT) libco_a-isalnum.$(OBJEXT) \
	libco_a-isalpha.$(OBJEXT) libco_a-isblank.$(OBJEXT) \
	libco_a-iscntrl.$(OBJEXT) libco_a-isdigit.$(OBJEXT) \
	libco_a-isgraph.$(OBJEXT) libco_a-islower.$(OBJEXT) \
	libco_a-isprint.$(OBJEXT) libco_a-ispunct.$(OBJEXT) \
	libco_a-isspace.$(OBJEXT) libco_a-isupper.$(OBJEXT) \
	libco_a-isxdigit.$(OBJEXT) libco_a-tolower.$(OBJEXT) \
	libco_a-toupper.$(OBJEXT) libco_a-errno.$(OBJEXT) \
	libco_a-fprintf.$(OBJEXT) libco_a-fputc.$(OBJEXT) \
	libco_a-fputs.$(OBJEXT) libco_a-getchar.$(OBJEXT) \
	libco_a-gets.$(OBJEXT) libco_a-printf.$(OBJEXT) \
	libco_a-printfl.$(OBJEXT) libco_a-putchar.$(OBJEXT) \
	libco_a-puts.$(OBJEXT) libco_a-sprintf.$(OBJEXT) \
	libco_a-streams.$(OBJEXT) libco_a-strmgpsim.$(OBJEXT) \
	libco_a-strmmssp.$(OBJEXT) libco_a-strmusart.$(OBJEXT) \
	libco_a-vfprintf.$(OBJEXT) libco_a-vprintf.$(OBJEXT) \
	libco_a-vsprintf.$(OBJEXT) libco_a-_atof.$(OBJEXT) \
	libco_a-_ftoa.$(OBJEXT) libco_a-__itoa.$(OBJEXT) \
	libco_a-__ltoa.$(OBJEXT) libco_a-abs.$(OBJEXT) \
	libco_a-aligned_alloc.$(OBJEXT) libco_a-atoi.$(OBJEXT) \
	libco_a-atol.$(OBJEXT) libco_a-bsearch.$(OBJEXT) \
	libco_a-_calloc.$(OBJEXT) libco_a-free.$(OBJEXT) \
	libco_a-labs.$(OBJEXT) libco_a-malloc.$(OBJEXT) \
	libco_a-mblen.$(OBJEXT) libco_a-mbstowcs.$(OBJEXT) \
	libco_a-mbtowc.$(OBJEXT) libco_a-memfree.$(OBJEXT) \
	libco_a-memfreemax.$(OBJEXT) libco_a-memmisc.$(OBJEXT) \
	libco_a-qsort.$(OBJEXT) libco_a-rand.$(OBJEXT) \
	libco_a-realloc.$(OBJEXT) libco_a-strtol.$(OBJEXT) \
	libco_a-strtoul.$(OBJEXT) libco_a-wcstombs.$(OBJEXT) \
	libco_a-wctomb.$(OBJEXT) libco_a-_memchr.$(OBJEXT) \
	libco_a-_memcmp.$(OBJEXT) libco_a-__memcpy.$(OBJEXT) \
	libco_a-memcpy.$(OBJEXT) libco_a-_memmove.$(OBJEXT) \
	libco_a-_memset.$(OBJEXT) libco_a-_strcat.$(OBJEXT) \
	libco_a-_strchr.$(OBJEXT) libco_a-_strcmp.$(OBJEXT) \
	libco_a-_strcpy.$(OBJEXT) libco_a-_strcspn.$(OBJEXT) \
	libco_a-_strlen.$(OBJEXT) libco_a-_strncat.$(OBJEXT) \
	libco_a-_strncmp.$(OBJEXT) libco_a-_strncpy.$(OBJEXT) \
	libco_a-_strpbrk.$(OBJEXT) libco_a-_strrchr.$(OBJEXT) \
	libco_a-_strspn.$(OBJEXT) libco_a-_strstr.$(OBJEXT) \
	libco_a-_strtok.$(OBJEXT) libco_a-strxfrm.$(OBJEXT) \
	libco_a-c16rtomb.$(OBJEXT) libco_a-c16stombs.$(OBJEXT) \
	libco_a-c32rtomb.$(OBJEXT) libco_a-mbrtoc16.$(OBJEXT) \
	libco_a-mbrtoc32.$(OBJEXT) libco_a-mbstoc16s.$(OBJEXT) \
	libco_a-btowc.$(OBJEXT) libco_a-mbrlen.$(OBJEXT) \
	libco_a-mbrtowc.$(OBJEXT) libco_a-mbsinit.$(OBJEXT) \
	libco_a-wcrtomb.$(OBJEXT) libco_a-wcscmp.$(OBJEXT) \
	libco_a-wcslen.$(OBJEXT) libco_a-wctob.$(OBJEXT)
@ENABLE_NOOPTS_TRUE@am_libco_a_OBJECTS = $(am__objects_5)
libco_a_OBJECTS = $(am_libco_a_OBJECTS)
libcox_a_AR = $(AR) $(ARFLAGS)
libcox_a_LIBADD =
am__libcox_a_SOURCES_DIST = __assert.c isalnum.c isalpha.c isblank.c \
	iscntrl.c isdigit.c isgraph.c islower.c isprint.c ispunct.c \
	isspace.c isupper.c isxdigit.c tolower.c toupper.c errno.c \
	fprintf.c fputc.c fputs.c getchar.c gets.c printf.c printfl.c \
	putchar.c puts.c sprintf.c streams.c strmgpsim.c strmmssp.c \
	strmusart.c vfprintf.c vprintf.c vsprintf.c _atof.c _ftoa.c \
	__itoa.c __ltoa.c abs.c aligned_alloc.c atoi.c atol.c \
	bsearch.c _calloc.c free.c labs.c malloc.c mblen.c mbstowcs.c \
	mbtowc.c memfree.c memfreemax.c memmisc.c qsort.c rand.c \
	realloc.c strtol.c strtoul.c wcstombs.c wctomb.c _memchr.c \
	_memcmp.c __memcpy.c memcpy.c _memmove.c _memset.c _strcat.c \
	_strchr.c _strcmp.c _strcpy.c _strcspn.c _strlen.c _strncat.c \
	_strncmp.c _strncpy.c _strpbrk.c _strrchr.c _strspn.c \
	_strstr.c _strtok.c strxfrm.c c16rtomb.c c16stombs.c \
	c32rtomb.c mbrtoc16.c mbrtoc32.c mbstoc16s.c btowc.c mbrlen.c \
	mbrtowc.c mbsinit.c wcrtomb.c wcscmp.c wcslen.c wctob.c
am__objects_6 = libcox_a-__assert.$(OBJEXT) libcox_a-isalnum.$(OBJEXT) \
	libcox_a-isalpha.$(OBJEXT) libcox_a-isblank.$(OBJEXT) \
	libcox_a-iscntrl.$(OBJEXT) libcox_a-isdigit.$(OBJEXT) \
	libcox_a-isgraph.$(OBJEXT) libcox_a-islower.$(OBJEXT) \
	libcox_a-isprint.$(OBJEXT) libcox_a-ispunct.$(OBJEXT) \
	libcox_a-isspace.$(OBJEXT) libcox_a-isupper.$(OBJEXT) \
	libcox_a-isxdigit.$(OBJEXT) libcox_a-tolower.$(OBJEXT) \
	libcox_a-toupper.$(OBJEXT) libcox_a-errno.$(OBJEXT) \
	libcox_a-fprintf.$(OBJEXT) libcox_a-fputc.$(OBJEXT) \
	libcox_a-fputs.$(OBJEXT) libcox_a-getchar.$(OBJEXT) \
	libcox_a-gets.$(OBJEXT) libcox_a-printf.$(OBJEXT) \
	libcox_a-printfl.$(OBJEXT) libcox_a-putchar.$(OBJEXT) \
	libcox_a-puts.$(OBJEXT) libcox_a-sprintf.$(OBJEXT) \
	libcox_a-streams.$(OBJEXT) libcox_a-strmgpsim.$(OBJEXT) \
	libcox_a-strmmssp.$(OBJEXT) libcox_a-strmusart.$(OBJEXT) \
	libcox_a-vfprintf.$(OBJEXT) libcox_a-vprintf.$(OBJEXT) \
	libcox_a-vsprintf.$(OBJEXT) libcox_a-_atof.$(OBJEXT) \
	libcox_a-_ftoa.$(OBJEXT) libcox_a-__itoa.$(OBJEXT) \
	libcox_a-__ltoa.$(OBJEXT) libcox_a-abs.$(OBJEXT) \
	libcox_a-aligned_alloc.$(OBJEXT) libcox_a-atoi.$(OBJEXT) \
	libcox_a-atol.$(OBJEXT) libcox_a-bsearch.$(OBJEXT) \
	libcox_a-_calloc.$(OBJEXT) libcox_a-free.$(OBJEXT) \
	libcox_a-labs.$(OBJEXT) libcox_a-malloc.$(OBJEXT) \
	libcox_a-mblen.$(OBJEXT) libcox_a-mbstowcs.$(OBJEXT) \
	libcox_a-mbtowc.$(OBJEXT) libcox_a-memfree.$(OBJEXT) \
	libcox_a-memfreemax.$(OBJEXT) libcox_a-memmisc.$(OBJEXT) \
	libcox_a-qsort.$(OBJEXT) libcox_a-rand.$(OBJEXT) \
	libcox_a-realloc.$(OBJEXT) libcox_a-strtol.$(OBJEXT) \
	libcox_a-strtoul.$(OBJEXT) libcox_a-wcstombs.$(OBJEXT) \
	libcox_a-wctomb.$(OBJEXT) libcox_a-_memchr.$(OBJEXT) \
	libcox_a-_memcmp.$(OBJEXT) libcox_a-__memcpy.$(OBJEXT) \
	libcox_a-memcpy.$(OBJEXT) libcox_a-_memmove.$(OBJEXT) \
	libcox_a-_memset.$(OBJEXT) libcox_a-_strcat.$(OBJEXT) \
	libcox_a-_strchr.$(OBJEXT) libcox_a-_strcmp.$(OBJEXT) \
	libcox_a-_strcpy.$(OBJEXT) libcox_a-_strcspn.$(OBJEXT) \
	libcox_a-_strlen.$(OBJEXT) libcox_a-_strncat.$(OBJEXT) \
	libcox_a-_strncmp.$(OBJEXT) libcox_a-_strncpy.$(OBJEXT) \
	libcox_a-_strpbrk.$(OBJEXT) libcox_a-_strrchr.$(OBJEXT) \
	libcox_a-_strspn.$(OBJEXT) libcox_a-_strstr.$(OBJEXT) \
	libcox_a-_strtok.$(OBJEXT) libcox_a-strxfrm.$(OBJEXT) \
	libcox_a-c16rtomb.$(OBJEXT) libcox_a-c16stombs.$(OBJEXT) \
	libcox_a-c32rtomb.$(OBJEXT) libcox_a-mbrtoc16.$(OBJEXT) \
	libcox_a-mbrtoc32.$(OBJEXT) libcox_a-mbstoc16s.$(OBJEXT) \
	libcox_a-btowc.$(OBJEXT) libcox_a-mbrlen.$(OBJEXT) \
	libcox_a-mbrtowc.$(OBJEXT) libcox_a-mbsinit.$(OBJEXT) \
	libcox_a-wcrtomb.$(OBJEXT) libcox_a-wcscmp.$(OBJEXT) \
	libcox_a-wcslen.$(OBJEXT) libcox_a-wctob.$(OBJEXT)
@ENABLE_EXPERIMENTAL_TRUE@@ENABLE_NOOPTS_TRUE@am_libcox_a_OBJECTS = $(am__objects_6)
libcox_a_OBJECTS = $(am_libcox_a_OBJECTS)
libcx_a_AR = $(AR) $(ARFLAGS)
libcx_a_LIBADD =
am__libcx_a_SOURCES_DIST = __assert.c isalnum.c isalpha.c isblank.c \
	iscntrl.c isdigit.c isgraph.c islower.c isprint.c ispunct.c \
	isspace.c isupper.c isxdigit.c tolower.c toupper.c errno.c \
	fprintf.c fputc.c fputs.c getchar.c gets.c printf.c printfl.c \
	putchar.c puts.c sprintf.c streams.c strmgpsim.c strmmssp.c \
	strmusart.c vfprintf.c vprintf.c vsprintf.c _atof.c _ftoa.c \
	__itoa.c __ltoa.c abs.c aligned_alloc.c atoi.c atol.c \
	bsearch.c _calloc.c free.c labs.c malloc.c mblen.c mbstowcs.c \
	mbtowc.c memfree.c memfreemax.c memmisc.c qsort.c rand.c \
	realloc.c strtol.c strtoul.c wcstombs.c wctomb.c _memchr.c \
	_memcmp.c __memcpy.c memcpy.c _memmove.c _memset.c _strcat.c \
	_strchr.c _strcmp.c _strcpy.c _strcspn.c _strlen.c _strncat.c \
	_strncmp.c _strncpy.c _strpbrk.c _strrchr.c _strspn.c \
	_strstr.c _strtok.c strxfrm.c c16rtomb.c c16stombs.c \
	c32rtomb.c mbrtoc16.c mbrtoc32.c mbstoc16s.c btowc.c mbrlen.c \
	mbrtowc.c mbsinit.c wcrtomb.c wcscmp.c wcslen.c wctob.c
am__objects_7 = libcx_a-__assert.$(OBJEXT) libcx_a-isalnum.$(OBJEXT) \
	libcx_a-isalpha.$(OBJEXT) libcx_a-isblank.$(OBJEXT) \
	libcx_a-iscntrl.$(OBJEXT) libcx_a-isdigit.$(OBJEXT) \
	libcx_a-isgraph.$(OBJEXT) libcx_a-islower.$(OBJEXT) \
	libcx_a-isprint.$(OBJEXT) libcx_a-ispunct.$(OBJEXT) \
	libcx_a-isspace.$(OBJEXT) libcx_a-isupper.$(OBJEXT) \
	libcx_a-isxdigit.$(OBJEXT) libcx_a-tolower.$(OBJEXT) \
	libcx_a-toupper.$(OBJEXT) libcx_a-errno.$(OBJEXT) \
	libcx_a-fprintf.$(OBJEXT) libcx_a-fputc.$(OBJEXT) \
	libcx_a-fputs.$(OBJEXT) libcx_a-getchar.$(OBJEXT) \
	libcx_a-gets.$(OBJEXT) libcx_a-printf.$(OBJEXT) \
	libcx_a-printfl.$(OBJEXT) libcx_a-putchar.$(OBJEXT) \
	libcx_a-puts.$(OBJEXT) libcx_a-sprintf.$(OBJEXT) \
	libcx_a-streams.$(OBJEXT) libcx_a-strmgpsim.$(OBJEXT) \
	libcx_a-strmmssp.$(OBJEXT) libcx_a-strmusart.$(OBJEXT) \
	libcx_a-vfprintf.$(OBJEXT) libcx_a-vprintf.$(OBJEXT) \
	libcx_a-vsprintf.$(OBJEXT) libcx_a-_atof.$(OBJEXT) \
	libcx_a-_ftoa.$(OBJEXT) libcx_a-__itoa.$(OBJEXT) \
	libcx_a-__ltoa.$(OBJEXT) libcx_a-abs.$(OBJEXT) \
	libcx_a-aligned_alloc.$(OBJEXT) libcx_a-atoi.$(OBJEXT) \
	libcx_a-atol.$(OBJEXT) libcx_a-bsearch.$(OBJEXT) \
	libcx_a-_calloc.$(OBJEXT) libcx_a-free.$(OBJEXT) \
	libcx_a-labs.$(OBJEXT) libcx_a-malloc.$(OBJEXT) \
	libcx_a-mblen.$(OBJEXT) libcx_a-mbstowcs.$(OBJEXT) \
	libcx_a-mbtowc.$(OBJEXT) libcx_a-memfree.$(OBJEXT) \
	libcx_a-memfreemax.$(OBJEXT) libcx_a-memmisc.$(OBJEXT) \
	libcx_a-qsort.$(OBJEXT) libcx_a-rand.$(OBJEXT) \
	libcx_a-realloc.$(OBJEXT) libcx_a-strtol.$(OBJEXT) \
	libcx_a-strtoul.$(OBJEXT) libcx_a-wcstombs.$(OBJEXT) \
	libcx_a-wctomb.$(OBJEXT) libcx_a-_memchr.$(OBJEXT) \
	libcx_a-_memcmp.$(OBJEXT) libcx_a-__memcpy.$(OBJEXT) \
	libcx_a-memcpy.$(OBJEXT) libcx_a-_memmove.$(OBJEXT) \
	libcx_a-_memset.$(OBJEXT) libcx_a-_strcat.$(OBJEXT) \
	libcx_a-_strchr.$(OBJEXT) libcx_a-_strcmp.$(OBJEXT) \
	libcx_a-_strcpy.$(OBJEXT) libcx_a-_strcspn.$(OBJEXT) \
	libcx_a-_strlen.$(OBJEXT) libcx_a-_strncat.$(OBJEXT) \
	libcx_a-_strncmp.$(OBJEXT) libcx_a-_strncpy.$(OBJEXT) \
	libcx_a-_strpbrk.$(OBJEXT) libcx_a-_strrchr.$(OBJEXT) \
	libcx_a-_strspn.$(OBJEXT) libcx_a-_strstr.$(OBJEXT) \
	libcx_a-_strtok.$(OBJEXT) libcx_a-strxfrm.$(OBJEXT) \
	libcx_a-c16rtomb.$(OBJEXT) libcx_a-c16stombs.$(OBJEXT) \
	libcx_a-c32rtomb.$(OBJEXT) libcx_a-mbrtoc16.$(OBJEXT) \
	libcx_a-mbrtoc32.$(OBJEXT) libcx_a-mbstoc16s.$(OBJEXT) \
	libcx_a-btowc.$(OBJEXT) libcx_a-mbrlen.$(OBJEXT) \
	libcx_a-mbrtowc.$(OBJEXT) libcx_a-mbsinit.$(OBJEXT) \
	libcx_a-wcrtomb.$(OBJEXT) libcx_a-wcscmp.$(OBJEXT) \
	libcx_a-wcslen.$(OBJEXT) libcx_a-wctob.$(OBJEXT)
@ENABLE_EXPERIMENTAL_TRUE@am_libcx_a_OBJECTS = $(am__objects_7)
libcx_a_OBJECTS = $(am_libcx_a_OBJECTS)
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp =
am__maybe_remake_depfiles =
AM_V_lt = $(am__v_lt_@AM_V@)
am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
am__v_lt_0 = --silent
am__v_lt_1 = 
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_@AM_V@)
am__v_CC_ = $(am__v_CC_@AM_DEFAULT_V@)
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_@AM_V@)
am__v_CCLD_ = $(am__v_CCLD_@AM_DEFAULT_V@)
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(libc_a_SOURCES) $(libce_a_SOURCES) $(libceo_a_SOURCES) \
	$(libceox_a_SOURCES) $(libcex_a_SOURCES) $(libco_a_SOURCES) \
	$(libcox_a_SOURCES) $(libcx_a_SOURCES)
DIST_SOURCES = $(libc_a_SOURCES) $(am__libce_a_SOURCES_DIST) \
	$(am__libceo_a_SOURCES_DIST) $(am__libceox_a_SOURCES_DIST) \
	$(am__libcex_a_SOURCES_DIST) $(am__libco_a_SOURCES_DIST) \
	$(am__libcox_a_SOURCES_DIST) $(am__libcx_a_SOURCES_DIST)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__DIST_COMMON = $(srcdir)/Makefile.in $(top_srcdir)/Makefile.common
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AR = @AR@
ARCH = @ARCH@
ARFLAGS = @ARFLAGS@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCAS = @CCAS@
CCASDEPMODE = @CCASDEPMODE@
CCASFLAGS = @CCASFLAGS@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
EARCH = @EARCH@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
RANLIB = @RANLIB@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build_alias = @build_alias@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host_alias = @host_alias@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
runstatedir = @runstatedir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
noinst_LIBRARIES = libc.a $(am__append_1) $(am__append_2) \
	$(am__append_3) $(am__append_4) $(am__append_5) \
	$(am__append_6) $(am__append_7)

# assert.h

# ctype.h

# errno.h

# setjmp.h
#libc_a_SOURCES += _setjmp.c

# stdio.h

# stdlib.h

# string.h

# time.h
#libc_a_SOURCES += time.c

# uchar.c

# wchar.h
libc_a_SOURCES = __assert.c isalnum.c isalpha.c isblank.c iscntrl.c \
	isdigit.c isgraph.c islower.c isprint.c ispunct.c isspace.c \
	isupper.c isxdigit.c tolower.c toupper.c errno.c fprintf.c \
	fputc.c fputs.c getchar.c gets.c printf.c printfl.c putchar.c \
	puts.c sprintf.c streams.c strmgpsim.c strmmssp.c strmusart.c \
	vfprintf.c vprintf.c vsprintf.c _atof.c _ftoa.c __itoa.c \
	__ltoa.c abs.c aligned_alloc.c atoi.c atol.c bsearch.c \
	_calloc.c free.c labs.c malloc.c mblen.c mbstowcs.c mbtowc.c \
	memfree.c memfreemax.c memmisc.c qsort.c rand.c realloc.c \
	strtol.c strtoul.c wcstombs.c wctomb.c _memchr.c _memcmp.c \
	__memcpy.c memcpy.c _memmove.c _memset.c _strcat.c _strchr.c \
	_strcmp.c _strcpy.c _strcspn.c _strlen.c _strncat.c _strncmp.c \
	_strncpy.c _strpbrk.c _strrchr.c _strspn.c _strstr.c _strtok.c \
	strxfrm.c c16rtomb.c c16stombs.c c32rtomb.c mbrtoc16.c \
	mbrtoc32.c mbstoc16s.c btowc.c mbrlen.c mbrtowc.c mbsinit.c \
	wcrtomb.c wcscmp.c wcslen.c wctob.c
libc_a_CFLAGS = $(AM_CFLAGS)
@ENABLE_ENHANCED_PICS_TRUE@libce_a_SOURCES = $(libc_a_SOURCES)
@ENABLE_ENHANCED_PICS_TRUE@libce_a_CFLAGS = $(AM_CFLAGS_E)
@ENABLE_NOOPTS_TRUE@libco_a_SOURCES = $(libc_a_SOURCES)
@ENABLE_NOOPTS_TRUE@libco_a_CFLAGS = $(AM_CFLAGS_O)
@ENABLE_ENHANCED_PICS_TRUE@@ENABLE_NOOPTS_TRUE@libceo_a_SOURCES = $(libc_a_SOURCES)
@ENABLE_ENHANCED_PICS_TRUE@@ENABLE_NOOPTS_TRUE@libceo_a_CFLAGS = $(AM_CFLAGS_EO)
@ENABLE_EXPERIMENTAL_TRUE@libcx_a_SOURCES = $(libc_a_SOURCES)
@ENABLE_EXPERIMENTAL_TRUE@libcx_a_CFLAGS = $(AM_CFLAGS_X)
@ENABLE_ENHANCED_PICS_TRUE@@ENABLE_EXPERIMENTAL_TRUE@libcex_a_SOURCES = $(libc_a_SOURCES)
@ENABLE_ENHANCED_PICS_TRUE@@ENABLE_EXPERIMENTAL_TRUE@libcex_a_CFLAGS = $(AM_CFLAGS_EX)
@ENABLE_EXPERIMENTAL_TRUE@@ENABLE_NOOPTS_TRUE@libcox_a_SOURCES = $(libc_a_SOURCES)
@ENABLE_EXPERIMENTAL_TRUE@@ENABLE_NOOPTS_TRUE@libcox_a_CFLAGS = $(AM_CFLAGS_OX)
@ENABLE_ENHANCED_PICS_TRUE@@ENABLE_EXPERIMENTAL_TRUE@@ENABLE_NOOPTS_TRUE@libceox_a_SOURCES = $(libc_a_SOURCES)
@ENABLE_ENHANCED_PICS_TRUE@@ENABLE_EXPERIMENTAL_TRUE@@ENABLE_NOOPTS_TRUE@libceox_a_CFLAGS = $(AM_CFLAGS_EOX)
SOURCE_DIRS = .

############################################################
# common source files for all variants of the sdcc library
############################################################
LIBSDCC_SOURCES_COMMON = ../_divschar.c ../_divsint.c ../_divslong.c \
	../_divuchar.c ../_divuint.c ../_divulong.c ../_modschar.c \
	../_modsint.c ../_modslong.c ../_moduchar.c ../_moduint.c \
	../_modulong.c ../_mulschar.c ../_muluchar.c ../_mulint.c \
	../_mullong.c ../_fs2schar.c ../_fs2sint.c ../_fs2slong.c \
	../_fs2uchar.c ../_fs2uint.c ../_fs2ulong.c ../_fsadd.c \
	../_fsdiv.c ../_fseq.c ../_fslt.c ../_fsmul.c ../_fsneq.c \
	../_fssub.c ../_schar2fs.c ../_sint2fs.c ../_slong2fs.c \
	../_uchar2fs.c ../_uint2fs.c ../_ulong2fs.c ../idata.c

############################################################
# Directories when building from the sdcc sources
############################################################

# the directory where sdcc device files can be found
DEVICE_TOP_DIR = $(top_srcdir)/../..

# the directory where generic device lib sources can be found
GENERIC_SRC_DIR = $(DEVICE_TOP_DIR)/lib

# If compiling from the installed device sources, use these directories
#DEVICE_TOP_DIR = $(top_srcdir)/../../..
#GENERIC_SRC_DIR = $(DEVICE_TOP_DIR)/lib/src
GENERIC_SRC_DIR_ABS = $(abspath $(GENERIC_SRC_DIR))

############################################################
# C preprocessor flags
############################################################
AM_CPPFLAGS = -I. -I$(top_srcdir) -I$(DEVICE_TOP_DIR)/include/pic14 \
	-I$(DEVICE_TOP_DIR)/non-free/include/pic14 \
	-I$(DEVICE_TOP_DIR)/include

############################################################
# C compiler flags
############################################################
SDCC_FLAGS = -mpic14 --less-pedantic --no-warn-non-free \
	--i-code-in-asm --fverbose-asm --std-c11 $(am__append_9)

# extra flags for enhanced cores
SDCC_FLAGS_ENHANCED = $(am__append_8)

# extra flags to disable optimizations
SDCC_FLAGS_NOOPT = --no-pcode-opt --no-peep

# extra flags to enable experimental support
SDCC_FLAGS_EXP = --experimental-pcall-all \
	--experimental-pcall-enhanced --experimental-variadics \
	--experimental-ralloc $(am__append_10)
AM_CFLAGS = -p$(ARCH) $(SDCC_FLAGS)
AM_CFLAGS_O = -p$(ARCH) $(SDCC_FLAGS) $(SDCC_FLAGS_NOOPT)
AM_CFLAGS_X = -p$(ARCH) $(SDCC_FLAGS) $(SDCC_FLAGS_EXP)
AM_CFLAGS_OX = -p$(ARCH) $(SDCC_FLAGS) $(SDCC_FLAGS_NOOPT) $(SDCC_FLAGS_EXP)
AM_CFLAGS_E = -p$(EARCH) $(SDCC_FLAGS) $(SDCC_FLAGS_ENHANCED)
AM_CFLAGS_EO = -p$(EARCH) $(SDCC_FLAGS) $(SDCC_FLAGS_ENHANCED) $(SDCC_FLAGS_NOOPT)
AM_CFLAGS_EX = -p$(EARCH) $(SDCC_FLAGS) $(SDCC_FLAGS_ENHANCED) $(SDCC_FLAGS_EXP)
AM_CFLAGS_EOX = -p$(EARCH) $(SDCC_FLAGS) $(SDCC_FLAGS_ENHANCED) $(SDCC_FLAGS_NOOPT) $(SDCC_FLAGS_EXP)

############################################################
# Assembler flags
############################################################
AM_CCASFLAGS = -p$(ARCH) -I$(srcdir) -I$(DEVICE_TOP_DIR)/include/pic14 \
	-I$(DEVICE_TOP_DIR)/non-free/include/pic14

# extensions generated by the build process
CLEAN_EXTENSIONS = .asm .lst .sym .d .p .g .v .adb
all: all-am

.SUFFIXES:
.SUFFIXES: .c .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(top_srcdir)/Makefile.common $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign --ignore-deps libc/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign --ignore-deps libc/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles);; \
	esac;
$(top_srcdir)/Makefile.common $(am__empty):

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-noinstLIBRARIES:
	-test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)

libc.a: $(libc_a_OBJECTS) $(libc_a_DEPENDENCIES) $(EXTRA_libc_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libc.a
	$(AM_V_AR)$(libc_a_AR) libc.a $(libc_a_OBJECTS) $(libc_a_LIBADD)
	$(AM_V_at)$(RANLIB) libc.a

libce.a: $(libce_a_OBJECTS) $(libce_a_DEPENDENCIES) $(EXTRA_libce_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libce.a
	$(AM_V_AR)$(libce_a_AR) libce.a $(libce_a_OBJECTS) $(libce_a_LIBADD)
	$(AM_V_at)$(RANLIB) libce.a

libceo.a: $(libceo_a_OBJECTS) $(libceo_a_DEPENDENCIES) $(EXTRA_libceo_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libceo.a
	$(AM_V_AR)$(libceo_a_AR) libceo.a $(libceo_a_OBJECTS) $(libceo_a_LIBADD)
	$(AM_V_at)$(RANLIB) libceo.a

libceox.a: $(libceox_a_OBJECTS) $(libceox_a_DEPENDENCIES) $(EXTRA_libceox_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libceox.a
	$(AM_V_AR)$(libceox_a_AR) libceox.a $(libceox_a_OBJECTS) $(libceox_a_LIBADD)
	$(AM_V_at)$(RANLIB) libceox.a

libcex.a: $(libcex_a_OBJECTS) $(libcex_a_DEPENDENCIES) $(EXTRA_libcex_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libcex.a
	$(AM_V_AR)$(libcex_a_AR) libcex.a $(libcex_a_OBJECTS) $(libcex_a_LIBADD)
	$(AM_V_at)$(RANLIB) libcex.a

libco.a: $(libco_a_OBJECTS) $(libco_a_DEPENDENCIES) $(EXTRA_libco_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libco.a
	$(AM_V_AR)$(libco_a_AR) libco.a $(libco_a_OBJECTS) $(libco_a_LIBADD)
	$(AM_V_at)$(RANLIB) libco.a

libcox.a: $(libcox_a_OBJECTS) $(libcox_a_DEPENDENCIES) $(EXTRA_libcox_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libcox.a
	$(AM_V_AR)$(libcox_a_AR) libcox.a $(libcox_a_OBJECTS) $(libcox_a_LIBADD)
	$(AM_V_at)$(RANLIB) libcox.a

libcx.a: $(libcx_a_OBJECTS) $(libcx_a_DEPENDENCIES) $(EXTRA_libcx_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libcx.a
	$(AM_V_AR)$(libcx_a_AR) libcx.a $(libcx_a_OBJECTS) $(libcx_a_LIBADD)
	$(AM_V_at)$(RANLIB) libcx.a

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

.c.o:
	$(AM_V_CC)$(COMPILE) -c -o $@ $<

.c.obj:
	$(AM_V_CC)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

libc_a-__assert.o: __assert.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-__assert.o `test -f '__assert.c' || echo '$(srcdir)/'`__assert.c

libc_a-__assert.obj: __assert.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-__assert.obj `if test -f '__assert.c'; then $(CYGPATH_W) '__assert.c'; else $(CYGPATH_W) '$(srcdir)/__assert.c'; fi`

libc_a-isalnum.o: isalnum.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-isalnum.o `test -f 'isalnum.c' || echo '$(srcdir)/'`isalnum.c

libc_a-isalnum.obj: isalnum.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-isalnum.obj `if test -f 'isalnum.c'; then $(CYGPATH_W) 'isalnum.c'; else $(CYGPATH_W) '$(srcdir)/isalnum.c'; fi`

libc_a-isalpha.o: isalpha.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-isalpha.o `test -f 'isalpha.c' || echo '$(srcdir)/'`isalpha.c

libc_a-isalpha.obj: isalpha.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-isalpha.obj `if test -f 'isalpha.c'; then $(CYGPATH_W) 'isalpha.c'; else $(CYGPATH_W) '$(srcdir)/isalpha.c'; fi`

libc_a-isblank.o: isblank.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-isblank.o `test -f 'isblank.c' || echo '$(srcdir)/'`isblank.c

libc_a-isblank.obj: isblank.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-isblank.obj `if test -f 'isblank.c'; then $(CYGPATH_W) 'isblank.c'; else $(CYGPATH_W) '$(srcdir)/isblank.c'; fi`

libc_a-iscntrl.o: iscntrl.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-iscntrl.o `test -f 'iscntrl.c' || echo '$(srcdir)/'`iscntrl.c

libc_a-iscntrl.obj: iscntrl.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-iscntrl.obj `if test -f 'iscntrl.c'; then $(CYGPATH_W) 'iscntrl.c'; else $(CYGPATH_W) '$(srcdir)/iscntrl.c'; fi`

libc_a-isdigit.o: isdigit.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-isdigit.o `test -f 'isdigit.c' || echo '$(srcdir)/'`isdigit.c

libc_a-isdigit.obj: isdigit.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-isdigit.obj `if test -f 'isdigit.c'; then $(CYGPATH_W) 'isdigit.c'; else $(CYGPATH_W) '$(srcdir)/isdigit.c'; fi`

libc_a-isgraph.o: isgraph.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-isgraph.o `test -f 'isgraph.c' || echo '$(srcdir)/'`isgraph.c

libc_a-isgraph.obj: isgraph.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-isgraph.obj `if test -f 'isgraph.c'; then $(CYGPATH_W) 'isgraph.c'; else $(CYGPATH_W) '$(srcdir)/isgraph.c'; fi`

libc_a-islower.o: islower.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-islower.o `test -f 'islower.c' || echo '$(srcdir)/'`islower.c

libc_a-islower.obj: islower.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-islower.obj `if test -f 'islower.c'; then $(CYGPATH_W) 'islower.c'; else $(CYGPATH_W) '$(srcdir)/islower.c'; fi`

libc_a-isprint.o: isprint.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-isprint.o `test -f 'isprint.c' || echo '$(srcdir)/'`isprint.c

libc_a-isprint.obj: isprint.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-isprint.obj `if test -f 'isprint.c'; then $(CYGPATH_W) 'isprint.c'; else $(CYGPATH_W) '$(srcdir)/isprint.c'; fi`

libc_a-ispunct.o: ispunct.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-ispunct.o `test -f 'ispunct.c' || echo '$(srcdir)/'`ispunct.c

libc_a-ispunct.obj: ispunct.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-ispunct.obj `if test -f 'ispunct.c'; then $(CYGPATH_W) 'ispunct.c'; else $(CYGPATH_W) '$(srcdir)/ispunct.c'; fi`

libc_a-isspace.o: isspace.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-isspace.o `test -f 'isspace.c' || echo '$(srcdir)/'`isspace.c

libc_a-isspace.obj: isspace.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-isspace.obj `if test -f 'isspace.c'; then $(CYGPATH_W) 'isspace.c'; else $(CYGPATH_W) '$(srcdir)/isspace.c'; fi`

libc_a-isupper.o: isupper.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-isupper.o `test -f 'isupper.c' || echo '$(srcdir)/'`isupper.c

libc_a-isupper.obj: isupper.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-isupper.obj `if test -f 'isupper.c'; then $(CYGPATH_W) 'isupper.c'; else $(CYGPATH_W) '$(srcdir)/isupper.c'; fi`

libc_a-isxdigit.o: isxdigit.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-isxdigit.o `test -f 'isxdigit.c' || echo '$(srcdir)/'`isxdigit.c

libc_a-isxdigit.obj: isxdigit.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-isxdigit.obj `if test -f 'isxdigit.c'; then $(CYGPATH_W) 'isxdigit.c'; else $(CYGPATH_W) '$(srcdir)/isxdigit.c'; fi`

libc_a-tolower.o: tolower.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-tolower.o `test -f 'tolower.c' || echo '$(srcdir)/'`tolower.c

libc_a-tolower.obj: tolower.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-tolower.obj `if test -f 'tolower.c'; then $(CYGPATH_W) 'tolower.c'; else $(CYGPATH_W) '$(srcdir)/tolower.c'; fi`

libc_a-toupper.o: toupper.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-toupper.o `test -f 'toupper.c' || echo '$(srcdir)/'`toupper.c

libc_a-toupper.obj: toupper.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-toupper.obj `if test -f 'toupper.c'; then $(CYGPATH_W) 'toupper.c'; else $(CYGPATH_W) '$(srcdir)/toupper.c'; fi`

libc_a-errno.o: errno.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-errno.o `test -f 'errno.c' || echo '$(srcdir)/'`errno.c

libc_a-errno.obj: errno.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-errno.obj `if test -f 'errno.c'; then $(CYGPATH_W) 'errno.c'; else $(CYGPATH_W) '$(srcdir)/errno.c'; fi`

libc_a-fprintf.o: fprintf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-fprintf.o `test -f 'fprintf.c' || echo '$(srcdir)/'`fprintf.c

libc_a-fprintf.obj: fprintf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-fprintf.obj `if test -f 'fprintf.c'; then $(CYGPATH_W) 'fprintf.c'; else $(CYGPATH_W) '$(srcdir)/fprintf.c'; fi`

libc_a-fputc.o: fputc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-fputc.o `test -f 'fputc.c' || echo '$(srcdir)/'`fputc.c

libc_a-fputc.obj: fputc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-fputc.obj `if test -f 'fputc.c'; then $(CYGPATH_W) 'fputc.c'; else $(CYGPATH_W) '$(srcdir)/fputc.c'; fi`

libc_a-fputs.o: fputs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-fputs.o `test -f 'fputs.c' || echo '$(srcdir)/'`fputs.c

libc_a-fputs.obj: fputs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-fputs.obj `if test -f 'fputs.c'; then $(CYGPATH_W) 'fputs.c'; else $(CYGPATH_W) '$(srcdir)/fputs.c'; fi`

libc_a-getchar.o: getchar.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-getchar.o `test -f 'getchar.c' || echo '$(srcdir)/'`getchar.c

libc_a-getchar.obj: getchar.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-getchar.obj `if test -f 'getchar.c'; then $(CYGPATH_W) 'getchar.c'; else $(CYGPATH_W) '$(srcdir)/getchar.c'; fi`

libc_a-gets.o: gets.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-gets.o `test -f 'gets.c' || echo '$(srcdir)/'`gets.c

libc_a-gets.obj: gets.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-gets.obj `if test -f 'gets.c'; then $(CYGPATH_W) 'gets.c'; else $(CYGPATH_W) '$(srcdir)/gets.c'; fi`

libc_a-printf.o: printf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-printf.o `test -f 'printf.c' || echo '$(srcdir)/'`printf.c

libc_a-printf.obj: printf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-printf.obj `if test -f 'printf.c'; then $(CYGPATH_W) 'printf.c'; else $(CYGPATH_W) '$(srcdir)/printf.c'; fi`

libc_a-printfl.o: printfl.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-printfl.o `test -f 'printfl.c' || echo '$(srcdir)/'`printfl.c

libc_a-printfl.obj: printfl.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-printfl.obj `if test -f 'printfl.c'; then $(CYGPATH_W) 'printfl.c'; else $(CYGPATH_W) '$(srcdir)/printfl.c'; fi`

libc_a-putchar.o: putchar.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-putchar.o `test -f 'putchar.c' || echo '$(srcdir)/'`putchar.c

libc_a-putchar.obj: putchar.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-putchar.obj `if test -f 'putchar.c'; then $(CYGPATH_W) 'putchar.c'; else $(CYGPATH_W) '$(srcdir)/putchar.c'; fi`

libc_a-puts.o: puts.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-puts.o `test -f 'puts.c' || echo '$(srcdir)/'`puts.c

libc_a-puts.obj: puts.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-puts.obj `if test -f 'puts.c'; then $(CYGPATH_W) 'puts.c'; else $(CYGPATH_W) '$(srcdir)/puts.c'; fi`

libc_a-sprintf.o: sprintf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-sprintf.o `test -f 'sprintf.c' || echo '$(srcdir)/'`sprintf.c

libc_a-sprintf.obj: sprintf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-sprintf.obj `if test -f 'sprintf.c'; then $(CYGPATH_W) 'sprintf.c'; else $(CYGPATH_W) '$(srcdir)/sprintf.c'; fi`

libc_a-streams.o: streams.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-streams.o `test -f 'streams.c' || echo '$(srcdir)/'`streams.c

libc_a-streams.obj: streams.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-streams.obj `if test -f 'streams.c'; then $(CYGPATH_W) 'streams.c'; else $(CYGPATH_W) '$(srcdir)/streams.c'; fi`

libc_a-strmgpsim.o: strmgpsim.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-strmgpsim.o `test -f 'strmgpsim.c' || echo '$(srcdir)/'`strmgpsim.c

libc_a-strmgpsim.obj: strmgpsim.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-strmgpsim.obj `if test -f 'strmgpsim.c'; then $(CYGPATH_W) 'strmgpsim.c'; else $(CYGPATH_W) '$(srcdir)/strmgpsim.c'; fi`

libc_a-strmmssp.o: strmmssp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-strmmssp.o `test -f 'strmmssp.c' || echo '$(srcdir)/'`strmmssp.c

libc_a-strmmssp.obj: strmmssp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-strmmssp.obj `if test -f 'strmmssp.c'; then $(CYGPATH_W) 'strmmssp.c'; else $(CYGPATH_W) '$(srcdir)/strmmssp.c'; fi`

libc_a-strmusart.o: strmusart.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-strmusart.o `test -f 'strmusart.c' || echo '$(srcdir)/'`strmusart.c

libc_a-strmusart.obj: strmusart.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-strmusart.obj `if test -f 'strmusart.c'; then $(CYGPATH_W) 'strmusart.c'; else $(CYGPATH_W) '$(srcdir)/strmusart.c'; fi`

libc_a-vfprintf.o: vfprintf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-vfprintf.o `test -f 'vfprintf.c' || echo '$(srcdir)/'`vfprintf.c

libc_a-vfprintf.obj: vfprintf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-vfprintf.obj `if test -f 'vfprintf.c'; then $(CYGPATH_W) 'vfprintf.c'; else $(CYGPATH_W) '$(srcdir)/vfprintf.c'; fi`

libc_a-vprintf.o: vprintf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-vprintf.o `test -f 'vprintf.c' || echo '$(srcdir)/'`vprintf.c

libc_a-vprintf.obj: vprintf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-vprintf.obj `if test -f 'vprintf.c'; then $(CYGPATH_W) 'vprintf.c'; else $(CYGPATH_W) '$(srcdir)/vprintf.c'; fi`

libc_a-vsprintf.o: vsprintf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-vsprintf.o `test -f 'vsprintf.c' || echo '$(srcdir)/'`vsprintf.c

libc_a-vsprintf.obj: vsprintf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-vsprintf.obj `if test -f 'vsprintf.c'; then $(CYGPATH_W) 'vsprintf.c'; else $(CYGPATH_W) '$(srcdir)/vsprintf.c'; fi`

libc_a-_atof.o: _atof.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-_atof.o `test -f '_atof.c' || echo '$(srcdir)/'`_atof.c

libc_a-_atof.obj: _atof.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-_atof.obj `if test -f '_atof.c'; then $(CYGPATH_W) '_atof.c'; else $(CYGPATH_W) '$(srcdir)/_atof.c'; fi`

libc_a-_ftoa.o: _ftoa.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-_ftoa.o `test -f '_ftoa.c' || echo '$(srcdir)/'`_ftoa.c

libc_a-_ftoa.obj: _ftoa.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-_ftoa.obj `if test -f '_ftoa.c'; then $(CYGPATH_W) '_ftoa.c'; else $(CYGPATH_W) '$(srcdir)/_ftoa.c'; fi`

libc_a-__itoa.o: __itoa.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-__itoa.o `test -f '__itoa.c' || echo '$(srcdir)/'`__itoa.c

libc_a-__itoa.obj: __itoa.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-__itoa.obj `if test -f '__itoa.c'; then $(CYGPATH_W) '__itoa.c'; else $(CYGPATH_W) '$(srcdir)/__itoa.c'; fi`

libc_a-__ltoa.o: __ltoa.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-__ltoa.o `test -f '__ltoa.c' || echo '$(srcdir)/'`__ltoa.c

libc_a-__ltoa.obj: __ltoa.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-__ltoa.obj `if test -f '__ltoa.c'; then $(CYGPATH_W) '__ltoa.c'; else $(CYGPATH_W) '$(srcdir)/__ltoa.c'; fi`

libc_a-abs.o: abs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-abs.o `test -f 'abs.c' || echo '$(srcdir)/'`abs.c

libc_a-abs.obj: abs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-abs.obj `if test -f 'abs.c'; then $(CYGPATH_W) 'abs.c'; else $(CYGPATH_W) '$(srcdir)/abs.c'; fi`

libc_a-aligned_alloc.o: aligned_alloc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-aligned_alloc.o `test -f 'aligned_alloc.c' || echo '$(srcdir)/'`aligned_alloc.c

libc_a-aligned_alloc.obj: aligned_alloc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-aligned_alloc.obj `if test -f 'aligned_alloc.c'; then $(CYGPATH_W) 'aligned_alloc.c'; else $(CYGPATH_W) '$(srcdir)/aligned_alloc.c'; fi`

libc_a-atoi.o: atoi.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-atoi.o `test -f 'atoi.c' || echo '$(srcdir)/'`atoi.c

libc_a-atoi.obj: atoi.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-atoi.obj `if test -f 'atoi.c'; then $(CYGPATH_W) 'atoi.c'; else $(CYGPATH_W) '$(srcdir)/atoi.c'; fi`

libc_a-atol.o: atol.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-atol.o `test -f 'atol.c' || echo '$(srcdir)/'`atol.c

libc_a-atol.obj: atol.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-atol.obj `if test -f 'atol.c'; then $(CYGPATH_W) 'atol.c'; else $(CYGPATH_W) '$(srcdir)/atol.c'; fi`

libc_a-bsearch.o: bsearch.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-bsearch.o `test -f 'bsearch.c' || echo '$(srcdir)/'`bsearch.c

libc_a-bsearch.obj: bsearch.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-bsearch.obj `if test -f 'bsearch.c'; then $(CYGPATH_W) 'bsearch.c'; else $(CYGPATH_W) '$(srcdir)/bsearch.c'; fi`

libc_a-_calloc.o: _calloc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-_calloc.o `test -f '_calloc.c' || echo '$(srcdir)/'`_calloc.c

libc_a-_calloc.obj: _calloc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-_calloc.obj `if test -f '_calloc.c'; then $(CYGPATH_W) '_calloc.c'; else $(CYGPATH_W) '$(srcdir)/_calloc.c'; fi`

libc_a-free.o: free.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-free.o `test -f 'free.c' || echo '$(srcdir)/'`free.c

libc_a-free.obj: free.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-free.obj `if test -f 'free.c'; then $(CYGPATH_W) 'free.c'; else $(CYGPATH_W) '$(srcdir)/free.c'; fi`

libc_a-labs.o: labs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-labs.o `test -f 'labs.c' || echo '$(srcdir)/'`labs.c

libc_a-labs.obj: labs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-labs.obj `if test -f 'labs.c'; then $(CYGPATH_W) 'labs.c'; else $(CYGPATH_W) '$(srcdir)/labs.c'; fi`

libc_a-malloc.o: malloc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-malloc.o `test -f 'malloc.c' || echo '$(srcdir)/'`malloc.c

libc_a-malloc.obj: malloc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-malloc.obj `if test -f 'malloc.c'; then $(CYGPATH_W) 'malloc.c'; else $(CYGPATH_W) '$(srcdir)/malloc.c'; fi`

libc_a-mblen.o: mblen.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-mblen.o `test -f 'mblen.c' || echo '$(srcdir)/'`mblen.c

libc_a-mblen.obj: mblen.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-mblen.obj `if test -f 'mblen.c'; then $(CYGPATH_W) 'mblen.c'; else $(CYGPATH_W) '$(srcdir)/mblen.c'; fi`

libc_a-mbstowcs.o: mbstowcs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-mbstowcs.o `test -f 'mbstowcs.c' || echo '$(srcdir)/'`mbstowcs.c

libc_a-mbstowcs.obj: mbstowcs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-mbstowcs.obj `if test -f 'mbstowcs.c'; then $(CYGPATH_W) 'mbstowcs.c'; else $(CYGPATH_W) '$(srcdir)/mbstowcs.c'; fi`

libc_a-mbtowc.o: mbtowc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-mbtowc.o `test -f 'mbtowc.c' || echo '$(srcdir)/'`mbtowc.c

libc_a-mbtowc.obj: mbtowc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-mbtowc.obj `if test -f 'mbtowc.c'; then $(CYGPATH_W) 'mbtowc.c'; else $(CYGPATH_W) '$(srcdir)/mbtowc.c'; fi`

libc_a-memfree.o: memfree.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-memfree.o `test -f 'memfree.c' || echo '$(srcdir)/'`memfree.c

libc_a-memfree.obj: memfree.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-memfree.obj `if test -f 'memfree.c'; then $(CYGPATH_W) 'memfree.c'; else $(CYGPATH_W) '$(srcdir)/memfree.c'; fi`

libc_a-memfreemax.o: memfreemax.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-memfreemax.o `test -f 'memfreemax.c' || echo '$(srcdir)/'`memfreemax.c

libc_a-memfreemax.obj: memfreemax.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-memfreemax.obj `if test -f 'memfreemax.c'; then $(CYGPATH_W) 'memfreemax.c'; else $(CYGPATH_W) '$(srcdir)/memfreemax.c'; fi`

libc_a-memmisc.o: memmisc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-memmisc.o `test -f 'memmisc.c' || echo '$(srcdir)/'`memmisc.c

libc_a-memmisc.obj: memmisc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-memmisc.obj `if test -f 'memmisc.c'; then $(CYGPATH_W) 'memmisc.c'; else $(CYGPATH_W) '$(srcdir)/memmisc.c'; fi`

libc_a-qsort.o: qsort.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-qsort.o `test -f 'qsort.c' || echo '$(srcdir)/'`qsort.c

libc_a-qsort.obj: qsort.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-qsort.obj `if test -f 'qsort.c'; then $(CYGPATH_W) 'qsort.c'; else $(CYGPATH_W) '$(srcdir)/qsort.c'; fi`

libc_a-rand.o: rand.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-rand.o `test -f 'rand.c' || echo '$(srcdir)/'`rand.c

libc_a-rand.obj: rand.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-rand.obj `if test -f 'rand.c'; then $(CYGPATH_W) 'rand.c'; else $(CYGPATH_W) '$(srcdir)/rand.c'; fi`

libc_a-realloc.o: realloc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-realloc.o `test -f 'realloc.c' || echo '$(srcdir)/'`realloc.c

libc_a-realloc.obj: realloc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-realloc.obj `if test -f 'realloc.c'; then $(CYGPATH_W) 'realloc.c'; else $(CYGPATH_W) '$(srcdir)/realloc.c'; fi`

libc_a-strtol.o: strtol.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-strtol.o `test -f 'strtol.c' || echo '$(srcdir)/'`strtol.c

libc_a-strtol.obj: strtol.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-strtol.obj `if test -f 'strtol.c'; then $(CYGPATH_W) 'strtol.c'; else $(CYGPATH_W) '$(srcdir)/strtol.c'; fi`

libc_a-strtoul.o: strtoul.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-strtoul.o `test -f 'strtoul.c' || echo '$(srcdir)/'`strtoul.c

libc_a-strtoul.obj: strtoul.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-strtoul.obj `if test -f 'strtoul.c'; then $(CYGPATH_W) 'strtoul.c'; else $(CYGPATH_W) '$(srcdir)/strtoul.c'; fi`

libc_a-wcstombs.o: wcstombs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-wcstombs.o `test -f 'wcstombs.c' || echo '$(srcdir)/'`wcstombs.c

libc_a-wcstombs.obj: wcstombs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-wcstombs.obj `if test -f 'wcstombs.c'; then $(CYGPATH_W) 'wcstombs.c'; else $(CYGPATH_W) '$(srcdir)/wcstombs.c'; fi`

libc_a-wctomb.o: wctomb.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-wctomb.o `test -f 'wctomb.c' || echo '$(srcdir)/'`wctomb.c

libc_a-wctomb.obj: wctomb.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-wctomb.obj `if test -f 'wctomb.c'; then $(CYGPATH_W) 'wctomb.c'; else $(CYGPATH_W) '$(srcdir)/wctomb.c'; fi`

libc_a-_memchr.o: _memchr.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-_memchr.o `test -f '_memchr.c' || echo '$(srcdir)/'`_memchr.c

libc_a-_memchr.obj: _memchr.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-_memchr.obj `if test -f '_memchr.c'; then $(CYGPATH_W) '_memchr.c'; else $(CYGPATH_W) '$(srcdir)/_memchr.c'; fi`

libc_a-_memcmp.o: _memcmp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-_memcmp.o `test -f '_memcmp.c' || echo '$(srcdir)/'`_memcmp.c

libc_a-_memcmp.obj: _memcmp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-_memcmp.obj `if test -f '_memcmp.c'; then $(CYGPATH_W) '_memcmp.c'; else $(CYGPATH_W) '$(srcdir)/_memcmp.c'; fi`

libc_a-__memcpy.o: __memcpy.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-__memcpy.o `test -f '__memcpy.c' || echo '$(srcdir)/'`__memcpy.c

libc_a-__memcpy.obj: __memcpy.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-__memcpy.obj `if test -f '__memcpy.c'; then $(CYGPATH_W) '__memcpy.c'; else $(CYGPATH_W) '$(srcdir)/__memcpy.c'; fi`

libc_a-memcpy.o: memcpy.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-memcpy.o `test -f 'memcpy.c' || echo '$(srcdir)/'`memcpy.c

libc_a-memcpy.obj: memcpy.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-memcpy.obj `if test -f 'memcpy.c'; then $(CYGPATH_W) 'memcpy.c'; else $(CYGPATH_W) '$(srcdir)/memcpy.c'; fi`

libc_a-_memmove.o: _memmove.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-_memmove.o `test -f '_memmove.c' || echo '$(srcdir)/'`_memmove.c

libc_a-_memmove.obj: _memmove.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-_memmove.obj `if test -f '_memmove.c'; then $(CYGPATH_W) '_memmove.c'; else $(CYGPATH_W) '$(srcdir)/_memmove.c'; fi`

libc_a-_memset.o: _memset.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-_memset.o `test -f '_memset.c' || echo '$(srcdir)/'`_memset.c

libc_a-_memset.obj: _memset.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-_memset.obj `if test -f '_memset.c'; then $(CYGPATH_W) '_memset.c'; else $(CYGPATH_W) '$(srcdir)/_memset.c'; fi`

libc_a-_strcat.o: _strcat.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-_strcat.o `test -f '_strcat.c' || echo '$(srcdir)/'`_strcat.c

libc_a-_strcat.obj: _strcat.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-_strcat.obj `if test -f '_strcat.c'; then $(CYGPATH_W) '_strcat.c'; else $(CYGPATH_W) '$(srcdir)/_strcat.c'; fi`

libc_a-_strchr.o: _strchr.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-_strchr.o `test -f '_strchr.c' || echo '$(srcdir)/'`_strchr.c

libc_a-_strchr.obj: _strchr.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-_strchr.obj `if test -f '_strchr.c'; then $(CYGPATH_W) '_strchr.c'; else $(CYGPATH_W) '$(srcdir)/_strchr.c'; fi`

libc_a-_strcmp.o: _strcmp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-_strcmp.o `test -f '_strcmp.c' || echo '$(srcdir)/'`_strcmp.c

libc_a-_strcmp.obj: _strcmp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-_strcmp.obj `if test -f '_strcmp.c'; then $(CYGPATH_W) '_strcmp.c'; else $(CYGPATH_W) '$(srcdir)/_strcmp.c'; fi`

libc_a-_strcpy.o: _strcpy.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-_strcpy.o `test -f '_strcpy.c' || echo '$(srcdir)/'`_strcpy.c

libc_a-_strcpy.obj: _strcpy.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-_strcpy.obj `if test -f '_strcpy.c'; then $(CYGPATH_W) '_strcpy.c'; else $(CYGPATH_W) '$(srcdir)/_strcpy.c'; fi`

libc_a-_strcspn.o: _strcspn.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-_strcspn.o `test -f '_strcspn.c' || echo '$(srcdir)/'`_strcspn.c

libc_a-_strcspn.obj: _strcspn.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-_strcspn.obj `if test -f '_strcspn.c'; then $(CYGPATH_W) '_strcspn.c'; else $(CYGPATH_W) '$(srcdir)/_strcspn.c'; fi`

libc_a-_strlen.o: _strlen.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-_strlen.o `test -f '_strlen.c' || echo '$(srcdir)/'`_strlen.c

libc_a-_strlen.obj: _strlen.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-_strlen.obj `if test -f '_strlen.c'; then $(CYGPATH_W) '_strlen.c'; else $(CYGPATH_W) '$(srcdir)/_strlen.c'; fi`

libc_a-_strncat.o: _strncat.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-_strncat.o `test -f '_strncat.c' || echo '$(srcdir)/'`_strncat.c

libc_a-_strncat.obj: _strncat.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-_strncat.obj `if test -f '_strncat.c'; then $(CYGPATH_W) '_strncat.c'; else $(CYGPATH_W) '$(srcdir)/_strncat.c'; fi`

libc_a-_strncmp.o: _strncmp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-_strncmp.o `test -f '_strncmp.c' || echo '$(srcdir)/'`_strncmp.c

libc_a-_strncmp.obj: _strncmp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-_strncmp.obj `if test -f '_strncmp.c'; then $(CYGPATH_W) '_strncmp.c'; else $(CYGPATH_W) '$(srcdir)/_strncmp.c'; fi`

libc_a-_strncpy.o: _strncpy.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-_strncpy.o `test -f '_strncpy.c' || echo '$(srcdir)/'`_strncpy.c

libc_a-_strncpy.obj: _strncpy.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-_strncpy.obj `if test -f '_strncpy.c'; then $(CYGPATH_W) '_strncpy.c'; else $(CYGPATH_W) '$(srcdir)/_strncpy.c'; fi`

libc_a-_strpbrk.o: _strpbrk.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-_strpbrk.o `test -f '_strpbrk.c' || echo '$(srcdir)/'`_strpbrk.c

libc_a-_strpbrk.obj: _strpbrk.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-_strpbrk.obj `if test -f '_strpbrk.c'; then $(CYGPATH_W) '_strpbrk.c'; else $(CYGPATH_W) '$(srcdir)/_strpbrk.c'; fi`

libc_a-_strrchr.o: _strrchr.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-_strrchr.o `test -f '_strrchr.c' || echo '$(srcdir)/'`_strrchr.c

libc_a-_strrchr.obj: _strrchr.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-_strrchr.obj `if test -f '_strrchr.c'; then $(CYGPATH_W) '_strrchr.c'; else $(CYGPATH_W) '$(srcdir)/_strrchr.c'; fi`

libc_a-_strspn.o: _strspn.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-_strspn.o `test -f '_strspn.c' || echo '$(srcdir)/'`_strspn.c

libc_a-_strspn.obj: _strspn.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-_strspn.obj `if test -f '_strspn.c'; then $(CYGPATH_W) '_strspn.c'; else $(CYGPATH_W) '$(srcdir)/_strspn.c'; fi`

libc_a-_strstr.o: _strstr.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-_strstr.o `test -f '_strstr.c' || echo '$(srcdir)/'`_strstr.c

libc_a-_strstr.obj: _strstr.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-_strstr.obj `if test -f '_strstr.c'; then $(CYGPATH_W) '_strstr.c'; else $(CYGPATH_W) '$(srcdir)/_strstr.c'; fi`

libc_a-_strtok.o: _strtok.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-_strtok.o `test -f '_strtok.c' || echo '$(srcdir)/'`_strtok.c

libc_a-_strtok.obj: _strtok.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-_strtok.obj `if test -f '_strtok.c'; then $(CYGPATH_W) '_strtok.c'; else $(CYGPATH_W) '$(srcdir)/_strtok.c'; fi`

libc_a-strxfrm.o: strxfrm.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-strxfrm.o `test -f 'strxfrm.c' || echo '$(srcdir)/'`strxfrm.c

libc_a-strxfrm.obj: strxfrm.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-strxfrm.obj `if test -f 'strxfrm.c'; then $(CYGPATH_W) 'strxfrm.c'; else $(CYGPATH_W) '$(srcdir)/strxfrm.c'; fi`

libc_a-c16rtomb.o: c16rtomb.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-c16rtomb.o `test -f 'c16rtomb.c' || echo '$(srcdir)/'`c16rtomb.c

libc_a-c16rtomb.obj: c16rtomb.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-c16rtomb.obj `if test -f 'c16rtomb.c'; then $(CYGPATH_W) 'c16rtomb.c'; else $(CYGPATH_W) '$(srcdir)/c16rtomb.c'; fi`

libc_a-c16stombs.o: c16stombs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-c16stombs.o `test -f 'c16stombs.c' || echo '$(srcdir)/'`c16stombs.c

libc_a-c16stombs.obj: c16stombs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-c16stombs.obj `if test -f 'c16stombs.c'; then $(CYGPATH_W) 'c16stombs.c'; else $(CYGPATH_W) '$(srcdir)/c16stombs.c'; fi`

libc_a-c32rtomb.o: c32rtomb.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-c32rtomb.o `test -f 'c32rtomb.c' || echo '$(srcdir)/'`c32rtomb.c

libc_a-c32rtomb.obj: c32rtomb.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-c32rtomb.obj `if test -f 'c32rtomb.c'; then $(CYGPATH_W) 'c32rtomb.c'; else $(CYGPATH_W) '$(srcdir)/c32rtomb.c'; fi`

libc_a-mbrtoc16.o: mbrtoc16.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-mbrtoc16.o `test -f 'mbrtoc16.c' || echo '$(srcdir)/'`mbrtoc16.c

libc_a-mbrtoc16.obj: mbrtoc16.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-mbrtoc16.obj `if test -f 'mbrtoc16.c'; then $(CYGPATH_W) 'mbrtoc16.c'; else $(CYGPATH_W) '$(srcdir)/mbrtoc16.c'; fi`

libc_a-mbrtoc32.o: mbrtoc32.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-mbrtoc32.o `test -f 'mbrtoc32.c' || echo '$(srcdir)/'`mbrtoc32.c

libc_a-mbrtoc32.obj: mbrtoc32.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-mbrtoc32.obj `if test -f 'mbrtoc32.c'; then $(CYGPATH_W) 'mbrtoc32.c'; else $(CYGPATH_W) '$(srcdir)/mbrtoc32.c'; fi`

libc_a-mbstoc16s.o: mbstoc16s.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-mbstoc16s.o `test -f 'mbstoc16s.c' || echo '$(srcdir)/'`mbstoc16s.c

libc_a-mbstoc16s.obj: mbstoc16s.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-mbstoc16s.obj `if test -f 'mbstoc16s.c'; then $(CYGPATH_W) 'mbstoc16s.c'; else $(CYGPATH_W) '$(srcdir)/mbstoc16s.c'; fi`

libc_a-btowc.o: btowc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-btowc.o `test -f 'btowc.c' || echo '$(srcdir)/'`btowc.c

libc_a-btowc.obj: btowc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-btowc.obj `if test -f 'btowc.c'; then $(CYGPATH_W) 'btowc.c'; else $(CYGPATH_W) '$(srcdir)/btowc.c'; fi`

libc_a-mbrlen.o: mbrlen.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-mbrlen.o `test -f 'mbrlen.c' || echo '$(srcdir)/'`mbrlen.c

libc_a-mbrlen.obj: mbrlen.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-mbrlen.obj `if test -f 'mbrlen.c'; then $(CYGPATH_W) 'mbrlen.c'; else $(CYGPATH_W) '$(srcdir)/mbrlen.c'; fi`

libc_a-mbrtowc.o: mbrtowc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-mbrtowc.o `test -f 'mbrtowc.c' || echo '$(srcdir)/'`mbrtowc.c

libc_a-mbrtowc.obj: mbrtowc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-mbrtowc.obj `if test -f 'mbrtowc.c'; then $(CYGPATH_W) 'mbrtowc.c'; else $(CYGPATH_W) '$(srcdir)/mbrtowc.c'; fi`

libc_a-mbsinit.o: mbsinit.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-mbsinit.o `test -f 'mbsinit.c' || echo '$(srcdir)/'`mbsinit.c

libc_a-mbsinit.obj: mbsinit.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-mbsinit.obj `if test -f 'mbsinit.c'; then $(CYGPATH_W) 'mbsinit.c'; else $(CYGPATH_W) '$(srcdir)/mbsinit.c'; fi`

libc_a-wcrtomb.o: wcrtomb.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-wcrtomb.o `test -f 'wcrtomb.c' || echo '$(srcdir)/'`wcrtomb.c

libc_a-wcrtomb.obj: wcrtomb.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-wcrtomb.obj `if test -f 'wcrtomb.c'; then $(CYGPATH_W) 'wcrtomb.c'; else $(CYGPATH_W) '$(srcdir)/wcrtomb.c'; fi`

libc_a-wcscmp.o: wcscmp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-wcscmp.o `test -f 'wcscmp.c' || echo '$(srcdir)/'`wcscmp.c

libc_a-wcscmp.obj: wcscmp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-wcscmp.obj `if test -f 'wcscmp.c'; then $(CYGPATH_W) 'wcscmp.c'; else $(CYGPATH_W) '$(srcdir)/wcscmp.c'; fi`

libc_a-wcslen.o: wcslen.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-wcslen.o `test -f 'wcslen.c' || echo '$(srcdir)/'`wcslen.c

libc_a-wcslen.obj: wcslen.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-wcslen.obj `if test -f 'wcslen.c'; then $(CYGPATH_W) 'wcslen.c'; else $(CYGPATH_W) '$(srcdir)/wcslen.c'; fi`

libc_a-wctob.o: wctob.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-wctob.o `test -f 'wctob.c' || echo '$(srcdir)/'`wctob.c

libc_a-wctob.obj: wctob.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libc_a_CFLAGS) $(CFLAGS) -c -o libc_a-wctob.obj `if test -f 'wctob.c'; then $(CYGPATH_W) 'wctob.c'; else $(CYGPATH_W) '$(srcdir)/wctob.c'; fi`

libce_a-__assert.o: __assert.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-__assert.o `test -f '__assert.c' || echo '$(srcdir)/'`__assert.c

libce_a-__assert.obj: __assert.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-__assert.obj `if test -f '__assert.c'; then $(CYGPATH_W) '__assert.c'; else $(CYGPATH_W) '$(srcdir)/__assert.c'; fi`

libce_a-isalnum.o: isalnum.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-isalnum.o `test -f 'isalnum.c' || echo '$(srcdir)/'`isalnum.c

libce_a-isalnum.obj: isalnum.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-isalnum.obj `if test -f 'isalnum.c'; then $(CYGPATH_W) 'isalnum.c'; else $(CYGPATH_W) '$(srcdir)/isalnum.c'; fi`

libce_a-isalpha.o: isalpha.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-isalpha.o `test -f 'isalpha.c' || echo '$(srcdir)/'`isalpha.c

libce_a-isalpha.obj: isalpha.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-isalpha.obj `if test -f 'isalpha.c'; then $(CYGPATH_W) 'isalpha.c'; else $(CYGPATH_W) '$(srcdir)/isalpha.c'; fi`

libce_a-isblank.o: isblank.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-isblank.o `test -f 'isblank.c' || echo '$(srcdir)/'`isblank.c

libce_a-isblank.obj: isblank.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-isblank.obj `if test -f 'isblank.c'; then $(CYGPATH_W) 'isblank.c'; else $(CYGPATH_W) '$(srcdir)/isblank.c'; fi`

libce_a-iscntrl.o: iscntrl.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-iscntrl.o `test -f 'iscntrl.c' || echo '$(srcdir)/'`iscntrl.c

libce_a-iscntrl.obj: iscntrl.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-iscntrl.obj `if test -f 'iscntrl.c'; then $(CYGPATH_W) 'iscntrl.c'; else $(CYGPATH_W) '$(srcdir)/iscntrl.c'; fi`

libce_a-isdigit.o: isdigit.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-isdigit.o `test -f 'isdigit.c' || echo '$(srcdir)/'`isdigit.c

libce_a-isdigit.obj: isdigit.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-isdigit.obj `if test -f 'isdigit.c'; then $(CYGPATH_W) 'isdigit.c'; else $(CYGPATH_W) '$(srcdir)/isdigit.c'; fi`

libce_a-isgraph.o: isgraph.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-isgraph.o `test -f 'isgraph.c' || echo '$(srcdir)/'`isgraph.c

libce_a-isgraph.obj: isgraph.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-isgraph.obj `if test -f 'isgraph.c'; then $(CYGPATH_W) 'isgraph.c'; else $(CYGPATH_W) '$(srcdir)/isgraph.c'; fi`

libce_a-islower.o: islower.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-islower.o `test -f 'islower.c' || echo '$(srcdir)/'`islower.c

libce_a-islower.obj: islower.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-islower.obj `if test -f 'islower.c'; then $(CYGPATH_W) 'islower.c'; else $(CYGPATH_W) '$(srcdir)/islower.c'; fi`

libce_a-isprint.o: isprint.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-isprint.o `test -f 'isprint.c' || echo '$(srcdir)/'`isprint.c

libce_a-isprint.obj: isprint.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-isprint.obj `if test -f 'isprint.c'; then $(CYGPATH_W) 'isprint.c'; else $(CYGPATH_W) '$(srcdir)/isprint.c'; fi`

libce_a-ispunct.o: ispunct.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-ispunct.o `test -f 'ispunct.c' || echo '$(srcdir)/'`ispunct.c

libce_a-ispunct.obj: ispunct.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-ispunct.obj `if test -f 'ispunct.c'; then $(CYGPATH_W) 'ispunct.c'; else $(CYGPATH_W) '$(srcdir)/ispunct.c'; fi`

libce_a-isspace.o: isspace.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-isspace.o `test -f 'isspace.c' || echo '$(srcdir)/'`isspace.c

libce_a-isspace.obj: isspace.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-isspace.obj `if test -f 'isspace.c'; then $(CYGPATH_W) 'isspace.c'; else $(CYGPATH_W) '$(srcdir)/isspace.c'; fi`

libce_a-isupper.o: isupper.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-isupper.o `test -f 'isupper.c' || echo '$(srcdir)/'`isupper.c

libce_a-isupper.obj: isupper.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-isupper.obj `if test -f 'isupper.c'; then $(CYGPATH_W) 'isupper.c'; else $(CYGPATH_W) '$(srcdir)/isupper.c'; fi`

libce_a-isxdigit.o: isxdigit.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-isxdigit.o `test -f 'isxdigit.c' || echo '$(srcdir)/'`isxdigit.c

libce_a-isxdigit.obj: isxdigit.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-isxdigit.obj `if test -f 'isxdigit.c'; then $(CYGPATH_W) 'isxdigit.c'; else $(CYGPATH_W) '$(srcdir)/isxdigit.c'; fi`

libce_a-tolower.o: tolower.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-tolower.o `test -f 'tolower.c' || echo '$(srcdir)/'`tolower.c

libce_a-tolower.obj: tolower.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-tolower.obj `if test -f 'tolower.c'; then $(CYGPATH_W) 'tolower.c'; else $(CYGPATH_W) '$(srcdir)/tolower.c'; fi`

libce_a-toupper.o: toupper.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-toupper.o `test -f 'toupper.c' || echo '$(srcdir)/'`toupper.c

libce_a-toupper.obj: toupper.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-toupper.obj `if test -f 'toupper.c'; then $(CYGPATH_W) 'toupper.c'; else $(CYGPATH_W) '$(srcdir)/toupper.c'; fi`

libce_a-errno.o: errno.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-errno.o `test -f 'errno.c' || echo '$(srcdir)/'`errno.c

libce_a-errno.obj: errno.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-errno.obj `if test -f 'errno.c'; then $(CYGPATH_W) 'errno.c'; else $(CYGPATH_W) '$(srcdir)/errno.c'; fi`

libce_a-fprintf.o: fprintf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-fprintf.o `test -f 'fprintf.c' || echo '$(srcdir)/'`fprintf.c

libce_a-fprintf.obj: fprintf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-fprintf.obj `if test -f 'fprintf.c'; then $(CYGPATH_W) 'fprintf.c'; else $(CYGPATH_W) '$(srcdir)/fprintf.c'; fi`

libce_a-fputc.o: fputc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-fputc.o `test -f 'fputc.c' || echo '$(srcdir)/'`fputc.c

libce_a-fputc.obj: fputc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-fputc.obj `if test -f 'fputc.c'; then $(CYGPATH_W) 'fputc.c'; else $(CYGPATH_W) '$(srcdir)/fputc.c'; fi`

libce_a-fputs.o: fputs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-fputs.o `test -f 'fputs.c' || echo '$(srcdir)/'`fputs.c

libce_a-fputs.obj: fputs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-fputs.obj `if test -f 'fputs.c'; then $(CYGPATH_W) 'fputs.c'; else $(CYGPATH_W) '$(srcdir)/fputs.c'; fi`

libce_a-getchar.o: getchar.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-getchar.o `test -f 'getchar.c' || echo '$(srcdir)/'`getchar.c

libce_a-getchar.obj: getchar.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-getchar.obj `if test -f 'getchar.c'; then $(CYGPATH_W) 'getchar.c'; else $(CYGPATH_W) '$(srcdir)/getchar.c'; fi`

libce_a-gets.o: gets.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-gets.o `test -f 'gets.c' || echo '$(srcdir)/'`gets.c

libce_a-gets.obj: gets.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-gets.obj `if test -f 'gets.c'; then $(CYGPATH_W) 'gets.c'; else $(CYGPATH_W) '$(srcdir)/gets.c'; fi`

libce_a-printf.o: printf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-printf.o `test -f 'printf.c' || echo '$(srcdir)/'`printf.c

libce_a-printf.obj: printf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-printf.obj `if test -f 'printf.c'; then $(CYGPATH_W) 'printf.c'; else $(CYGPATH_W) '$(srcdir)/printf.c'; fi`

libce_a-printfl.o: printfl.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-printfl.o `test -f 'printfl.c' || echo '$(srcdir)/'`printfl.c

libce_a-printfl.obj: printfl.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-printfl.obj `if test -f 'printfl.c'; then $(CYGPATH_W) 'printfl.c'; else $(CYGPATH_W) '$(srcdir)/printfl.c'; fi`

libce_a-putchar.o: putchar.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-putchar.o `test -f 'putchar.c' || echo '$(srcdir)/'`putchar.c

libce_a-putchar.obj: putchar.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-putchar.obj `if test -f 'putchar.c'; then $(CYGPATH_W) 'putchar.c'; else $(CYGPATH_W) '$(srcdir)/putchar.c'; fi`

libce_a-puts.o: puts.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-puts.o `test -f 'puts.c' || echo '$(srcdir)/'`puts.c

libce_a-puts.obj: puts.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-puts.obj `if test -f 'puts.c'; then $(CYGPATH_W) 'puts.c'; else $(CYGPATH_W) '$(srcdir)/puts.c'; fi`

libce_a-sprintf.o: sprintf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-sprintf.o `test -f 'sprintf.c' || echo '$(srcdir)/'`sprintf.c

libce_a-sprintf.obj: sprintf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-sprintf.obj `if test -f 'sprintf.c'; then $(CYGPATH_W) 'sprintf.c'; else $(CYGPATH_W) '$(srcdir)/sprintf.c'; fi`

libce_a-streams.o: streams.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-streams.o `test -f 'streams.c' || echo '$(srcdir)/'`streams.c

libce_a-streams.obj: streams.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-streams.obj `if test -f 'streams.c'; then $(CYGPATH_W) 'streams.c'; else $(CYGPATH_W) '$(srcdir)/streams.c'; fi`

libce_a-strmgpsim.o: strmgpsim.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-strmgpsim.o `test -f 'strmgpsim.c' || echo '$(srcdir)/'`strmgpsim.c

libce_a-strmgpsim.obj: strmgpsim.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-strmgpsim.obj `if test -f 'strmgpsim.c'; then $(CYGPATH_W) 'strmgpsim.c'; else $(CYGPATH_W) '$(srcdir)/strmgpsim.c'; fi`

libce_a-strmmssp.o: strmmssp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-strmmssp.o `test -f 'strmmssp.c' || echo '$(srcdir)/'`strmmssp.c

libce_a-strmmssp.obj: strmmssp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-strmmssp.obj `if test -f 'strmmssp.c'; then $(CYGPATH_W) 'strmmssp.c'; else $(CYGPATH_W) '$(srcdir)/strmmssp.c'; fi`

libce_a-strmusart.o: strmusart.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-strmusart.o `test -f 'strmusart.c' || echo '$(srcdir)/'`strmusart.c

libce_a-strmusart.obj: strmusart.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-strmusart.obj `if test -f 'strmusart.c'; then $(CYGPATH_W) 'strmusart.c'; else $(CYGPATH_W) '$(srcdir)/strmusart.c'; fi`

libce_a-vfprintf.o: vfprintf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-vfprintf.o `test -f 'vfprintf.c' || echo '$(srcdir)/'`vfprintf.c

libce_a-vfprintf.obj: vfprintf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-vfprintf.obj `if test -f 'vfprintf.c'; then $(CYGPATH_W) 'vfprintf.c'; else $(CYGPATH_W) '$(srcdir)/vfprintf.c'; fi`

libce_a-vprintf.o: vprintf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-vprintf.o `test -f 'vprintf.c' || echo '$(srcdir)/'`vprintf.c

libce_a-vprintf.obj: vprintf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-vprintf.obj `if test -f 'vprintf.c'; then $(CYGPATH_W) 'vprintf.c'; else $(CYGPATH_W) '$(srcdir)/vprintf.c'; fi`

libce_a-vsprintf.o: vsprintf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-vsprintf.o `test -f 'vsprintf.c' || echo '$(srcdir)/'`vsprintf.c

libce_a-vsprintf.obj: vsprintf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-vsprintf.obj `if test -f 'vsprintf.c'; then $(CYGPATH_W) 'vsprintf.c'; else $(CYGPATH_W) '$(srcdir)/vsprintf.c'; fi`

libce_a-_atof.o: _atof.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-_atof.o `test -f '_atof.c' || echo '$(srcdir)/'`_atof.c

libce_a-_atof.obj: _atof.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-_atof.obj `if test -f '_atof.c'; then $(CYGPATH_W) '_atof.c'; else $(CYGPATH_W) '$(srcdir)/_atof.c'; fi`

libce_a-_ftoa.o: _ftoa.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-_ftoa.o `test -f '_ftoa.c' || echo '$(srcdir)/'`_ftoa.c

libce_a-_ftoa.obj: _ftoa.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-_ftoa.obj `if test -f '_ftoa.c'; then $(CYGPATH_W) '_ftoa.c'; else $(CYGPATH_W) '$(srcdir)/_ftoa.c'; fi`

libce_a-__itoa.o: __itoa.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-__itoa.o `test -f '__itoa.c' || echo '$(srcdir)/'`__itoa.c

libce_a-__itoa.obj: __itoa.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-__itoa.obj `if test -f '__itoa.c'; then $(CYGPATH_W) '__itoa.c'; else $(CYGPATH_W) '$(srcdir)/__itoa.c'; fi`

libce_a-__ltoa.o: __ltoa.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-__ltoa.o `test -f '__ltoa.c' || echo '$(srcdir)/'`__ltoa.c

libce_a-__ltoa.obj: __ltoa.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-__ltoa.obj `if test -f '__ltoa.c'; then $(CYGPATH_W) '__ltoa.c'; else $(CYGPATH_W) '$(srcdir)/__ltoa.c'; fi`

libce_a-abs.o: abs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-abs.o `test -f 'abs.c' || echo '$(srcdir)/'`abs.c

libce_a-abs.obj: abs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-abs.obj `if test -f 'abs.c'; then $(CYGPATH_W) 'abs.c'; else $(CYGPATH_W) '$(srcdir)/abs.c'; fi`

libce_a-aligned_alloc.o: aligned_alloc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-aligned_alloc.o `test -f 'aligned_alloc.c' || echo '$(srcdir)/'`aligned_alloc.c

libce_a-aligned_alloc.obj: aligned_alloc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-aligned_alloc.obj `if test -f 'aligned_alloc.c'; then $(CYGPATH_W) 'aligned_alloc.c'; else $(CYGPATH_W) '$(srcdir)/aligned_alloc.c'; fi`

libce_a-atoi.o: atoi.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-atoi.o `test -f 'atoi.c' || echo '$(srcdir)/'`atoi.c

libce_a-atoi.obj: atoi.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-atoi.obj `if test -f 'atoi.c'; then $(CYGPATH_W) 'atoi.c'; else $(CYGPATH_W) '$(srcdir)/atoi.c'; fi`

libce_a-atol.o: atol.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-atol.o `test -f 'atol.c' || echo '$(srcdir)/'`atol.c

libce_a-atol.obj: atol.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-atol.obj `if test -f 'atol.c'; then $(CYGPATH_W) 'atol.c'; else $(CYGPATH_W) '$(srcdir)/atol.c'; fi`

libce_a-bsearch.o: bsearch.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-bsearch.o `test -f 'bsearch.c' || echo '$(srcdir)/'`bsearch.c

libce_a-bsearch.obj: bsearch.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-bsearch.obj `if test -f 'bsearch.c'; then $(CYGPATH_W) 'bsearch.c'; else $(CYGPATH_W) '$(srcdir)/bsearch.c'; fi`

libce_a-_calloc.o: _calloc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-_calloc.o `test -f '_calloc.c' || echo '$(srcdir)/'`_calloc.c

libce_a-_calloc.obj: _calloc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-_calloc.obj `if test -f '_calloc.c'; then $(CYGPATH_W) '_calloc.c'; else $(CYGPATH_W) '$(srcdir)/_calloc.c'; fi`

libce_a-free.o: free.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-free.o `test -f 'free.c' || echo '$(srcdir)/'`free.c

libce_a-free.obj: free.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-free.obj `if test -f 'free.c'; then $(CYGPATH_W) 'free.c'; else $(CYGPATH_W) '$(srcdir)/free.c'; fi`

libce_a-labs.o: labs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-labs.o `test -f 'labs.c' || echo '$(srcdir)/'`labs.c

libce_a-labs.obj: labs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-labs.obj `if test -f 'labs.c'; then $(CYGPATH_W) 'labs.c'; else $(CYGPATH_W) '$(srcdir)/labs.c'; fi`

libce_a-malloc.o: malloc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-malloc.o `test -f 'malloc.c' || echo '$(srcdir)/'`malloc.c

libce_a-malloc.obj: malloc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-malloc.obj `if test -f 'malloc.c'; then $(CYGPATH_W) 'malloc.c'; else $(CYGPATH_W) '$(srcdir)/malloc.c'; fi`

libce_a-mblen.o: mblen.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-mblen.o `test -f 'mblen.c' || echo '$(srcdir)/'`mblen.c

libce_a-mblen.obj: mblen.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-mblen.obj `if test -f 'mblen.c'; then $(CYGPATH_W) 'mblen.c'; else $(CYGPATH_W) '$(srcdir)/mblen.c'; fi`

libce_a-mbstowcs.o: mbstowcs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-mbstowcs.o `test -f 'mbstowcs.c' || echo '$(srcdir)/'`mbstowcs.c

libce_a-mbstowcs.obj: mbstowcs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-mbstowcs.obj `if test -f 'mbstowcs.c'; then $(CYGPATH_W) 'mbstowcs.c'; else $(CYGPATH_W) '$(srcdir)/mbstowcs.c'; fi`

libce_a-mbtowc.o: mbtowc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-mbtowc.o `test -f 'mbtowc.c' || echo '$(srcdir)/'`mbtowc.c

libce_a-mbtowc.obj: mbtowc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-mbtowc.obj `if test -f 'mbtowc.c'; then $(CYGPATH_W) 'mbtowc.c'; else $(CYGPATH_W) '$(srcdir)/mbtowc.c'; fi`

libce_a-memfree.o: memfree.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-memfree.o `test -f 'memfree.c' || echo '$(srcdir)/'`memfree.c

libce_a-memfree.obj: memfree.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-memfree.obj `if test -f 'memfree.c'; then $(CYGPATH_W) 'memfree.c'; else $(CYGPATH_W) '$(srcdir)/memfree.c'; fi`

libce_a-memfreemax.o: memfreemax.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-memfreemax.o `test -f 'memfreemax.c' || echo '$(srcdir)/'`memfreemax.c

libce_a-memfreemax.obj: memfreemax.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-memfreemax.obj `if test -f 'memfreemax.c'; then $(CYGPATH_W) 'memfreemax.c'; else $(CYGPATH_W) '$(srcdir)/memfreemax.c'; fi`

libce_a-memmisc.o: memmisc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-memmisc.o `test -f 'memmisc.c' || echo '$(srcdir)/'`memmisc.c

libce_a-memmisc.obj: memmisc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-memmisc.obj `if test -f 'memmisc.c'; then $(CYGPATH_W) 'memmisc.c'; else $(CYGPATH_W) '$(srcdir)/memmisc.c'; fi`

libce_a-qsort.o: qsort.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-qsort.o `test -f 'qsort.c' || echo '$(srcdir)/'`qsort.c

libce_a-qsort.obj: qsort.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-qsort.obj `if test -f 'qsort.c'; then $(CYGPATH_W) 'qsort.c'; else $(CYGPATH_W) '$(srcdir)/qsort.c'; fi`

libce_a-rand.o: rand.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-rand.o `test -f 'rand.c' || echo '$(srcdir)/'`rand.c

libce_a-rand.obj: rand.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-rand.obj `if test -f 'rand.c'; then $(CYGPATH_W) 'rand.c'; else $(CYGPATH_W) '$(srcdir)/rand.c'; fi`

libce_a-realloc.o: realloc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-realloc.o `test -f 'realloc.c' || echo '$(srcdir)/'`realloc.c

libce_a-realloc.obj: realloc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-realloc.obj `if test -f 'realloc.c'; then $(CYGPATH_W) 'realloc.c'; else $(CYGPATH_W) '$(srcdir)/realloc.c'; fi`

libce_a-strtol.o: strtol.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-strtol.o `test -f 'strtol.c' || echo '$(srcdir)/'`strtol.c

libce_a-strtol.obj: strtol.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-strtol.obj `if test -f 'strtol.c'; then $(CYGPATH_W) 'strtol.c'; else $(CYGPATH_W) '$(srcdir)/strtol.c'; fi`

libce_a-strtoul.o: strtoul.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-strtoul.o `test -f 'strtoul.c' || echo '$(srcdir)/'`strtoul.c

libce_a-strtoul.obj: strtoul.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-strtoul.obj `if test -f 'strtoul.c'; then $(CYGPATH_W) 'strtoul.c'; else $(CYGPATH_W) '$(srcdir)/strtoul.c'; fi`

libce_a-wcstombs.o: wcstombs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-wcstombs.o `test -f 'wcstombs.c' || echo '$(srcdir)/'`wcstombs.c

libce_a-wcstombs.obj: wcstombs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-wcstombs.obj `if test -f 'wcstombs.c'; then $(CYGPATH_W) 'wcstombs.c'; else $(CYGPATH_W) '$(srcdir)/wcstombs.c'; fi`

libce_a-wctomb.o: wctomb.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-wctomb.o `test -f 'wctomb.c' || echo '$(srcdir)/'`wctomb.c

libce_a-wctomb.obj: wctomb.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-wctomb.obj `if test -f 'wctomb.c'; then $(CYGPATH_W) 'wctomb.c'; else $(CYGPATH_W) '$(srcdir)/wctomb.c'; fi`

libce_a-_memchr.o: _memchr.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-_memchr.o `test -f '_memchr.c' || echo '$(srcdir)/'`_memchr.c

libce_a-_memchr.obj: _memchr.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-_memchr.obj `if test -f '_memchr.c'; then $(CYGPATH_W) '_memchr.c'; else $(CYGPATH_W) '$(srcdir)/_memchr.c'; fi`

libce_a-_memcmp.o: _memcmp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-_memcmp.o `test -f '_memcmp.c' || echo '$(srcdir)/'`_memcmp.c

libce_a-_memcmp.obj: _memcmp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-_memcmp.obj `if test -f '_memcmp.c'; then $(CYGPATH_W) '_memcmp.c'; else $(CYGPATH_W) '$(srcdir)/_memcmp.c'; fi`

libce_a-__memcpy.o: __memcpy.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-__memcpy.o `test -f '__memcpy.c' || echo '$(srcdir)/'`__memcpy.c

libce_a-__memcpy.obj: __memcpy.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-__memcpy.obj `if test -f '__memcpy.c'; then $(CYGPATH_W) '__memcpy.c'; else $(CYGPATH_W) '$(srcdir)/__memcpy.c'; fi`

libce_a-memcpy.o: memcpy.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-memcpy.o `test -f 'memcpy.c' || echo '$(srcdir)/'`memcpy.c

libce_a-memcpy.obj: memcpy.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-memcpy.obj `if test -f 'memcpy.c'; then $(CYGPATH_W) 'memcpy.c'; else $(CYGPATH_W) '$(srcdir)/memcpy.c'; fi`

libce_a-_memmove.o: _memmove.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-_memmove.o `test -f '_memmove.c' || echo '$(srcdir)/'`_memmove.c

libce_a-_memmove.obj: _memmove.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-_memmove.obj `if test -f '_memmove.c'; then $(CYGPATH_W) '_memmove.c'; else $(CYGPATH_W) '$(srcdir)/_memmove.c'; fi`

libce_a-_memset.o: _memset.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-_memset.o `test -f '_memset.c' || echo '$(srcdir)/'`_memset.c

libce_a-_memset.obj: _memset.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-_memset.obj `if test -f '_memset.c'; then $(CYGPATH_W) '_memset.c'; else $(CYGPATH_W) '$(srcdir)/_memset.c'; fi`

libce_a-_strcat.o: _strcat.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-_strcat.o `test -f '_strcat.c' || echo '$(srcdir)/'`_strcat.c

libce_a-_strcat.obj: _strcat.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-_strcat.obj `if test -f '_strcat.c'; then $(CYGPATH_W) '_strcat.c'; else $(CYGPATH_W) '$(srcdir)/_strcat.c'; fi`

libce_a-_strchr.o: _strchr.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-_strchr.o `test -f '_strchr.c' || echo '$(srcdir)/'`_strchr.c

libce_a-_strchr.obj: _strchr.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-_strchr.obj `if test -f '_strchr.c'; then $(CYGPATH_W) '_strchr.c'; else $(CYGPATH_W) '$(srcdir)/_strchr.c'; fi`

libce_a-_strcmp.o: _strcmp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-_strcmp.o `test -f '_strcmp.c' || echo '$(srcdir)/'`_strcmp.c

libce_a-_strcmp.obj: _strcmp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-_strcmp.obj `if test -f '_strcmp.c'; then $(CYGPATH_W) '_strcmp.c'; else $(CYGPATH_W) '$(srcdir)/_strcmp.c'; fi`

libce_a-_strcpy.o: _strcpy.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-_strcpy.o `test -f '_strcpy.c' || echo '$(srcdir)/'`_strcpy.c

libce_a-_strcpy.obj: _strcpy.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-_strcpy.obj `if test -f '_strcpy.c'; then $(CYGPATH_W) '_strcpy.c'; else $(CYGPATH_W) '$(srcdir)/_strcpy.c'; fi`

libce_a-_strcspn.o: _strcspn.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-_strcspn.o `test -f '_strcspn.c' || echo '$(srcdir)/'`_strcspn.c

libce_a-_strcspn.obj: _strcspn.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-_strcspn.obj `if test -f '_strcspn.c'; then $(CYGPATH_W) '_strcspn.c'; else $(CYGPATH_W) '$(srcdir)/_strcspn.c'; fi`

libce_a-_strlen.o: _strlen.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-_strlen.o `test -f '_strlen.c' || echo '$(srcdir)/'`_strlen.c

libce_a-_strlen.obj: _strlen.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-_strlen.obj `if test -f '_strlen.c'; then $(CYGPATH_W) '_strlen.c'; else $(CYGPATH_W) '$(srcdir)/_strlen.c'; fi`

libce_a-_strncat.o: _strncat.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-_strncat.o `test -f '_strncat.c' || echo '$(srcdir)/'`_strncat.c

libce_a-_strncat.obj: _strncat.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-_strncat.obj `if test -f '_strncat.c'; then $(CYGPATH_W) '_strncat.c'; else $(CYGPATH_W) '$(srcdir)/_strncat.c'; fi`

libce_a-_strncmp.o: _strncmp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-_strncmp.o `test -f '_strncmp.c' || echo '$(srcdir)/'`_strncmp.c

libce_a-_strncmp.obj: _strncmp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-_strncmp.obj `if test -f '_strncmp.c'; then $(CYGPATH_W) '_strncmp.c'; else $(CYGPATH_W) '$(srcdir)/_strncmp.c'; fi`

libce_a-_strncpy.o: _strncpy.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-_strncpy.o `test -f '_strncpy.c' || echo '$(srcdir)/'`_strncpy.c

libce_a-_strncpy.obj: _strncpy.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-_strncpy.obj `if test -f '_strncpy.c'; then $(CYGPATH_W) '_strncpy.c'; else $(CYGPATH_W) '$(srcdir)/_strncpy.c'; fi`

libce_a-_strpbrk.o: _strpbrk.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-_strpbrk.o `test -f '_strpbrk.c' || echo '$(srcdir)/'`_strpbrk.c

libce_a-_strpbrk.obj: _strpbrk.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-_strpbrk.obj `if test -f '_strpbrk.c'; then $(CYGPATH_W) '_strpbrk.c'; else $(CYGPATH_W) '$(srcdir)/_strpbrk.c'; fi`

libce_a-_strrchr.o: _strrchr.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-_strrchr.o `test -f '_strrchr.c' || echo '$(srcdir)/'`_strrchr.c

libce_a-_strrchr.obj: _strrchr.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-_strrchr.obj `if test -f '_strrchr.c'; then $(CYGPATH_W) '_strrchr.c'; else $(CYGPATH_W) '$(srcdir)/_strrchr.c'; fi`

libce_a-_strspn.o: _strspn.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-_strspn.o `test -f '_strspn.c' || echo '$(srcdir)/'`_strspn.c

libce_a-_strspn.obj: _strspn.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-_strspn.obj `if test -f '_strspn.c'; then $(CYGPATH_W) '_strspn.c'; else $(CYGPATH_W) '$(srcdir)/_strspn.c'; fi`

libce_a-_strstr.o: _strstr.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-_strstr.o `test -f '_strstr.c' || echo '$(srcdir)/'`_strstr.c

libce_a-_strstr.obj: _strstr.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-_strstr.obj `if test -f '_strstr.c'; then $(CYGPATH_W) '_strstr.c'; else $(CYGPATH_W) '$(srcdir)/_strstr.c'; fi`

libce_a-_strtok.o: _strtok.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-_strtok.o `test -f '_strtok.c' || echo '$(srcdir)/'`_strtok.c

libce_a-_strtok.obj: _strtok.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-_strtok.obj `if test -f '_strtok.c'; then $(CYGPATH_W) '_strtok.c'; else $(CYGPATH_W) '$(srcdir)/_strtok.c'; fi`

libce_a-strxfrm.o: strxfrm.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-strxfrm.o `test -f 'strxfrm.c' || echo '$(srcdir)/'`strxfrm.c

libce_a-strxfrm.obj: strxfrm.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-strxfrm.obj `if test -f 'strxfrm.c'; then $(CYGPATH_W) 'strxfrm.c'; else $(CYGPATH_W) '$(srcdir)/strxfrm.c'; fi`

libce_a-c16rtomb.o: c16rtomb.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-c16rtomb.o `test -f 'c16rtomb.c' || echo '$(srcdir)/'`c16rtomb.c

libce_a-c16rtomb.obj: c16rtomb.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-c16rtomb.obj `if test -f 'c16rtomb.c'; then $(CYGPATH_W) 'c16rtomb.c'; else $(CYGPATH_W) '$(srcdir)/c16rtomb.c'; fi`

libce_a-c16stombs.o: c16stombs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-c16stombs.o `test -f 'c16stombs.c' || echo '$(srcdir)/'`c16stombs.c

libce_a-c16stombs.obj: c16stombs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-c16stombs.obj `if test -f 'c16stombs.c'; then $(CYGPATH_W) 'c16stombs.c'; else $(CYGPATH_W) '$(srcdir)/c16stombs.c'; fi`

libce_a-c32rtomb.o: c32rtomb.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-c32rtomb.o `test -f 'c32rtomb.c' || echo '$(srcdir)/'`c32rtomb.c

libce_a-c32rtomb.obj: c32rtomb.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-c32rtomb.obj `if test -f 'c32rtomb.c'; then $(CYGPATH_W) 'c32rtomb.c'; else $(CYGPATH_W) '$(srcdir)/c32rtomb.c'; fi`

libce_a-mbrtoc16.o: mbrtoc16.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-mbrtoc16.o `test -f 'mbrtoc16.c' || echo '$(srcdir)/'`mbrtoc16.c

libce_a-mbrtoc16.obj: mbrtoc16.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-mbrtoc16.obj `if test -f 'mbrtoc16.c'; then $(CYGPATH_W) 'mbrtoc16.c'; else $(CYGPATH_W) '$(srcdir)/mbrtoc16.c'; fi`

libce_a-mbrtoc32.o: mbrtoc32.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-mbrtoc32.o `test -f 'mbrtoc32.c' || echo '$(srcdir)/'`mbrtoc32.c

libce_a-mbrtoc32.obj: mbrtoc32.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-mbrtoc32.obj `if test -f 'mbrtoc32.c'; then $(CYGPATH_W) 'mbrtoc32.c'; else $(CYGPATH_W) '$(srcdir)/mbrtoc32.c'; fi`

libce_a-mbstoc16s.o: mbstoc16s.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-mbstoc16s.o `test -f 'mbstoc16s.c' || echo '$(srcdir)/'`mbstoc16s.c

libce_a-mbstoc16s.obj: mbstoc16s.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-mbstoc16s.obj `if test -f 'mbstoc16s.c'; then $(CYGPATH_W) 'mbstoc16s.c'; else $(CYGPATH_W) '$(srcdir)/mbstoc16s.c'; fi`

libce_a-btowc.o: btowc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-btowc.o `test -f 'btowc.c' || echo '$(srcdir)/'`btowc.c

libce_a-btowc.obj: btowc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-btowc.obj `if test -f 'btowc.c'; then $(CYGPATH_W) 'btowc.c'; else $(CYGPATH_W) '$(srcdir)/btowc.c'; fi`

libce_a-mbrlen.o: mbrlen.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-mbrlen.o `test -f 'mbrlen.c' || echo '$(srcdir)/'`mbrlen.c

libce_a-mbrlen.obj: mbrlen.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-mbrlen.obj `if test -f 'mbrlen.c'; then $(CYGPATH_W) 'mbrlen.c'; else $(CYGPATH_W) '$(srcdir)/mbrlen.c'; fi`

libce_a-mbrtowc.o: mbrtowc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-mbrtowc.o `test -f 'mbrtowc.c' || echo '$(srcdir)/'`mbrtowc.c

libce_a-mbrtowc.obj: mbrtowc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-mbrtowc.obj `if test -f 'mbrtowc.c'; then $(CYGPATH_W) 'mbrtowc.c'; else $(CYGPATH_W) '$(srcdir)/mbrtowc.c'; fi`

libce_a-mbsinit.o: mbsinit.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-mbsinit.o `test -f 'mbsinit.c' || echo '$(srcdir)/'`mbsinit.c

libce_a-mbsinit.obj: mbsinit.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-mbsinit.obj `if test -f 'mbsinit.c'; then $(CYGPATH_W) 'mbsinit.c'; else $(CYGPATH_W) '$(srcdir)/mbsinit.c'; fi`

libce_a-wcrtomb.o: wcrtomb.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-wcrtomb.o `test -f 'wcrtomb.c' || echo '$(srcdir)/'`wcrtomb.c

libce_a-wcrtomb.obj: wcrtomb.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-wcrtomb.obj `if test -f 'wcrtomb.c'; then $(CYGPATH_W) 'wcrtomb.c'; else $(CYGPATH_W) '$(srcdir)/wcrtomb.c'; fi`

libce_a-wcscmp.o: wcscmp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-wcscmp.o `test -f 'wcscmp.c' || echo '$(srcdir)/'`wcscmp.c

libce_a-wcscmp.obj: wcscmp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-wcscmp.obj `if test -f 'wcscmp.c'; then $(CYGPATH_W) 'wcscmp.c'; else $(CYGPATH_W) '$(srcdir)/wcscmp.c'; fi`

libce_a-wcslen.o: wcslen.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-wcslen.o `test -f 'wcslen.c' || echo '$(srcdir)/'`wcslen.c

libce_a-wcslen.obj: wcslen.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-wcslen.obj `if test -f 'wcslen.c'; then $(CYGPATH_W) 'wcslen.c'; else $(CYGPATH_W) '$(srcdir)/wcslen.c'; fi`

libce_a-wctob.o: wctob.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-wctob.o `test -f 'wctob.c' || echo '$(srcdir)/'`wctob.c

libce_a-wctob.obj: wctob.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libce_a_CFLAGS) $(CFLAGS) -c -o libce_a-wctob.obj `if test -f 'wctob.c'; then $(CYGPATH_W) 'wctob.c'; else $(CYGPATH_W) '$(srcdir)/wctob.c'; fi`

libceo_a-__assert.o: __assert.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-__assert.o `test -f '__assert.c' || echo '$(srcdir)/'`__assert.c

libceo_a-__assert.obj: __assert.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-__assert.obj `if test -f '__assert.c'; then $(CYGPATH_W) '__assert.c'; else $(CYGPATH_W) '$(srcdir)/__assert.c'; fi`

libceo_a-isalnum.o: isalnum.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-isalnum.o `test -f 'isalnum.c' || echo '$(srcdir)/'`isalnum.c

libceo_a-isalnum.obj: isalnum.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-isalnum.obj `if test -f 'isalnum.c'; then $(CYGPATH_W) 'isalnum.c'; else $(CYGPATH_W) '$(srcdir)/isalnum.c'; fi`

libceo_a-isalpha.o: isalpha.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-isalpha.o `test -f 'isalpha.c' || echo '$(srcdir)/'`isalpha.c

libceo_a-isalpha.obj: isalpha.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-isalpha.obj `if test -f 'isalpha.c'; then $(CYGPATH_W) 'isalpha.c'; else $(CYGPATH_W) '$(srcdir)/isalpha.c'; fi`

libceo_a-isblank.o: isblank.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-isblank.o `test -f 'isblank.c' || echo '$(srcdir)/'`isblank.c

libceo_a-isblank.obj: isblank.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-isblank.obj `if test -f 'isblank.c'; then $(CYGPATH_W) 'isblank.c'; else $(CYGPATH_W) '$(srcdir)/isblank.c'; fi`

libceo_a-iscntrl.o: iscntrl.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-iscntrl.o `test -f 'iscntrl.c' || echo '$(srcdir)/'`iscntrl.c

libceo_a-iscntrl.obj: iscntrl.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-iscntrl.obj `if test -f 'iscntrl.c'; then $(CYGPATH_W) 'iscntrl.c'; else $(CYGPATH_W) '$(srcdir)/iscntrl.c'; fi`

libceo_a-isdigit.o: isdigit.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-isdigit.o `test -f 'isdigit.c' || echo '$(srcdir)/'`isdigit.c

libceo_a-isdigit.obj: isdigit.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-isdigit.obj `if test -f 'isdigit.c'; then $(CYGPATH_W) 'isdigit.c'; else $(CYGPATH_W) '$(srcdir)/isdigit.c'; fi`

libceo_a-isgraph.o: isgraph.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-isgraph.o `test -f 'isgraph.c' || echo '$(srcdir)/'`isgraph.c

libceo_a-isgraph.obj: isgraph.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-isgraph.obj `if test -f 'isgraph.c'; then $(CYGPATH_W) 'isgraph.c'; else $(CYGPATH_W) '$(srcdir)/isgraph.c'; fi`

libceo_a-islower.o: islower.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-islower.o `test -f 'islower.c' || echo '$(srcdir)/'`islower.c

libceo_a-islower.obj: islower.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-islower.obj `if test -f 'islower.c'; then $(CYGPATH_W) 'islower.c'; else $(CYGPATH_W) '$(srcdir)/islower.c'; fi`

libceo_a-isprint.o: isprint.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-isprint.o `test -f 'isprint.c' || echo '$(srcdir)/'`isprint.c

libceo_a-isprint.obj: isprint.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-isprint.obj `if test -f 'isprint.c'; then $(CYGPATH_W) 'isprint.c'; else $(CYGPATH_W) '$(srcdir)/isprint.c'; fi`

libceo_a-ispunct.o: ispunct.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-ispunct.o `test -f 'ispunct.c' || echo '$(srcdir)/'`ispunct.c

libceo_a-ispunct.obj: ispunct.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-ispunct.obj `if test -f 'ispunct.c'; then $(CYGPATH_W) 'ispunct.c'; else $(CYGPATH_W) '$(srcdir)/ispunct.c'; fi`

libceo_a-isspace.o: isspace.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-isspace.o `test -f 'isspace.c' || echo '$(srcdir)/'`isspace.c

libceo_a-isspace.obj: isspace.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-isspace.obj `if test -f 'isspace.c'; then $(CYGPATH_W) 'isspace.c'; else $(CYGPATH_W) '$(srcdir)/isspace.c'; fi`

libceo_a-isupper.o: isupper.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-isupper.o `test -f 'isupper.c' || echo '$(srcdir)/'`isupper.c

libceo_a-isupper.obj: isupper.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-isupper.obj `if test -f 'isupper.c'; then $(CYGPATH_W) 'isupper.c'; else $(CYGPATH_W) '$(srcdir)/isupper.c'; fi`

libceo_a-isxdigit.o: isxdigit.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-isxdigit.o `test -f 'isxdigit.c' || echo '$(srcdir)/'`isxdigit.c

libceo_a-isxdigit.obj: isxdigit.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-isxdigit.obj `if test -f 'isxdigit.c'; then $(CYGPATH_W) 'isxdigit.c'; else $(CYGPATH_W) '$(srcdir)/isxdigit.c'; fi`

libceo_a-tolower.o: tolower.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-tolower.o `test -f 'tolower.c' || echo '$(srcdir)/'`tolower.c

libceo_a-tolower.obj: tolower.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-tolower.obj `if test -f 'tolower.c'; then $(CYGPATH_W) 'tolower.c'; else $(CYGPATH_W) '$(srcdir)/tolower.c'; fi`

libceo_a-toupper.o: toupper.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-toupper.o `test -f 'toupper.c' || echo '$(srcdir)/'`toupper.c

libceo_a-toupper.obj: toupper.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-toupper.obj `if test -f 'toupper.c'; then $(CYGPATH_W) 'toupper.c'; else $(CYGPATH_W) '$(srcdir)/toupper.c'; fi`

libceo_a-errno.o: errno.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-errno.o `test -f 'errno.c' || echo '$(srcdir)/'`errno.c

libceo_a-errno.obj: errno.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-errno.obj `if test -f 'errno.c'; then $(CYGPATH_W) 'errno.c'; else $(CYGPATH_W) '$(srcdir)/errno.c'; fi`

libceo_a-fprintf.o: fprintf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-fprintf.o `test -f 'fprintf.c' || echo '$(srcdir)/'`fprintf.c

libceo_a-fprintf.obj: fprintf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-fprintf.obj `if test -f 'fprintf.c'; then $(CYGPATH_W) 'fprintf.c'; else $(CYGPATH_W) '$(srcdir)/fprintf.c'; fi`

libceo_a-fputc.o: fputc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-fputc.o `test -f 'fputc.c' || echo '$(srcdir)/'`fputc.c

libceo_a-fputc.obj: fputc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-fputc.obj `if test -f 'fputc.c'; then $(CYGPATH_W) 'fputc.c'; else $(CYGPATH_W) '$(srcdir)/fputc.c'; fi`

libceo_a-fputs.o: fputs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-fputs.o `test -f 'fputs.c' || echo '$(srcdir)/'`fputs.c

libceo_a-fputs.obj: fputs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-fputs.obj `if test -f 'fputs.c'; then $(CYGPATH_W) 'fputs.c'; else $(CYGPATH_W) '$(srcdir)/fputs.c'; fi`

libceo_a-getchar.o: getchar.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-getchar.o `test -f 'getchar.c' || echo '$(srcdir)/'`getchar.c

libceo_a-getchar.obj: getchar.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-getchar.obj `if test -f 'getchar.c'; then $(CYGPATH_W) 'getchar.c'; else $(CYGPATH_W) '$(srcdir)/getchar.c'; fi`

libceo_a-gets.o: gets.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-gets.o `test -f 'gets.c' || echo '$(srcdir)/'`gets.c

libceo_a-gets.obj: gets.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-gets.obj `if test -f 'gets.c'; then $(CYGPATH_W) 'gets.c'; else $(CYGPATH_W) '$(srcdir)/gets.c'; fi`

libceo_a-printf.o: printf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-printf.o `test -f 'printf.c' || echo '$(srcdir)/'`printf.c

libceo_a-printf.obj: printf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-printf.obj `if test -f 'printf.c'; then $(CYGPATH_W) 'printf.c'; else $(CYGPATH_W) '$(srcdir)/printf.c'; fi`

libceo_a-printfl.o: printfl.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-printfl.o `test -f 'printfl.c' || echo '$(srcdir)/'`printfl.c

libceo_a-printfl.obj: printfl.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-printfl.obj `if test -f 'printfl.c'; then $(CYGPATH_W) 'printfl.c'; else $(CYGPATH_W) '$(srcdir)/printfl.c'; fi`

libceo_a-putchar.o: putchar.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-putchar.o `test -f 'putchar.c' || echo '$(srcdir)/'`putchar.c

libceo_a-putchar.obj: putchar.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-putchar.obj `if test -f 'putchar.c'; then $(CYGPATH_W) 'putchar.c'; else $(CYGPATH_W) '$(srcdir)/putchar.c'; fi`

libceo_a-puts.o: puts.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-puts.o `test -f 'puts.c' || echo '$(srcdir)/'`puts.c

libceo_a-puts.obj: puts.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-puts.obj `if test -f 'puts.c'; then $(CYGPATH_W) 'puts.c'; else $(CYGPATH_W) '$(srcdir)/puts.c'; fi`

libceo_a-sprintf.o: sprintf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-sprintf.o `test -f 'sprintf.c' || echo '$(srcdir)/'`sprintf.c

libceo_a-sprintf.obj: sprintf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-sprintf.obj `if test -f 'sprintf.c'; then $(CYGPATH_W) 'sprintf.c'; else $(CYGPATH_W) '$(srcdir)/sprintf.c'; fi`

libceo_a-streams.o: streams.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-streams.o `test -f 'streams.c' || echo '$(srcdir)/'`streams.c

libceo_a-streams.obj: streams.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-streams.obj `if test -f 'streams.c'; then $(CYGPATH_W) 'streams.c'; else $(CYGPATH_W) '$(srcdir)/streams.c'; fi`

libceo_a-strmgpsim.o: strmgpsim.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-strmgpsim.o `test -f 'strmgpsim.c' || echo '$(srcdir)/'`strmgpsim.c

libceo_a-strmgpsim.obj: strmgpsim.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-strmgpsim.obj `if test -f 'strmgpsim.c'; then $(CYGPATH_W) 'strmgpsim.c'; else $(CYGPATH_W) '$(srcdir)/strmgpsim.c'; fi`

libceo_a-strmmssp.o: strmmssp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-strmmssp.o `test -f 'strmmssp.c' || echo '$(srcdir)/'`strmmssp.c

libceo_a-strmmssp.obj: strmmssp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-strmmssp.obj `if test -f 'strmmssp.c'; then $(CYGPATH_W) 'strmmssp.c'; else $(CYGPATH_W) '$(srcdir)/strmmssp.c'; fi`

libceo_a-strmusart.o: strmusart.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-strmusart.o `test -f 'strmusart.c' || echo '$(srcdir)/'`strmusart.c

libceo_a-strmusart.obj: strmusart.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-strmusart.obj `if test -f 'strmusart.c'; then $(CYGPATH_W) 'strmusart.c'; else $(CYGPATH_W) '$(srcdir)/strmusart.c'; fi`

libceo_a-vfprintf.o: vfprintf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-vfprintf.o `test -f 'vfprintf.c' || echo '$(srcdir)/'`vfprintf.c

libceo_a-vfprintf.obj: vfprintf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-vfprintf.obj `if test -f 'vfprintf.c'; then $(CYGPATH_W) 'vfprintf.c'; else $(CYGPATH_W) '$(srcdir)/vfprintf.c'; fi`

libceo_a-vprintf.o: vprintf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-vprintf.o `test -f 'vprintf.c' || echo '$(srcdir)/'`vprintf.c

libceo_a-vprintf.obj: vprintf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-vprintf.obj `if test -f 'vprintf.c'; then $(CYGPATH_W) 'vprintf.c'; else $(CYGPATH_W) '$(srcdir)/vprintf.c'; fi`

libceo_a-vsprintf.o: vsprintf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-vsprintf.o `test -f 'vsprintf.c' || echo '$(srcdir)/'`vsprintf.c

libceo_a-vsprintf.obj: vsprintf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-vsprintf.obj `if test -f 'vsprintf.c'; then $(CYGPATH_W) 'vsprintf.c'; else $(CYGPATH_W) '$(srcdir)/vsprintf.c'; fi`

libceo_a-_atof.o: _atof.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-_atof.o `test -f '_atof.c' || echo '$(srcdir)/'`_atof.c

libceo_a-_atof.obj: _atof.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-_atof.obj `if test -f '_atof.c'; then $(CYGPATH_W) '_atof.c'; else $(CYGPATH_W) '$(srcdir)/_atof.c'; fi`

libceo_a-_ftoa.o: _ftoa.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-_ftoa.o `test -f '_ftoa.c' || echo '$(srcdir)/'`_ftoa.c

libceo_a-_ftoa.obj: _ftoa.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-_ftoa.obj `if test -f '_ftoa.c'; then $(CYGPATH_W) '_ftoa.c'; else $(CYGPATH_W) '$(srcdir)/_ftoa.c'; fi`

libceo_a-__itoa.o: __itoa.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-__itoa.o `test -f '__itoa.c' || echo '$(srcdir)/'`__itoa.c

libceo_a-__itoa.obj: __itoa.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-__itoa.obj `if test -f '__itoa.c'; then $(CYGPATH_W) '__itoa.c'; else $(CYGPATH_W) '$(srcdir)/__itoa.c'; fi`

libceo_a-__ltoa.o: __ltoa.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-__ltoa.o `test -f '__ltoa.c' || echo '$(srcdir)/'`__ltoa.c

libceo_a-__ltoa.obj: __ltoa.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-__ltoa.obj `if test -f '__ltoa.c'; then $(CYGPATH_W) '__ltoa.c'; else $(CYGPATH_W) '$(srcdir)/__ltoa.c'; fi`

libceo_a-abs.o: abs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-abs.o `test -f 'abs.c' || echo '$(srcdir)/'`abs.c

libceo_a-abs.obj: abs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-abs.obj `if test -f 'abs.c'; then $(CYGPATH_W) 'abs.c'; else $(CYGPATH_W) '$(srcdir)/abs.c'; fi`

libceo_a-aligned_alloc.o: aligned_alloc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-aligned_alloc.o `test -f 'aligned_alloc.c' || echo '$(srcdir)/'`aligned_alloc.c

libceo_a-aligned_alloc.obj: aligned_alloc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-aligned_alloc.obj `if test -f 'aligned_alloc.c'; then $(CYGPATH_W) 'aligned_alloc.c'; else $(CYGPATH_W) '$(srcdir)/aligned_alloc.c'; fi`

libceo_a-atoi.o: atoi.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-atoi.o `test -f 'atoi.c' || echo '$(srcdir)/'`atoi.c

libceo_a-atoi.obj: atoi.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-atoi.obj `if test -f 'atoi.c'; then $(CYGPATH_W) 'atoi.c'; else $(CYGPATH_W) '$(srcdir)/atoi.c'; fi`

libceo_a-atol.o: atol.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-atol.o `test -f 'atol.c' || echo '$(srcdir)/'`atol.c

libceo_a-atol.obj: atol.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-atol.obj `if test -f 'atol.c'; then $(CYGPATH_W) 'atol.c'; else $(CYGPATH_W) '$(srcdir)/atol.c'; fi`

libceo_a-bsearch.o: bsearch.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-bsearch.o `test -f 'bsearch.c' || echo '$(srcdir)/'`bsearch.c

libceo_a-bsearch.obj: bsearch.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-bsearch.obj `if test -f 'bsearch.c'; then $(CYGPATH_W) 'bsearch.c'; else $(CYGPATH_W) '$(srcdir)/bsearch.c'; fi`

libceo_a-_calloc.o: _calloc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-_calloc.o `test -f '_calloc.c' || echo '$(srcdir)/'`_calloc.c

libceo_a-_calloc.obj: _calloc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-_calloc.obj `if test -f '_calloc.c'; then $(CYGPATH_W) '_calloc.c'; else $(CYGPATH_W) '$(srcdir)/_calloc.c'; fi`

libceo_a-free.o: free.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-free.o `test -f 'free.c' || echo '$(srcdir)/'`free.c

libceo_a-free.obj: free.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-free.obj `if test -f 'free.c'; then $(CYGPATH_W) 'free.c'; else $(CYGPATH_W) '$(srcdir)/free.c'; fi`

libceo_a-labs.o: labs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-labs.o `test -f 'labs.c' || echo '$(srcdir)/'`labs.c

libceo_a-labs.obj: labs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-labs.obj `if test -f 'labs.c'; then $(CYGPATH_W) 'labs.c'; else $(CYGPATH_W) '$(srcdir)/labs.c'; fi`

libceo_a-malloc.o: malloc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-malloc.o `test -f 'malloc.c' || echo '$(srcdir)/'`malloc.c

libceo_a-malloc.obj: malloc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-malloc.obj `if test -f 'malloc.c'; then $(CYGPATH_W) 'malloc.c'; else $(CYGPATH_W) '$(srcdir)/malloc.c'; fi`

libceo_a-mblen.o: mblen.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-mblen.o `test -f 'mblen.c' || echo '$(srcdir)/'`mblen.c

libceo_a-mblen.obj: mblen.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-mblen.obj `if test -f 'mblen.c'; then $(CYGPATH_W) 'mblen.c'; else $(CYGPATH_W) '$(srcdir)/mblen.c'; fi`

libceo_a-mbstowcs.o: mbstowcs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-mbstowcs.o `test -f 'mbstowcs.c' || echo '$(srcdir)/'`mbstowcs.c

libceo_a-mbstowcs.obj: mbstowcs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-mbstowcs.obj `if test -f 'mbstowcs.c'; then $(CYGPATH_W) 'mbstowcs.c'; else $(CYGPATH_W) '$(srcdir)/mbstowcs.c'; fi`

libceo_a-mbtowc.o: mbtowc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-mbtowc.o `test -f 'mbtowc.c' || echo '$(srcdir)/'`mbtowc.c

libceo_a-mbtowc.obj: mbtowc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-mbtowc.obj `if test -f 'mbtowc.c'; then $(CYGPATH_W) 'mbtowc.c'; else $(CYGPATH_W) '$(srcdir)/mbtowc.c'; fi`

libceo_a-memfree.o: memfree.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-memfree.o `test -f 'memfree.c' || echo '$(srcdir)/'`memfree.c

libceo_a-memfree.obj: memfree.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-memfree.obj `if test -f 'memfree.c'; then $(CYGPATH_W) 'memfree.c'; else $(CYGPATH_W) '$(srcdir)/memfree.c'; fi`

libceo_a-memfreemax.o: memfreemax.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-memfreemax.o `test -f 'memfreemax.c' || echo '$(srcdir)/'`memfreemax.c

libceo_a-memfreemax.obj: memfreemax.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-memfreemax.obj `if test -f 'memfreemax.c'; then $(CYGPATH_W) 'memfreemax.c'; else $(CYGPATH_W) '$(srcdir)/memfreemax.c'; fi`

libceo_a-memmisc.o: memmisc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-memmisc.o `test -f 'memmisc.c' || echo '$(srcdir)/'`memmisc.c

libceo_a-memmisc.obj: memmisc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-memmisc.obj `if test -f 'memmisc.c'; then $(CYGPATH_W) 'memmisc.c'; else $(CYGPATH_W) '$(srcdir)/memmisc.c'; fi`

libceo_a-qsort.o: qsort.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-qsort.o `test -f 'qsort.c' || echo '$(srcdir)/'`qsort.c

libceo_a-qsort.obj: qsort.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-qsort.obj `if test -f 'qsort.c'; then $(CYGPATH_W) 'qsort.c'; else $(CYGPATH_W) '$(srcdir)/qsort.c'; fi`

libceo_a-rand.o: rand.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-rand.o `test -f 'rand.c' || echo '$(srcdir)/'`rand.c

libceo_a-rand.obj: rand.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-rand.obj `if test -f 'rand.c'; then $(CYGPATH_W) 'rand.c'; else $(CYGPATH_W) '$(srcdir)/rand.c'; fi`

libceo_a-realloc.o: realloc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-realloc.o `test -f 'realloc.c' || echo '$(srcdir)/'`realloc.c

libceo_a-realloc.obj: realloc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-realloc.obj `if test -f 'realloc.c'; then $(CYGPATH_W) 'realloc.c'; else $(CYGPATH_W) '$(srcdir)/realloc.c'; fi`

libceo_a-strtol.o: strtol.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-strtol.o `test -f 'strtol.c' || echo '$(srcdir)/'`strtol.c

libceo_a-strtol.obj: strtol.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-strtol.obj `if test -f 'strtol.c'; then $(CYGPATH_W) 'strtol.c'; else $(CYGPATH_W) '$(srcdir)/strtol.c'; fi`

libceo_a-strtoul.o: strtoul.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-strtoul.o `test -f 'strtoul.c' || echo '$(srcdir)/'`strtoul.c

libceo_a-strtoul.obj: strtoul.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-strtoul.obj `if test -f 'strtoul.c'; then $(CYGPATH_W) 'strtoul.c'; else $(CYGPATH_W) '$(srcdir)/strtoul.c'; fi`

libceo_a-wcstombs.o: wcstombs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-wcstombs.o `test -f 'wcstombs.c' || echo '$(srcdir)/'`wcstombs.c

libceo_a-wcstombs.obj: wcstombs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-wcstombs.obj `if test -f 'wcstombs.c'; then $(CYGPATH_W) 'wcstombs.c'; else $(CYGPATH_W) '$(srcdir)/wcstombs.c'; fi`

libceo_a-wctomb.o: wctomb.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-wctomb.o `test -f 'wctomb.c' || echo '$(srcdir)/'`wctomb.c

libceo_a-wctomb.obj: wctomb.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-wctomb.obj `if test -f 'wctomb.c'; then $(CYGPATH_W) 'wctomb.c'; else $(CYGPATH_W) '$(srcdir)/wctomb.c'; fi`

libceo_a-_memchr.o: _memchr.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-_memchr.o `test -f '_memchr.c' || echo '$(srcdir)/'`_memchr.c

libceo_a-_memchr.obj: _memchr.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-_memchr.obj `if test -f '_memchr.c'; then $(CYGPATH_W) '_memchr.c'; else $(CYGPATH_W) '$(srcdir)/_memchr.c'; fi`

libceo_a-_memcmp.o: _memcmp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-_memcmp.o `test -f '_memcmp.c' || echo '$(srcdir)/'`_memcmp.c

libceo_a-_memcmp.obj: _memcmp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-_memcmp.obj `if test -f '_memcmp.c'; then $(CYGPATH_W) '_memcmp.c'; else $(CYGPATH_W) '$(srcdir)/_memcmp.c'; fi`

libceo_a-__memcpy.o: __memcpy.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-__memcpy.o `test -f '__memcpy.c' || echo '$(srcdir)/'`__memcpy.c

libceo_a-__memcpy.obj: __memcpy.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-__memcpy.obj `if test -f '__memcpy.c'; then $(CYGPATH_W) '__memcpy.c'; else $(CYGPATH_W) '$(srcdir)/__memcpy.c'; fi`

libceo_a-memcpy.o: memcpy.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-memcpy.o `test -f 'memcpy.c' || echo '$(srcdir)/'`memcpy.c

libceo_a-memcpy.obj: memcpy.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-memcpy.obj `if test -f 'memcpy.c'; then $(CYGPATH_W) 'memcpy.c'; else $(CYGPATH_W) '$(srcdir)/memcpy.c'; fi`

libceo_a-_memmove.o: _memmove.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-_memmove.o `test -f '_memmove.c' || echo '$(srcdir)/'`_memmove.c

libceo_a-_memmove.obj: _memmove.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-_memmove.obj `if test -f '_memmove.c'; then $(CYGPATH_W) '_memmove.c'; else $(CYGPATH_W) '$(srcdir)/_memmove.c'; fi`

libceo_a-_memset.o: _memset.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-_memset.o `test -f '_memset.c' || echo '$(srcdir)/'`_memset.c

libceo_a-_memset.obj: _memset.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-_memset.obj `if test -f '_memset.c'; then $(CYGPATH_W) '_memset.c'; else $(CYGPATH_W) '$(srcdir)/_memset.c'; fi`

libceo_a-_strcat.o: _strcat.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-_strcat.o `test -f '_strcat.c' || echo '$(srcdir)/'`_strcat.c

libceo_a-_strcat.obj: _strcat.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-_strcat.obj `if test -f '_strcat.c'; then $(CYGPATH_W) '_strcat.c'; else $(CYGPATH_W) '$(srcdir)/_strcat.c'; fi`

libceo_a-_strchr.o: _strchr.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-_strchr.o `test -f '_strchr.c' || echo '$(srcdir)/'`_strchr.c

libceo_a-_strchr.obj: _strchr.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-_strchr.obj `if test -f '_strchr.c'; then $(CYGPATH_W) '_strchr.c'; else $(CYGPATH_W) '$(srcdir)/_strchr.c'; fi`

libceo_a-_strcmp.o: _strcmp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-_strcmp.o `test -f '_strcmp.c' || echo '$(srcdir)/'`_strcmp.c

libceo_a-_strcmp.obj: _strcmp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-_strcmp.obj `if test -f '_strcmp.c'; then $(CYGPATH_W) '_strcmp.c'; else $(CYGPATH_W) '$(srcdir)/_strcmp.c'; fi`

libceo_a-_strcpy.o: _strcpy.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-_strcpy.o `test -f '_strcpy.c' || echo '$(srcdir)/'`_strcpy.c

libceo_a-_strcpy.obj: _strcpy.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-_strcpy.obj `if test -f '_strcpy.c'; then $(CYGPATH_W) '_strcpy.c'; else $(CYGPATH_W) '$(srcdir)/_strcpy.c'; fi`

libceo_a-_strcspn.o: _strcspn.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-_strcspn.o `test -f '_strcspn.c' || echo '$(srcdir)/'`_strcspn.c

libceo_a-_strcspn.obj: _strcspn.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-_strcspn.obj `if test -f '_strcspn.c'; then $(CYGPATH_W) '_strcspn.c'; else $(CYGPATH_W) '$(srcdir)/_strcspn.c'; fi`

libceo_a-_strlen.o: _strlen.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-_strlen.o `test -f '_strlen.c' || echo '$(srcdir)/'`_strlen.c

libceo_a-_strlen.obj: _strlen.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-_strlen.obj `if test -f '_strlen.c'; then $(CYGPATH_W) '_strlen.c'; else $(CYGPATH_W) '$(srcdir)/_strlen.c'; fi`

libceo_a-_strncat.o: _strncat.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-_strncat.o `test -f '_strncat.c' || echo '$(srcdir)/'`_strncat.c

libceo_a-_strncat.obj: _strncat.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-_strncat.obj `if test -f '_strncat.c'; then $(CYGPATH_W) '_strncat.c'; else $(CYGPATH_W) '$(srcdir)/_strncat.c'; fi`

libceo_a-_strncmp.o: _strncmp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-_strncmp.o `test -f '_strncmp.c' || echo '$(srcdir)/'`_strncmp.c

libceo_a-_strncmp.obj: _strncmp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-_strncmp.obj `if test -f '_strncmp.c'; then $(CYGPATH_W) '_strncmp.c'; else $(CYGPATH_W) '$(srcdir)/_strncmp.c'; fi`

libceo_a-_strncpy.o: _strncpy.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-_strncpy.o `test -f '_strncpy.c' || echo '$(srcdir)/'`_strncpy.c

libceo_a-_strncpy.obj: _strncpy.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-_strncpy.obj `if test -f '_strncpy.c'; then $(CYGPATH_W) '_strncpy.c'; else $(CYGPATH_W) '$(srcdir)/_strncpy.c'; fi`

libceo_a-_strpbrk.o: _strpbrk.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-_strpbrk.o `test -f '_strpbrk.c' || echo '$(srcdir)/'`_strpbrk.c

libceo_a-_strpbrk.obj: _strpbrk.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-_strpbrk.obj `if test -f '_strpbrk.c'; then $(CYGPATH_W) '_strpbrk.c'; else $(CYGPATH_W) '$(srcdir)/_strpbrk.c'; fi`

libceo_a-_strrchr.o: _strrchr.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-_strrchr.o `test -f '_strrchr.c' || echo '$(srcdir)/'`_strrchr.c

libceo_a-_strrchr.obj: _strrchr.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-_strrchr.obj `if test -f '_strrchr.c'; then $(CYGPATH_W) '_strrchr.c'; else $(CYGPATH_W) '$(srcdir)/_strrchr.c'; fi`

libceo_a-_strspn.o: _strspn.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-_strspn.o `test -f '_strspn.c' || echo '$(srcdir)/'`_strspn.c

libceo_a-_strspn.obj: _strspn.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-_strspn.obj `if test -f '_strspn.c'; then $(CYGPATH_W) '_strspn.c'; else $(CYGPATH_W) '$(srcdir)/_strspn.c'; fi`

libceo_a-_strstr.o: _strstr.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-_strstr.o `test -f '_strstr.c' || echo '$(srcdir)/'`_strstr.c

libceo_a-_strstr.obj: _strstr.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-_strstr.obj `if test -f '_strstr.c'; then $(CYGPATH_W) '_strstr.c'; else $(CYGPATH_W) '$(srcdir)/_strstr.c'; fi`

libceo_a-_strtok.o: _strtok.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-_strtok.o `test -f '_strtok.c' || echo '$(srcdir)/'`_strtok.c

libceo_a-_strtok.obj: _strtok.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-_strtok.obj `if test -f '_strtok.c'; then $(CYGPATH_W) '_strtok.c'; else $(CYGPATH_W) '$(srcdir)/_strtok.c'; fi`

libceo_a-strxfrm.o: strxfrm.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-strxfrm.o `test -f 'strxfrm.c' || echo '$(srcdir)/'`strxfrm.c

libceo_a-strxfrm.obj: strxfrm.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-strxfrm.obj `if test -f 'strxfrm.c'; then $(CYGPATH_W) 'strxfrm.c'; else $(CYGPATH_W) '$(srcdir)/strxfrm.c'; fi`

libceo_a-c16rtomb.o: c16rtomb.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-c16rtomb.o `test -f 'c16rtomb.c' || echo '$(srcdir)/'`c16rtomb.c

libceo_a-c16rtomb.obj: c16rtomb.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-c16rtomb.obj `if test -f 'c16rtomb.c'; then $(CYGPATH_W) 'c16rtomb.c'; else $(CYGPATH_W) '$(srcdir)/c16rtomb.c'; fi`

libceo_a-c16stombs.o: c16stombs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-c16stombs.o `test -f 'c16stombs.c' || echo '$(srcdir)/'`c16stombs.c

libceo_a-c16stombs.obj: c16stombs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-c16stombs.obj `if test -f 'c16stombs.c'; then $(CYGPATH_W) 'c16stombs.c'; else $(CYGPATH_W) '$(srcdir)/c16stombs.c'; fi`

libceo_a-c32rtomb.o: c32rtomb.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-c32rtomb.o `test -f 'c32rtomb.c' || echo '$(srcdir)/'`c32rtomb.c

libceo_a-c32rtomb.obj: c32rtomb.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-c32rtomb.obj `if test -f 'c32rtomb.c'; then $(CYGPATH_W) 'c32rtomb.c'; else $(CYGPATH_W) '$(srcdir)/c32rtomb.c'; fi`

libceo_a-mbrtoc16.o: mbrtoc16.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-mbrtoc16.o `test -f 'mbrtoc16.c' || echo '$(srcdir)/'`mbrtoc16.c

libceo_a-mbrtoc16.obj: mbrtoc16.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-mbrtoc16.obj `if test -f 'mbrtoc16.c'; then $(CYGPATH_W) 'mbrtoc16.c'; else $(CYGPATH_W) '$(srcdir)/mbrtoc16.c'; fi`

libceo_a-mbrtoc32.o: mbrtoc32.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-mbrtoc32.o `test -f 'mbrtoc32.c' || echo '$(srcdir)/'`mbrtoc32.c

libceo_a-mbrtoc32.obj: mbrtoc32.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-mbrtoc32.obj `if test -f 'mbrtoc32.c'; then $(CYGPATH_W) 'mbrtoc32.c'; else $(CYGPATH_W) '$(srcdir)/mbrtoc32.c'; fi`

libceo_a-mbstoc16s.o: mbstoc16s.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-mbstoc16s.o `test -f 'mbstoc16s.c' || echo '$(srcdir)/'`mbstoc16s.c

libceo_a-mbstoc16s.obj: mbstoc16s.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-mbstoc16s.obj `if test -f 'mbstoc16s.c'; then $(CYGPATH_W) 'mbstoc16s.c'; else $(CYGPATH_W) '$(srcdir)/mbstoc16s.c'; fi`

libceo_a-btowc.o: btowc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-btowc.o `test -f 'btowc.c' || echo '$(srcdir)/'`btowc.c

libceo_a-btowc.obj: btowc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-btowc.obj `if test -f 'btowc.c'; then $(CYGPATH_W) 'btowc.c'; else $(CYGPATH_W) '$(srcdir)/btowc.c'; fi`

libceo_a-mbrlen.o: mbrlen.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-mbrlen.o `test -f 'mbrlen.c' || echo '$(srcdir)/'`mbrlen.c

libceo_a-mbrlen.obj: mbrlen.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-mbrlen.obj `if test -f 'mbrlen.c'; then $(CYGPATH_W) 'mbrlen.c'; else $(CYGPATH_W) '$(srcdir)/mbrlen.c'; fi`

libceo_a-mbrtowc.o: mbrtowc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-mbrtowc.o `test -f 'mbrtowc.c' || echo '$(srcdir)/'`mbrtowc.c

libceo_a-mbrtowc.obj: mbrtowc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-mbrtowc.obj `if test -f 'mbrtowc.c'; then $(CYGPATH_W) 'mbrtowc.c'; else $(CYGPATH_W) '$(srcdir)/mbrtowc.c'; fi`

libceo_a-mbsinit.o: mbsinit.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-mbsinit.o `test -f 'mbsinit.c' || echo '$(srcdir)/'`mbsinit.c

libceo_a-mbsinit.obj: mbsinit.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-mbsinit.obj `if test -f 'mbsinit.c'; then $(CYGPATH_W) 'mbsinit.c'; else $(CYGPATH_W) '$(srcdir)/mbsinit.c'; fi`

libceo_a-wcrtomb.o: wcrtomb.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-wcrtomb.o `test -f 'wcrtomb.c' || echo '$(srcdir)/'`wcrtomb.c

libceo_a-wcrtomb.obj: wcrtomb.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-wcrtomb.obj `if test -f 'wcrtomb.c'; then $(CYGPATH_W) 'wcrtomb.c'; else $(CYGPATH_W) '$(srcdir)/wcrtomb.c'; fi`

libceo_a-wcscmp.o: wcscmp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-wcscmp.o `test -f 'wcscmp.c' || echo '$(srcdir)/'`wcscmp.c

libceo_a-wcscmp.obj: wcscmp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-wcscmp.obj `if test -f 'wcscmp.c'; then $(CYGPATH_W) 'wcscmp.c'; else $(CYGPATH_W) '$(srcdir)/wcscmp.c'; fi`

libceo_a-wcslen.o: wcslen.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-wcslen.o `test -f 'wcslen.c' || echo '$(srcdir)/'`wcslen.c

libceo_a-wcslen.obj: wcslen.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-wcslen.obj `if test -f 'wcslen.c'; then $(CYGPATH_W) 'wcslen.c'; else $(CYGPATH_W) '$(srcdir)/wcslen.c'; fi`

libceo_a-wctob.o: wctob.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-wctob.o `test -f 'wctob.c' || echo '$(srcdir)/'`wctob.c

libceo_a-wctob.obj: wctob.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceo_a_CFLAGS) $(CFLAGS) -c -o libceo_a-wctob.obj `if test -f 'wctob.c'; then $(CYGPATH_W) 'wctob.c'; else $(CYGPATH_W) '$(srcdir)/wctob.c'; fi`

libceox_a-__assert.o: __assert.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-__assert.o `test -f '__assert.c' || echo '$(srcdir)/'`__assert.c

libceox_a-__assert.obj: __assert.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-__assert.obj `if test -f '__assert.c'; then $(CYGPATH_W) '__assert.c'; else $(CYGPATH_W) '$(srcdir)/__assert.c'; fi`

libceox_a-isalnum.o: isalnum.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-isalnum.o `test -f 'isalnum.c' || echo '$(srcdir)/'`isalnum.c

libceox_a-isalnum.obj: isalnum.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-isalnum.obj `if test -f 'isalnum.c'; then $(CYGPATH_W) 'isalnum.c'; else $(CYGPATH_W) '$(srcdir)/isalnum.c'; fi`

libceox_a-isalpha.o: isalpha.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-isalpha.o `test -f 'isalpha.c' || echo '$(srcdir)/'`isalpha.c

libceox_a-isalpha.obj: isalpha.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-isalpha.obj `if test -f 'isalpha.c'; then $(CYGPATH_W) 'isalpha.c'; else $(CYGPATH_W) '$(srcdir)/isalpha.c'; fi`

libceox_a-isblank.o: isblank.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-isblank.o `test -f 'isblank.c' || echo '$(srcdir)/'`isblank.c

libceox_a-isblank.obj: isblank.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-isblank.obj `if test -f 'isblank.c'; then $(CYGPATH_W) 'isblank.c'; else $(CYGPATH_W) '$(srcdir)/isblank.c'; fi`

libceox_a-iscntrl.o: iscntrl.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-iscntrl.o `test -f 'iscntrl.c' || echo '$(srcdir)/'`iscntrl.c

libceox_a-iscntrl.obj: iscntrl.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-iscntrl.obj `if test -f 'iscntrl.c'; then $(CYGPATH_W) 'iscntrl.c'; else $(CYGPATH_W) '$(srcdir)/iscntrl.c'; fi`

libceox_a-isdigit.o: isdigit.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-isdigit.o `test -f 'isdigit.c' || echo '$(srcdir)/'`isdigit.c

libceox_a-isdigit.obj: isdigit.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-isdigit.obj `if test -f 'isdigit.c'; then $(CYGPATH_W) 'isdigit.c'; else $(CYGPATH_W) '$(srcdir)/isdigit.c'; fi`

libceox_a-isgraph.o: isgraph.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-isgraph.o `test -f 'isgraph.c' || echo '$(srcdir)/'`isgraph.c

libceox_a-isgraph.obj: isgraph.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-isgraph.obj `if test -f 'isgraph.c'; then $(CYGPATH_W) 'isgraph.c'; else $(CYGPATH_W) '$(srcdir)/isgraph.c'; fi`

libceox_a-islower.o: islower.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-islower.o `test -f 'islower.c' || echo '$(srcdir)/'`islower.c

libceox_a-islower.obj: islower.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-islower.obj `if test -f 'islower.c'; then $(CYGPATH_W) 'islower.c'; else $(CYGPATH_W) '$(srcdir)/islower.c'; fi`

libceox_a-isprint.o: isprint.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-isprint.o `test -f 'isprint.c' || echo '$(srcdir)/'`isprint.c

libceox_a-isprint.obj: isprint.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-isprint.obj `if test -f 'isprint.c'; then $(CYGPATH_W) 'isprint.c'; else $(CYGPATH_W) '$(srcdir)/isprint.c'; fi`

libceox_a-ispunct.o: ispunct.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-ispunct.o `test -f 'ispunct.c' || echo '$(srcdir)/'`ispunct.c

libceox_a-ispunct.obj: ispunct.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-ispunct.obj `if test -f 'ispunct.c'; then $(CYGPATH_W) 'ispunct.c'; else $(CYGPATH_W) '$(srcdir)/ispunct.c'; fi`

libceox_a-isspace.o: isspace.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-isspace.o `test -f 'isspace.c' || echo '$(srcdir)/'`isspace.c

libceox_a-isspace.obj: isspace.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-isspace.obj `if test -f 'isspace.c'; then $(CYGPATH_W) 'isspace.c'; else $(CYGPATH_W) '$(srcdir)/isspace.c'; fi`

libceox_a-isupper.o: isupper.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-isupper.o `test -f 'isupper.c' || echo '$(srcdir)/'`isupper.c

libceox_a-isupper.obj: isupper.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-isupper.obj `if test -f 'isupper.c'; then $(CYGPATH_W) 'isupper.c'; else $(CYGPATH_W) '$(srcdir)/isupper.c'; fi`

libceox_a-isxdigit.o: isxdigit.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-isxdigit.o `test -f 'isxdigit.c' || echo '$(srcdir)/'`isxdigit.c

libceox_a-isxdigit.obj: isxdigit.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-isxdigit.obj `if test -f 'isxdigit.c'; then $(CYGPATH_W) 'isxdigit.c'; else $(CYGPATH_W) '$(srcdir)/isxdigit.c'; fi`

libceox_a-tolower.o: tolower.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-tolower.o `test -f 'tolower.c' || echo '$(srcdir)/'`tolower.c

libceox_a-tolower.obj: tolower.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-tolower.obj `if test -f 'tolower.c'; then $(CYGPATH_W) 'tolower.c'; else $(CYGPATH_W) '$(srcdir)/tolower.c'; fi`

libceox_a-toupper.o: toupper.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-toupper.o `test -f 'toupper.c' || echo '$(srcdir)/'`toupper.c

libceox_a-toupper.obj: toupper.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-toupper.obj `if test -f 'toupper.c'; then $(CYGPATH_W) 'toupper.c'; else $(CYGPATH_W) '$(srcdir)/toupper.c'; fi`

libceox_a-errno.o: errno.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-errno.o `test -f 'errno.c' || echo '$(srcdir)/'`errno.c

libceox_a-errno.obj: errno.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-errno.obj `if test -f 'errno.c'; then $(CYGPATH_W) 'errno.c'; else $(CYGPATH_W) '$(srcdir)/errno.c'; fi`

libceox_a-fprintf.o: fprintf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-fprintf.o `test -f 'fprintf.c' || echo '$(srcdir)/'`fprintf.c

libceox_a-fprintf.obj: fprintf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-fprintf.obj `if test -f 'fprintf.c'; then $(CYGPATH_W) 'fprintf.c'; else $(CYGPATH_W) '$(srcdir)/fprintf.c'; fi`

libceox_a-fputc.o: fputc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-fputc.o `test -f 'fputc.c' || echo '$(srcdir)/'`fputc.c

libceox_a-fputc.obj: fputc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-fputc.obj `if test -f 'fputc.c'; then $(CYGPATH_W) 'fputc.c'; else $(CYGPATH_W) '$(srcdir)/fputc.c'; fi`

libceox_a-fputs.o: fputs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-fputs.o `test -f 'fputs.c' || echo '$(srcdir)/'`fputs.c

libceox_a-fputs.obj: fputs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-fputs.obj `if test -f 'fputs.c'; then $(CYGPATH_W) 'fputs.c'; else $(CYGPATH_W) '$(srcdir)/fputs.c'; fi`

libceox_a-getchar.o: getchar.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-getchar.o `test -f 'getchar.c' || echo '$(srcdir)/'`getchar.c

libceox_a-getchar.obj: getchar.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-getchar.obj `if test -f 'getchar.c'; then $(CYGPATH_W) 'getchar.c'; else $(CYGPATH_W) '$(srcdir)/getchar.c'; fi`

libceox_a-gets.o: gets.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-gets.o `test -f 'gets.c' || echo '$(srcdir)/'`gets.c

libceox_a-gets.obj: gets.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-gets.obj `if test -f 'gets.c'; then $(CYGPATH_W) 'gets.c'; else $(CYGPATH_W) '$(srcdir)/gets.c'; fi`

libceox_a-printf.o: printf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-printf.o `test -f 'printf.c' || echo '$(srcdir)/'`printf.c

libceox_a-printf.obj: printf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-printf.obj `if test -f 'printf.c'; then $(CYGPATH_W) 'printf.c'; else $(CYGPATH_W) '$(srcdir)/printf.c'; fi`

libceox_a-printfl.o: printfl.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-printfl.o `test -f 'printfl.c' || echo '$(srcdir)/'`printfl.c

libceox_a-printfl.obj: printfl.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-printfl.obj `if test -f 'printfl.c'; then $(CYGPATH_W) 'printfl.c'; else $(CYGPATH_W) '$(srcdir)/printfl.c'; fi`

libceox_a-putchar.o: putchar.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-putchar.o `test -f 'putchar.c' || echo '$(srcdir)/'`putchar.c

libceox_a-putchar.obj: putchar.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-putchar.obj `if test -f 'putchar.c'; then $(CYGPATH_W) 'putchar.c'; else $(CYGPATH_W) '$(srcdir)/putchar.c'; fi`

libceox_a-puts.o: puts.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-puts.o `test -f 'puts.c' || echo '$(srcdir)/'`puts.c

libceox_a-puts.obj: puts.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-puts.obj `if test -f 'puts.c'; then $(CYGPATH_W) 'puts.c'; else $(CYGPATH_W) '$(srcdir)/puts.c'; fi`

libceox_a-sprintf.o: sprintf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-sprintf.o `test -f 'sprintf.c' || echo '$(srcdir)/'`sprintf.c

libceox_a-sprintf.obj: sprintf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-sprintf.obj `if test -f 'sprintf.c'; then $(CYGPATH_W) 'sprintf.c'; else $(CYGPATH_W) '$(srcdir)/sprintf.c'; fi`

libceox_a-streams.o: streams.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-streams.o `test -f 'streams.c' || echo '$(srcdir)/'`streams.c

libceox_a-streams.obj: streams.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-streams.obj `if test -f 'streams.c'; then $(CYGPATH_W) 'streams.c'; else $(CYGPATH_W) '$(srcdir)/streams.c'; fi`

libceox_a-strmgpsim.o: strmgpsim.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-strmgpsim.o `test -f 'strmgpsim.c' || echo '$(srcdir)/'`strmgpsim.c

libceox_a-strmgpsim.obj: strmgpsim.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-strmgpsim.obj `if test -f 'strmgpsim.c'; then $(CYGPATH_W) 'strmgpsim.c'; else $(CYGPATH_W) '$(srcdir)/strmgpsim.c'; fi`

libceox_a-strmmssp.o: strmmssp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-strmmssp.o `test -f 'strmmssp.c' || echo '$(srcdir)/'`strmmssp.c

libceox_a-strmmssp.obj: strmmssp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-strmmssp.obj `if test -f 'strmmssp.c'; then $(CYGPATH_W) 'strmmssp.c'; else $(CYGPATH_W) '$(srcdir)/strmmssp.c'; fi`

libceox_a-strmusart.o: strmusart.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-strmusart.o `test -f 'strmusart.c' || echo '$(srcdir)/'`strmusart.c

libceox_a-strmusart.obj: strmusart.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-strmusart.obj `if test -f 'strmusart.c'; then $(CYGPATH_W) 'strmusart.c'; else $(CYGPATH_W) '$(srcdir)/strmusart.c'; fi`

libceox_a-vfprintf.o: vfprintf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-vfprintf.o `test -f 'vfprintf.c' || echo '$(srcdir)/'`vfprintf.c

libceox_a-vfprintf.obj: vfprintf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-vfprintf.obj `if test -f 'vfprintf.c'; then $(CYGPATH_W) 'vfprintf.c'; else $(CYGPATH_W) '$(srcdir)/vfprintf.c'; fi`

libceox_a-vprintf.o: vprintf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-vprintf.o `test -f 'vprintf.c' || echo '$(srcdir)/'`vprintf.c

libceox_a-vprintf.obj: vprintf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-vprintf.obj `if test -f 'vprintf.c'; then $(CYGPATH_W) 'vprintf.c'; else $(CYGPATH_W) '$(srcdir)/vprintf.c'; fi`

libceox_a-vsprintf.o: vsprintf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-vsprintf.o `test -f 'vsprintf.c' || echo '$(srcdir)/'`vsprintf.c

libceox_a-vsprintf.obj: vsprintf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-vsprintf.obj `if test -f 'vsprintf.c'; then $(CYGPATH_W) 'vsprintf.c'; else $(CYGPATH_W) '$(srcdir)/vsprintf.c'; fi`

libceox_a-_atof.o: _atof.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-_atof.o `test -f '_atof.c' || echo '$(srcdir)/'`_atof.c

libceox_a-_atof.obj: _atof.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-_atof.obj `if test -f '_atof.c'; then $(CYGPATH_W) '_atof.c'; else $(CYGPATH_W) '$(srcdir)/_atof.c'; fi`

libceox_a-_ftoa.o: _ftoa.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-_ftoa.o `test -f '_ftoa.c' || echo '$(srcdir)/'`_ftoa.c

libceox_a-_ftoa.obj: _ftoa.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-_ftoa.obj `if test -f '_ftoa.c'; then $(CYGPATH_W) '_ftoa.c'; else $(CYGPATH_W) '$(srcdir)/_ftoa.c'; fi`

libceox_a-__itoa.o: __itoa.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-__itoa.o `test -f '__itoa.c' || echo '$(srcdir)/'`__itoa.c

libceox_a-__itoa.obj: __itoa.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-__itoa.obj `if test -f '__itoa.c'; then $(CYGPATH_W) '__itoa.c'; else $(CYGPATH_W) '$(srcdir)/__itoa.c'; fi`

libceox_a-__ltoa.o: __ltoa.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-__ltoa.o `test -f '__ltoa.c' || echo '$(srcdir)/'`__ltoa.c

libceox_a-__ltoa.obj: __ltoa.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-__ltoa.obj `if test -f '__ltoa.c'; then $(CYGPATH_W) '__ltoa.c'; else $(CYGPATH_W) '$(srcdir)/__ltoa.c'; fi`

libceox_a-abs.o: abs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-abs.o `test -f 'abs.c' || echo '$(srcdir)/'`abs.c

libceox_a-abs.obj: abs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-abs.obj `if test -f 'abs.c'; then $(CYGPATH_W) 'abs.c'; else $(CYGPATH_W) '$(srcdir)/abs.c'; fi`

libceox_a-aligned_alloc.o: aligned_alloc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-aligned_alloc.o `test -f 'aligned_alloc.c' || echo '$(srcdir)/'`aligned_alloc.c

libceox_a-aligned_alloc.obj: aligned_alloc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-aligned_alloc.obj `if test -f 'aligned_alloc.c'; then $(CYGPATH_W) 'aligned_alloc.c'; else $(CYGPATH_W) '$(srcdir)/aligned_alloc.c'; fi`

libceox_a-atoi.o: atoi.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-atoi.o `test -f 'atoi.c' || echo '$(srcdir)/'`atoi.c

libceox_a-atoi.obj: atoi.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-atoi.obj `if test -f 'atoi.c'; then $(CYGPATH_W) 'atoi.c'; else $(CYGPATH_W) '$(srcdir)/atoi.c'; fi`

libceox_a-atol.o: atol.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-atol.o `test -f 'atol.c' || echo '$(srcdir)/'`atol.c

libceox_a-atol.obj: atol.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-atol.obj `if test -f 'atol.c'; then $(CYGPATH_W) 'atol.c'; else $(CYGPATH_W) '$(srcdir)/atol.c'; fi`

libceox_a-bsearch.o: bsearch.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-bsearch.o `test -f 'bsearch.c' || echo '$(srcdir)/'`bsearch.c

libceox_a-bsearch.obj: bsearch.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-bsearch.obj `if test -f 'bsearch.c'; then $(CYGPATH_W) 'bsearch.c'; else $(CYGPATH_W) '$(srcdir)/bsearch.c'; fi`

libceox_a-_calloc.o: _calloc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-_calloc.o `test -f '_calloc.c' || echo '$(srcdir)/'`_calloc.c

libceox_a-_calloc.obj: _calloc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-_calloc.obj `if test -f '_calloc.c'; then $(CYGPATH_W) '_calloc.c'; else $(CYGPATH_W) '$(srcdir)/_calloc.c'; fi`

libceox_a-free.o: free.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-free.o `test -f 'free.c' || echo '$(srcdir)/'`free.c

libceox_a-free.obj: free.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-free.obj `if test -f 'free.c'; then $(CYGPATH_W) 'free.c'; else $(CYGPATH_W) '$(srcdir)/free.c'; fi`

libceox_a-labs.o: labs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-labs.o `test -f 'labs.c' || echo '$(srcdir)/'`labs.c

libceox_a-labs.obj: labs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-labs.obj `if test -f 'labs.c'; then $(CYGPATH_W) 'labs.c'; else $(CYGPATH_W) '$(srcdir)/labs.c'; fi`

libceox_a-malloc.o: malloc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-malloc.o `test -f 'malloc.c' || echo '$(srcdir)/'`malloc.c

libceox_a-malloc.obj: malloc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-malloc.obj `if test -f 'malloc.c'; then $(CYGPATH_W) 'malloc.c'; else $(CYGPATH_W) '$(srcdir)/malloc.c'; fi`

libceox_a-mblen.o: mblen.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-mblen.o `test -f 'mblen.c' || echo '$(srcdir)/'`mblen.c

libceox_a-mblen.obj: mblen.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-mblen.obj `if test -f 'mblen.c'; then $(CYGPATH_W) 'mblen.c'; else $(CYGPATH_W) '$(srcdir)/mblen.c'; fi`

libceox_a-mbstowcs.o: mbstowcs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-mbstowcs.o `test -f 'mbstowcs.c' || echo '$(srcdir)/'`mbstowcs.c

libceox_a-mbstowcs.obj: mbstowcs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-mbstowcs.obj `if test -f 'mbstowcs.c'; then $(CYGPATH_W) 'mbstowcs.c'; else $(CYGPATH_W) '$(srcdir)/mbstowcs.c'; fi`

libceox_a-mbtowc.o: mbtowc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-mbtowc.o `test -f 'mbtowc.c' || echo '$(srcdir)/'`mbtowc.c

libceox_a-mbtowc.obj: mbtowc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-mbtowc.obj `if test -f 'mbtowc.c'; then $(CYGPATH_W) 'mbtowc.c'; else $(CYGPATH_W) '$(srcdir)/mbtowc.c'; fi`

libceox_a-memfree.o: memfree.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-memfree.o `test -f 'memfree.c' || echo '$(srcdir)/'`memfree.c

libceox_a-memfree.obj: memfree.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-memfree.obj `if test -f 'memfree.c'; then $(CYGPATH_W) 'memfree.c'; else $(CYGPATH_W) '$(srcdir)/memfree.c'; fi`

libceox_a-memfreemax.o: memfreemax.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-memfreemax.o `test -f 'memfreemax.c' || echo '$(srcdir)/'`memfreemax.c

libceox_a-memfreemax.obj: memfreemax.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-memfreemax.obj `if test -f 'memfreemax.c'; then $(CYGPATH_W) 'memfreemax.c'; else $(CYGPATH_W) '$(srcdir)/memfreemax.c'; fi`

libceox_a-memmisc.o: memmisc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-memmisc.o `test -f 'memmisc.c' || echo '$(srcdir)/'`memmisc.c

libceox_a-memmisc.obj: memmisc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-memmisc.obj `if test -f 'memmisc.c'; then $(CYGPATH_W) 'memmisc.c'; else $(CYGPATH_W) '$(srcdir)/memmisc.c'; fi`

libceox_a-qsort.o: qsort.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-qsort.o `test -f 'qsort.c' || echo '$(srcdir)/'`qsort.c

libceox_a-qsort.obj: qsort.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-qsort.obj `if test -f 'qsort.c'; then $(CYGPATH_W) 'qsort.c'; else $(CYGPATH_W) '$(srcdir)/qsort.c'; fi`

libceox_a-rand.o: rand.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-rand.o `test -f 'rand.c' || echo '$(srcdir)/'`rand.c

libceox_a-rand.obj: rand.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-rand.obj `if test -f 'rand.c'; then $(CYGPATH_W) 'rand.c'; else $(CYGPATH_W) '$(srcdir)/rand.c'; fi`

libceox_a-realloc.o: realloc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-realloc.o `test -f 'realloc.c' || echo '$(srcdir)/'`realloc.c

libceox_a-realloc.obj: realloc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-realloc.obj `if test -f 'realloc.c'; then $(CYGPATH_W) 'realloc.c'; else $(CYGPATH_W) '$(srcdir)/realloc.c'; fi`

libceox_a-strtol.o: strtol.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-strtol.o `test -f 'strtol.c' || echo '$(srcdir)/'`strtol.c

libceox_a-strtol.obj: strtol.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-strtol.obj `if test -f 'strtol.c'; then $(CYGPATH_W) 'strtol.c'; else $(CYGPATH_W) '$(srcdir)/strtol.c'; fi`

libceox_a-strtoul.o: strtoul.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-strtoul.o `test -f 'strtoul.c' || echo '$(srcdir)/'`strtoul.c

libceox_a-strtoul.obj: strtoul.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-strtoul.obj `if test -f 'strtoul.c'; then $(CYGPATH_W) 'strtoul.c'; else $(CYGPATH_W) '$(srcdir)/strtoul.c'; fi`

libceox_a-wcstombs.o: wcstombs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-wcstombs.o `test -f 'wcstombs.c' || echo '$(srcdir)/'`wcstombs.c

libceox_a-wcstombs.obj: wcstombs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-wcstombs.obj `if test -f 'wcstombs.c'; then $(CYGPATH_W) 'wcstombs.c'; else $(CYGPATH_W) '$(srcdir)/wcstombs.c'; fi`

libceox_a-wctomb.o: wctomb.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-wctomb.o `test -f 'wctomb.c' || echo '$(srcdir)/'`wctomb.c

libceox_a-wctomb.obj: wctomb.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-wctomb.obj `if test -f 'wctomb.c'; then $(CYGPATH_W) 'wctomb.c'; else $(CYGPATH_W) '$(srcdir)/wctomb.c'; fi`

libceox_a-_memchr.o: _memchr.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-_memchr.o `test -f '_memchr.c' || echo '$(srcdir)/'`_memchr.c

libceox_a-_memchr.obj: _memchr.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-_memchr.obj `if test -f '_memchr.c'; then $(CYGPATH_W) '_memchr.c'; else $(CYGPATH_W) '$(srcdir)/_memchr.c'; fi`

libceox_a-_memcmp.o: _memcmp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-_memcmp.o `test -f '_memcmp.c' || echo '$(srcdir)/'`_memcmp.c

libceox_a-_memcmp.obj: _memcmp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-_memcmp.obj `if test -f '_memcmp.c'; then $(CYGPATH_W) '_memcmp.c'; else $(CYGPATH_W) '$(srcdir)/_memcmp.c'; fi`

libceox_a-__memcpy.o: __memcpy.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-__memcpy.o `test -f '__memcpy.c' || echo '$(srcdir)/'`__memcpy.c

libceox_a-__memcpy.obj: __memcpy.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-__memcpy.obj `if test -f '__memcpy.c'; then $(CYGPATH_W) '__memcpy.c'; else $(CYGPATH_W) '$(srcdir)/__memcpy.c'; fi`

libceox_a-memcpy.o: memcpy.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-memcpy.o `test -f 'memcpy.c' || echo '$(srcdir)/'`memcpy.c

libceox_a-memcpy.obj: memcpy.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-memcpy.obj `if test -f 'memcpy.c'; then $(CYGPATH_W) 'memcpy.c'; else $(CYGPATH_W) '$(srcdir)/memcpy.c'; fi`

libceox_a-_memmove.o: _memmove.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-_memmove.o `test -f '_memmove.c' || echo '$(srcdir)/'`_memmove.c

libceox_a-_memmove.obj: _memmove.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-_memmove.obj `if test -f '_memmove.c'; then $(CYGPATH_W) '_memmove.c'; else $(CYGPATH_W) '$(srcdir)/_memmove.c'; fi`

libceox_a-_memset.o: _memset.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-_memset.o `test -f '_memset.c' || echo '$(srcdir)/'`_memset.c

libceox_a-_memset.obj: _memset.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-_memset.obj `if test -f '_memset.c'; then $(CYGPATH_W) '_memset.c'; else $(CYGPATH_W) '$(srcdir)/_memset.c'; fi`

libceox_a-_strcat.o: _strcat.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-_strcat.o `test -f '_strcat.c' || echo '$(srcdir)/'`_strcat.c

libceox_a-_strcat.obj: _strcat.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-_strcat.obj `if test -f '_strcat.c'; then $(CYGPATH_W) '_strcat.c'; else $(CYGPATH_W) '$(srcdir)/_strcat.c'; fi`

libceox_a-_strchr.o: _strchr.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-_strchr.o `test -f '_strchr.c' || echo '$(srcdir)/'`_strchr.c

libceox_a-_strchr.obj: _strchr.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-_strchr.obj `if test -f '_strchr.c'; then $(CYGPATH_W) '_strchr.c'; else $(CYGPATH_W) '$(srcdir)/_strchr.c'; fi`

libceox_a-_strcmp.o: _strcmp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-_strcmp.o `test -f '_strcmp.c' || echo '$(srcdir)/'`_strcmp.c

libceox_a-_strcmp.obj: _strcmp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-_strcmp.obj `if test -f '_strcmp.c'; then $(CYGPATH_W) '_strcmp.c'; else $(CYGPATH_W) '$(srcdir)/_strcmp.c'; fi`

libceox_a-_strcpy.o: _strcpy.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-_strcpy.o `test -f '_strcpy.c' || echo '$(srcdir)/'`_strcpy.c

libceox_a-_strcpy.obj: _strcpy.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-_strcpy.obj `if test -f '_strcpy.c'; then $(CYGPATH_W) '_strcpy.c'; else $(CYGPATH_W) '$(srcdir)/_strcpy.c'; fi`

libceox_a-_strcspn.o: _strcspn.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-_strcspn.o `test -f '_strcspn.c' || echo '$(srcdir)/'`_strcspn.c

libceox_a-_strcspn.obj: _strcspn.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-_strcspn.obj `if test -f '_strcspn.c'; then $(CYGPATH_W) '_strcspn.c'; else $(CYGPATH_W) '$(srcdir)/_strcspn.c'; fi`

libceox_a-_strlen.o: _strlen.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-_strlen.o `test -f '_strlen.c' || echo '$(srcdir)/'`_strlen.c

libceox_a-_strlen.obj: _strlen.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-_strlen.obj `if test -f '_strlen.c'; then $(CYGPATH_W) '_strlen.c'; else $(CYGPATH_W) '$(srcdir)/_strlen.c'; fi`

libceox_a-_strncat.o: _strncat.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-_strncat.o `test -f '_strncat.c' || echo '$(srcdir)/'`_strncat.c

libceox_a-_strncat.obj: _strncat.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-_strncat.obj `if test -f '_strncat.c'; then $(CYGPATH_W) '_strncat.c'; else $(CYGPATH_W) '$(srcdir)/_strncat.c'; fi`

libceox_a-_strncmp.o: _strncmp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-_strncmp.o `test -f '_strncmp.c' || echo '$(srcdir)/'`_strncmp.c

libceox_a-_strncmp.obj: _strncmp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-_strncmp.obj `if test -f '_strncmp.c'; then $(CYGPATH_W) '_strncmp.c'; else $(CYGPATH_W) '$(srcdir)/_strncmp.c'; fi`

libceox_a-_strncpy.o: _strncpy.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-_strncpy.o `test -f '_strncpy.c' || echo '$(srcdir)/'`_strncpy.c

libceox_a-_strncpy.obj: _strncpy.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-_strncpy.obj `if test -f '_strncpy.c'; then $(CYGPATH_W) '_strncpy.c'; else $(CYGPATH_W) '$(srcdir)/_strncpy.c'; fi`

libceox_a-_strpbrk.o: _strpbrk.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-_strpbrk.o `test -f '_strpbrk.c' || echo '$(srcdir)/'`_strpbrk.c

libceox_a-_strpbrk.obj: _strpbrk.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-_strpbrk.obj `if test -f '_strpbrk.c'; then $(CYGPATH_W) '_strpbrk.c'; else $(CYGPATH_W) '$(srcdir)/_strpbrk.c'; fi`

libceox_a-_strrchr.o: _strrchr.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-_strrchr.o `test -f '_strrchr.c' || echo '$(srcdir)/'`_strrchr.c

libceox_a-_strrchr.obj: _strrchr.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-_strrchr.obj `if test -f '_strrchr.c'; then $(CYGPATH_W) '_strrchr.c'; else $(CYGPATH_W) '$(srcdir)/_strrchr.c'; fi`

libceox_a-_strspn.o: _strspn.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-_strspn.o `test -f '_strspn.c' || echo '$(srcdir)/'`_strspn.c

libceox_a-_strspn.obj: _strspn.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-_strspn.obj `if test -f '_strspn.c'; then $(CYGPATH_W) '_strspn.c'; else $(CYGPATH_W) '$(srcdir)/_strspn.c'; fi`

libceox_a-_strstr.o: _strstr.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-_strstr.o `test -f '_strstr.c' || echo '$(srcdir)/'`_strstr.c

libceox_a-_strstr.obj: _strstr.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-_strstr.obj `if test -f '_strstr.c'; then $(CYGPATH_W) '_strstr.c'; else $(CYGPATH_W) '$(srcdir)/_strstr.c'; fi`

libceox_a-_strtok.o: _strtok.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-_strtok.o `test -f '_strtok.c' || echo '$(srcdir)/'`_strtok.c

libceox_a-_strtok.obj: _strtok.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-_strtok.obj `if test -f '_strtok.c'; then $(CYGPATH_W) '_strtok.c'; else $(CYGPATH_W) '$(srcdir)/_strtok.c'; fi`

libceox_a-strxfrm.o: strxfrm.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-strxfrm.o `test -f 'strxfrm.c' || echo '$(srcdir)/'`strxfrm.c

libceox_a-strxfrm.obj: strxfrm.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-strxfrm.obj `if test -f 'strxfrm.c'; then $(CYGPATH_W) 'strxfrm.c'; else $(CYGPATH_W) '$(srcdir)/strxfrm.c'; fi`

libceox_a-c16rtomb.o: c16rtomb.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-c16rtomb.o `test -f 'c16rtomb.c' || echo '$(srcdir)/'`c16rtomb.c

libceox_a-c16rtomb.obj: c16rtomb.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-c16rtomb.obj `if test -f 'c16rtomb.c'; then $(CYGPATH_W) 'c16rtomb.c'; else $(CYGPATH_W) '$(srcdir)/c16rtomb.c'; fi`

libceox_a-c16stombs.o: c16stombs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-c16stombs.o `test -f 'c16stombs.c' || echo '$(srcdir)/'`c16stombs.c

libceox_a-c16stombs.obj: c16stombs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-c16stombs.obj `if test -f 'c16stombs.c'; then $(CYGPATH_W) 'c16stombs.c'; else $(CYGPATH_W) '$(srcdir)/c16stombs.c'; fi`

libceox_a-c32rtomb.o: c32rtomb.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-c32rtomb.o `test -f 'c32rtomb.c' || echo '$(srcdir)/'`c32rtomb.c

libceox_a-c32rtomb.obj: c32rtomb.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-c32rtomb.obj `if test -f 'c32rtomb.c'; then $(CYGPATH_W) 'c32rtomb.c'; else $(CYGPATH_W) '$(srcdir)/c32rtomb.c'; fi`

libceox_a-mbrtoc16.o: mbrtoc16.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-mbrtoc16.o `test -f 'mbrtoc16.c' || echo '$(srcdir)/'`mbrtoc16.c

libceox_a-mbrtoc16.obj: mbrtoc16.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-mbrtoc16.obj `if test -f 'mbrtoc16.c'; then $(CYGPATH_W) 'mbrtoc16.c'; else $(CYGPATH_W) '$(srcdir)/mbrtoc16.c'; fi`

libceox_a-mbrtoc32.o: mbrtoc32.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-mbrtoc32.o `test -f 'mbrtoc32.c' || echo '$(srcdir)/'`mbrtoc32.c

libceox_a-mbrtoc32.obj: mbrtoc32.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-mbrtoc32.obj `if test -f 'mbrtoc32.c'; then $(CYGPATH_W) 'mbrtoc32.c'; else $(CYGPATH_W) '$(srcdir)/mbrtoc32.c'; fi`

libceox_a-mbstoc16s.o: mbstoc16s.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-mbstoc16s.o `test -f 'mbstoc16s.c' || echo '$(srcdir)/'`mbstoc16s.c

libceox_a-mbstoc16s.obj: mbstoc16s.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-mbstoc16s.obj `if test -f 'mbstoc16s.c'; then $(CYGPATH_W) 'mbstoc16s.c'; else $(CYGPATH_W) '$(srcdir)/mbstoc16s.c'; fi`

libceox_a-btowc.o: btowc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-btowc.o `test -f 'btowc.c' || echo '$(srcdir)/'`btowc.c

libceox_a-btowc.obj: btowc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-btowc.obj `if test -f 'btowc.c'; then $(CYGPATH_W) 'btowc.c'; else $(CYGPATH_W) '$(srcdir)/btowc.c'; fi`

libceox_a-mbrlen.o: mbrlen.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-mbrlen.o `test -f 'mbrlen.c' || echo '$(srcdir)/'`mbrlen.c

libceox_a-mbrlen.obj: mbrlen.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-mbrlen.obj `if test -f 'mbrlen.c'; then $(CYGPATH_W) 'mbrlen.c'; else $(CYGPATH_W) '$(srcdir)/mbrlen.c'; fi`

libceox_a-mbrtowc.o: mbrtowc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-mbrtowc.o `test -f 'mbrtowc.c' || echo '$(srcdir)/'`mbrtowc.c

libceox_a-mbrtowc.obj: mbrtowc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-mbrtowc.obj `if test -f 'mbrtowc.c'; then $(CYGPATH_W) 'mbrtowc.c'; else $(CYGPATH_W) '$(srcdir)/mbrtowc.c'; fi`

libceox_a-mbsinit.o: mbsinit.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-mbsinit.o `test -f 'mbsinit.c' || echo '$(srcdir)/'`mbsinit.c

libceox_a-mbsinit.obj: mbsinit.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-mbsinit.obj `if test -f 'mbsinit.c'; then $(CYGPATH_W) 'mbsinit.c'; else $(CYGPATH_W) '$(srcdir)/mbsinit.c'; fi`

libceox_a-wcrtomb.o: wcrtomb.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-wcrtomb.o `test -f 'wcrtomb.c' || echo '$(srcdir)/'`wcrtomb.c

libceox_a-wcrtomb.obj: wcrtomb.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-wcrtomb.obj `if test -f 'wcrtomb.c'; then $(CYGPATH_W) 'wcrtomb.c'; else $(CYGPATH_W) '$(srcdir)/wcrtomb.c'; fi`

libceox_a-wcscmp.o: wcscmp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-wcscmp.o `test -f 'wcscmp.c' || echo '$(srcdir)/'`wcscmp.c

libceox_a-wcscmp.obj: wcscmp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-wcscmp.obj `if test -f 'wcscmp.c'; then $(CYGPATH_W) 'wcscmp.c'; else $(CYGPATH_W) '$(srcdir)/wcscmp.c'; fi`

libceox_a-wcslen.o: wcslen.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-wcslen.o `test -f 'wcslen.c' || echo '$(srcdir)/'`wcslen.c

libceox_a-wcslen.obj: wcslen.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-wcslen.obj `if test -f 'wcslen.c'; then $(CYGPATH_W) 'wcslen.c'; else $(CYGPATH_W) '$(srcdir)/wcslen.c'; fi`

libceox_a-wctob.o: wctob.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-wctob.o `test -f 'wctob.c' || echo '$(srcdir)/'`wctob.c

libceox_a-wctob.obj: wctob.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libceox_a_CFLAGS) $(CFLAGS) -c -o libceox_a-wctob.obj `if test -f 'wctob.c'; then $(CYGPATH_W) 'wctob.c'; else $(CYGPATH_W) '$(srcdir)/wctob.c'; fi`

libcex_a-__assert.o: __assert.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-__assert.o `test -f '__assert.c' || echo '$(srcdir)/'`__assert.c

libcex_a-__assert.obj: __assert.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-__assert.obj `if test -f '__assert.c'; then $(CYGPATH_W) '__assert.c'; else $(CYGPATH_W) '$(srcdir)/__assert.c'; fi`

libcex_a-isalnum.o: isalnum.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-isalnum.o `test -f 'isalnum.c' || echo '$(srcdir)/'`isalnum.c

libcex_a-isalnum.obj: isalnum.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-isalnum.obj `if test -f 'isalnum.c'; then $(CYGPATH_W) 'isalnum.c'; else $(CYGPATH_W) '$(srcdir)/isalnum.c'; fi`

libcex_a-isalpha.o: isalpha.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-isalpha.o `test -f 'isalpha.c' || echo '$(srcdir)/'`isalpha.c

libcex_a-isalpha.obj: isalpha.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-isalpha.obj `if test -f 'isalpha.c'; then $(CYGPATH_W) 'isalpha.c'; else $(CYGPATH_W) '$(srcdir)/isalpha.c'; fi`

libcex_a-isblank.o: isblank.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-isblank.o `test -f 'isblank.c' || echo '$(srcdir)/'`isblank.c

libcex_a-isblank.obj: isblank.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-isblank.obj `if test -f 'isblank.c'; then $(CYGPATH_W) 'isblank.c'; else $(CYGPATH_W) '$(srcdir)/isblank.c'; fi`

libcex_a-iscntrl.o: iscntrl.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-iscntrl.o `test -f 'iscntrl.c' || echo '$(srcdir)/'`iscntrl.c

libcex_a-iscntrl.obj: iscntrl.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-iscntrl.obj `if test -f 'iscntrl.c'; then $(CYGPATH_W) 'iscntrl.c'; else $(CYGPATH_W) '$(srcdir)/iscntrl.c'; fi`

libcex_a-isdigit.o: isdigit.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-isdigit.o `test -f 'isdigit.c' || echo '$(srcdir)/'`isdigit.c

libcex_a-isdigit.obj: isdigit.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-isdigit.obj `if test -f 'isdigit.c'; then $(CYGPATH_W) 'isdigit.c'; else $(CYGPATH_W) '$(srcdir)/isdigit.c'; fi`

libcex_a-isgraph.o: isgraph.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-isgraph.o `test -f 'isgraph.c' || echo '$(srcdir)/'`isgraph.c

libcex_a-isgraph.obj: isgraph.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-isgraph.obj `if test -f 'isgraph.c'; then $(CYGPATH_W) 'isgraph.c'; else $(CYGPATH_W) '$(srcdir)/isgraph.c'; fi`

libcex_a-islower.o: islower.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-islower.o `test -f 'islower.c' || echo '$(srcdir)/'`islower.c

libcex_a-islower.obj: islower.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-islower.obj `if test -f 'islower.c'; then $(CYGPATH_W) 'islower.c'; else $(CYGPATH_W) '$(srcdir)/islower.c'; fi`

libcex_a-isprint.o: isprint.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-isprint.o `test -f 'isprint.c' || echo '$(srcdir)/'`isprint.c

libcex_a-isprint.obj: isprint.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-isprint.obj `if test -f 'isprint.c'; then $(CYGPATH_W) 'isprint.c'; else $(CYGPATH_W) '$(srcdir)/isprint.c'; fi`

libcex_a-ispunct.o: ispunct.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-ispunct.o `test -f 'ispunct.c' || echo '$(srcdir)/'`ispunct.c

libcex_a-ispunct.obj: ispunct.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-ispunct.obj `if test -f 'ispunct.c'; then $(CYGPATH_W) 'ispunct.c'; else $(CYGPATH_W) '$(srcdir)/ispunct.c'; fi`

libcex_a-isspace.o: isspace.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-isspace.o `test -f 'isspace.c' || echo '$(srcdir)/'`isspace.c

libcex_a-isspace.obj: isspace.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-isspace.obj `if test -f 'isspace.c'; then $(CYGPATH_W) 'isspace.c'; else $(CYGPATH_W) '$(srcdir)/isspace.c'; fi`

libcex_a-isupper.o: isupper.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-isupper.o `test -f 'isupper.c' || echo '$(srcdir)/'`isupper.c

libcex_a-isupper.obj: isupper.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-isupper.obj `if test -f 'isupper.c'; then $(CYGPATH_W) 'isupper.c'; else $(CYGPATH_W) '$(srcdir)/isupper.c'; fi`

libcex_a-isxdigit.o: isxdigit.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-isxdigit.o `test -f 'isxdigit.c' || echo '$(srcdir)/'`isxdigit.c

libcex_a-isxdigit.obj: isxdigit.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-isxdigit.obj `if test -f 'isxdigit.c'; then $(CYGPATH_W) 'isxdigit.c'; else $(CYGPATH_W) '$(srcdir)/isxdigit.c'; fi`

libcex_a-tolower.o: tolower.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-tolower.o `test -f 'tolower.c' || echo '$(srcdir)/'`tolower.c

libcex_a-tolower.obj: tolower.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-tolower.obj `if test -f 'tolower.c'; then $(CYGPATH_W) 'tolower.c'; else $(CYGPATH_W) '$(srcdir)/tolower.c'; fi`

libcex_a-toupper.o: toupper.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-toupper.o `test -f 'toupper.c' || echo '$(srcdir)/'`toupper.c

libcex_a-toupper.obj: toupper.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-toupper.obj `if test -f 'toupper.c'; then $(CYGPATH_W) 'toupper.c'; else $(CYGPATH_W) '$(srcdir)/toupper.c'; fi`

libcex_a-errno.o: errno.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-errno.o `test -f 'errno.c' || echo '$(srcdir)/'`errno.c

libcex_a-errno.obj: errno.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-errno.obj `if test -f 'errno.c'; then $(CYGPATH_W) 'errno.c'; else $(CYGPATH_W) '$(srcdir)/errno.c'; fi`

libcex_a-fprintf.o: fprintf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-fprintf.o `test -f 'fprintf.c' || echo '$(srcdir)/'`fprintf.c

libcex_a-fprintf.obj: fprintf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-fprintf.obj `if test -f 'fprintf.c'; then $(CYGPATH_W) 'fprintf.c'; else $(CYGPATH_W) '$(srcdir)/fprintf.c'; fi`

libcex_a-fputc.o: fputc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-fputc.o `test -f 'fputc.c' || echo '$(srcdir)/'`fputc.c

libcex_a-fputc.obj: fputc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-fputc.obj `if test -f 'fputc.c'; then $(CYGPATH_W) 'fputc.c'; else $(CYGPATH_W) '$(srcdir)/fputc.c'; fi`

libcex_a-fputs.o: fputs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-fputs.o `test -f 'fputs.c' || echo '$(srcdir)/'`fputs.c

libcex_a-fputs.obj: fputs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-fputs.obj `if test -f 'fputs.c'; then $(CYGPATH_W) 'fputs.c'; else $(CYGPATH_W) '$(srcdir)/fputs.c'; fi`

libcex_a-getchar.o: getchar.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-getchar.o `test -f 'getchar.c' || echo '$(srcdir)/'`getchar.c

libcex_a-getchar.obj: getchar.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-getchar.obj `if test -f 'getchar.c'; then $(CYGPATH_W) 'getchar.c'; else $(CYGPATH_W) '$(srcdir)/getchar.c'; fi`

libcex_a-gets.o: gets.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-gets.o `test -f 'gets.c' || echo '$(srcdir)/'`gets.c

libcex_a-gets.obj: gets.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-gets.obj `if test -f 'gets.c'; then $(CYGPATH_W) 'gets.c'; else $(CYGPATH_W) '$(srcdir)/gets.c'; fi`

libcex_a-printf.o: printf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-printf.o `test -f 'printf.c' || echo '$(srcdir)/'`printf.c

libcex_a-printf.obj: printf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-printf.obj `if test -f 'printf.c'; then $(CYGPATH_W) 'printf.c'; else $(CYGPATH_W) '$(srcdir)/printf.c'; fi`

libcex_a-printfl.o: printfl.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-printfl.o `test -f 'printfl.c' || echo '$(srcdir)/'`printfl.c

libcex_a-printfl.obj: printfl.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-printfl.obj `if test -f 'printfl.c'; then $(CYGPATH_W) 'printfl.c'; else $(CYGPATH_W) '$(srcdir)/printfl.c'; fi`

libcex_a-putchar.o: putchar.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-putchar.o `test -f 'putchar.c' || echo '$(srcdir)/'`putchar.c

libcex_a-putchar.obj: putchar.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-putchar.obj `if test -f 'putchar.c'; then $(CYGPATH_W) 'putchar.c'; else $(CYGPATH_W) '$(srcdir)/putchar.c'; fi`

libcex_a-puts.o: puts.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-puts.o `test -f 'puts.c' || echo '$(srcdir)/'`puts.c

libcex_a-puts.obj: puts.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-puts.obj `if test -f 'puts.c'; then $(CYGPATH_W) 'puts.c'; else $(CYGPATH_W) '$(srcdir)/puts.c'; fi`

libcex_a-sprintf.o: sprintf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-sprintf.o `test -f 'sprintf.c' || echo '$(srcdir)/'`sprintf.c

libcex_a-sprintf.obj: sprintf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-sprintf.obj `if test -f 'sprintf.c'; then $(CYGPATH_W) 'sprintf.c'; else $(CYGPATH_W) '$(srcdir)/sprintf.c'; fi`

libcex_a-streams.o: streams.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-streams.o `test -f 'streams.c' || echo '$(srcdir)/'`streams.c

libcex_a-streams.obj: streams.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-streams.obj `if test -f 'streams.c'; then $(CYGPATH_W) 'streams.c'; else $(CYGPATH_W) '$(srcdir)/streams.c'; fi`

libcex_a-strmgpsim.o: strmgpsim.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-strmgpsim.o `test -f 'strmgpsim.c' || echo '$(srcdir)/'`strmgpsim.c

libcex_a-strmgpsim.obj: strmgpsim.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-strmgpsim.obj `if test -f 'strmgpsim.c'; then $(CYGPATH_W) 'strmgpsim.c'; else $(CYGPATH_W) '$(srcdir)/strmgpsim.c'; fi`

libcex_a-strmmssp.o: strmmssp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-strmmssp.o `test -f 'strmmssp.c' || echo '$(srcdir)/'`strmmssp.c

libcex_a-strmmssp.obj: strmmssp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-strmmssp.obj `if test -f 'strmmssp.c'; then $(CYGPATH_W) 'strmmssp.c'; else $(CYGPATH_W) '$(srcdir)/strmmssp.c'; fi`

libcex_a-strmusart.o: strmusart.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-strmusart.o `test -f 'strmusart.c' || echo '$(srcdir)/'`strmusart.c

libcex_a-strmusart.obj: strmusart.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-strmusart.obj `if test -f 'strmusart.c'; then $(CYGPATH_W) 'strmusart.c'; else $(CYGPATH_W) '$(srcdir)/strmusart.c'; fi`

libcex_a-vfprintf.o: vfprintf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-vfprintf.o `test -f 'vfprintf.c' || echo '$(srcdir)/'`vfprintf.c

libcex_a-vfprintf.obj: vfprintf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-vfprintf.obj `if test -f 'vfprintf.c'; then $(CYGPATH_W) 'vfprintf.c'; else $(CYGPATH_W) '$(srcdir)/vfprintf.c'; fi`

libcex_a-vprintf.o: vprintf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-vprintf.o `test -f 'vprintf.c' || echo '$(srcdir)/'`vprintf.c

libcex_a-vprintf.obj: vprintf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-vprintf.obj `if test -f 'vprintf.c'; then $(CYGPATH_W) 'vprintf.c'; else $(CYGPATH_W) '$(srcdir)/vprintf.c'; fi`

libcex_a-vsprintf.o: vsprintf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-vsprintf.o `test -f 'vsprintf.c' || echo '$(srcdir)/'`vsprintf.c

libcex_a-vsprintf.obj: vsprintf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-vsprintf.obj `if test -f 'vsprintf.c'; then $(CYGPATH_W) 'vsprintf.c'; else $(CYGPATH_W) '$(srcdir)/vsprintf.c'; fi`

libcex_a-_atof.o: _atof.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-_atof.o `test -f '_atof.c' || echo '$(srcdir)/'`_atof.c

libcex_a-_atof.obj: _atof.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-_atof.obj `if test -f '_atof.c'; then $(CYGPATH_W) '_atof.c'; else $(CYGPATH_W) '$(srcdir)/_atof.c'; fi`

libcex_a-_ftoa.o: _ftoa.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-_ftoa.o `test -f '_ftoa.c' || echo '$(srcdir)/'`_ftoa.c

libcex_a-_ftoa.obj: _ftoa.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-_ftoa.obj `if test -f '_ftoa.c'; then $(CYGPATH_W) '_ftoa.c'; else $(CYGPATH_W) '$(srcdir)/_ftoa.c'; fi`

libcex_a-__itoa.o: __itoa.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-__itoa.o `test -f '__itoa.c' || echo '$(srcdir)/'`__itoa.c

libcex_a-__itoa.obj: __itoa.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-__itoa.obj `if test -f '__itoa.c'; then $(CYGPATH_W) '__itoa.c'; else $(CYGPATH_W) '$(srcdir)/__itoa.c'; fi`

libcex_a-__ltoa.o: __ltoa.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-__ltoa.o `test -f '__ltoa.c' || echo '$(srcdir)/'`__ltoa.c

libcex_a-__ltoa.obj: __ltoa.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-__ltoa.obj `if test -f '__ltoa.c'; then $(CYGPATH_W) '__ltoa.c'; else $(CYGPATH_W) '$(srcdir)/__ltoa.c'; fi`

libcex_a-abs.o: abs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-abs.o `test -f 'abs.c' || echo '$(srcdir)/'`abs.c

libcex_a-abs.obj: abs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-abs.obj `if test -f 'abs.c'; then $(CYGPATH_W) 'abs.c'; else $(CYGPATH_W) '$(srcdir)/abs.c'; fi`

libcex_a-aligned_alloc.o: aligned_alloc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-aligned_alloc.o `test -f 'aligned_alloc.c' || echo '$(srcdir)/'`aligned_alloc.c

libcex_a-aligned_alloc.obj: aligned_alloc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-aligned_alloc.obj `if test -f 'aligned_alloc.c'; then $(CYGPATH_W) 'aligned_alloc.c'; else $(CYGPATH_W) '$(srcdir)/aligned_alloc.c'; fi`

libcex_a-atoi.o: atoi.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-atoi.o `test -f 'atoi.c' || echo '$(srcdir)/'`atoi.c

libcex_a-atoi.obj: atoi.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-atoi.obj `if test -f 'atoi.c'; then $(CYGPATH_W) 'atoi.c'; else $(CYGPATH_W) '$(srcdir)/atoi.c'; fi`

libcex_a-atol.o: atol.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-atol.o `test -f 'atol.c' || echo '$(srcdir)/'`atol.c

libcex_a-atol.obj: atol.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-atol.obj `if test -f 'atol.c'; then $(CYGPATH_W) 'atol.c'; else $(CYGPATH_W) '$(srcdir)/atol.c'; fi`

libcex_a-bsearch.o: bsearch.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-bsearch.o `test -f 'bsearch.c' || echo '$(srcdir)/'`bsearch.c

libcex_a-bsearch.obj: bsearch.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-bsearch.obj `if test -f 'bsearch.c'; then $(CYGPATH_W) 'bsearch.c'; else $(CYGPATH_W) '$(srcdir)/bsearch.c'; fi`

libcex_a-_calloc.o: _calloc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-_calloc.o `test -f '_calloc.c' || echo '$(srcdir)/'`_calloc.c

libcex_a-_calloc.obj: _calloc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-_calloc.obj `if test -f '_calloc.c'; then $(CYGPATH_W) '_calloc.c'; else $(CYGPATH_W) '$(srcdir)/_calloc.c'; fi`

libcex_a-free.o: free.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-free.o `test -f 'free.c' || echo '$(srcdir)/'`free.c

libcex_a-free.obj: free.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-free.obj `if test -f 'free.c'; then $(CYGPATH_W) 'free.c'; else $(CYGPATH_W) '$(srcdir)/free.c'; fi`

libcex_a-labs.o: labs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-labs.o `test -f 'labs.c' || echo '$(srcdir)/'`labs.c

libcex_a-labs.obj: labs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-labs.obj `if test -f 'labs.c'; then $(CYGPATH_W) 'labs.c'; else $(CYGPATH_W) '$(srcdir)/labs.c'; fi`

libcex_a-malloc.o: malloc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-malloc.o `test -f 'malloc.c' || echo '$(srcdir)/'`malloc.c

libcex_a-malloc.obj: malloc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-malloc.obj `if test -f 'malloc.c'; then $(CYGPATH_W) 'malloc.c'; else $(CYGPATH_W) '$(srcdir)/malloc.c'; fi`

libcex_a-mblen.o: mblen.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-mblen.o `test -f 'mblen.c' || echo '$(srcdir)/'`mblen.c

libcex_a-mblen.obj: mblen.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-mblen.obj `if test -f 'mblen.c'; then $(CYGPATH_W) 'mblen.c'; else $(CYGPATH_W) '$(srcdir)/mblen.c'; fi`

libcex_a-mbstowcs.o: mbstowcs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-mbstowcs.o `test -f 'mbstowcs.c' || echo '$(srcdir)/'`mbstowcs.c

libcex_a-mbstowcs.obj: mbstowcs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-mbstowcs.obj `if test -f 'mbstowcs.c'; then $(CYGPATH_W) 'mbstowcs.c'; else $(CYGPATH_W) '$(srcdir)/mbstowcs.c'; fi`

libcex_a-mbtowc.o: mbtowc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-mbtowc.o `test -f 'mbtowc.c' || echo '$(srcdir)/'`mbtowc.c

libcex_a-mbtowc.obj: mbtowc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-mbtowc.obj `if test -f 'mbtowc.c'; then $(CYGPATH_W) 'mbtowc.c'; else $(CYGPATH_W) '$(srcdir)/mbtowc.c'; fi`

libcex_a-memfree.o: memfree.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-memfree.o `test -f 'memfree.c' || echo '$(srcdir)/'`memfree.c

libcex_a-memfree.obj: memfree.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-memfree.obj `if test -f 'memfree.c'; then $(CYGPATH_W) 'memfree.c'; else $(CYGPATH_W) '$(srcdir)/memfree.c'; fi`

libcex_a-memfreemax.o: memfreemax.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-memfreemax.o `test -f 'memfreemax.c' || echo '$(srcdir)/'`memfreemax.c

libcex_a-memfreemax.obj: memfreemax.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-memfreemax.obj `if test -f 'memfreemax.c'; then $(CYGPATH_W) 'memfreemax.c'; else $(CYGPATH_W) '$(srcdir)/memfreemax.c'; fi`

libcex_a-memmisc.o: memmisc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-memmisc.o `test -f 'memmisc.c' || echo '$(srcdir)/'`memmisc.c

libcex_a-memmisc.obj: memmisc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-memmisc.obj `if test -f 'memmisc.c'; then $(CYGPATH_W) 'memmisc.c'; else $(CYGPATH_W) '$(srcdir)/memmisc.c'; fi`

libcex_a-qsort.o: qsort.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-qsort.o `test -f 'qsort.c' || echo '$(srcdir)/'`qsort.c

libcex_a-qsort.obj: qsort.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-qsort.obj `if test -f 'qsort.c'; then $(CYGPATH_W) 'qsort.c'; else $(CYGPATH_W) '$(srcdir)/qsort.c'; fi`

libcex_a-rand.o: rand.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-rand.o `test -f 'rand.c' || echo '$(srcdir)/'`rand.c

libcex_a-rand.obj: rand.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-rand.obj `if test -f 'rand.c'; then $(CYGPATH_W) 'rand.c'; else $(CYGPATH_W) '$(srcdir)/rand.c'; fi`

libcex_a-realloc.o: realloc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-realloc.o `test -f 'realloc.c' || echo '$(srcdir)/'`realloc.c

libcex_a-realloc.obj: realloc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-realloc.obj `if test -f 'realloc.c'; then $(CYGPATH_W) 'realloc.c'; else $(CYGPATH_W) '$(srcdir)/realloc.c'; fi`

libcex_a-strtol.o: strtol.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-strtol.o `test -f 'strtol.c' || echo '$(srcdir)/'`strtol.c

libcex_a-strtol.obj: strtol.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-strtol.obj `if test -f 'strtol.c'; then $(CYGPATH_W) 'strtol.c'; else $(CYGPATH_W) '$(srcdir)/strtol.c'; fi`

libcex_a-strtoul.o: strtoul.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-strtoul.o `test -f 'strtoul.c' || echo '$(srcdir)/'`strtoul.c

libcex_a-strtoul.obj: strtoul.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-strtoul.obj `if test -f 'strtoul.c'; then $(CYGPATH_W) 'strtoul.c'; else $(CYGPATH_W) '$(srcdir)/strtoul.c'; fi`

libcex_a-wcstombs.o: wcstombs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-wcstombs.o `test -f 'wcstombs.c' || echo '$(srcdir)/'`wcstombs.c

libcex_a-wcstombs.obj: wcstombs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-wcstombs.obj `if test -f 'wcstombs.c'; then $(CYGPATH_W) 'wcstombs.c'; else $(CYGPATH_W) '$(srcdir)/wcstombs.c'; fi`

libcex_a-wctomb.o: wctomb.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-wctomb.o `test -f 'wctomb.c' || echo '$(srcdir)/'`wctomb.c

libcex_a-wctomb.obj: wctomb.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-wctomb.obj `if test -f 'wctomb.c'; then $(CYGPATH_W) 'wctomb.c'; else $(CYGPATH_W) '$(srcdir)/wctomb.c'; fi`

libcex_a-_memchr.o: _memchr.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-_memchr.o `test -f '_memchr.c' || echo '$(srcdir)/'`_memchr.c

libcex_a-_memchr.obj: _memchr.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-_memchr.obj `if test -f '_memchr.c'; then $(CYGPATH_W) '_memchr.c'; else $(CYGPATH_W) '$(srcdir)/_memchr.c'; fi`

libcex_a-_memcmp.o: _memcmp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-_memcmp.o `test -f '_memcmp.c' || echo '$(srcdir)/'`_memcmp.c

libcex_a-_memcmp.obj: _memcmp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-_memcmp.obj `if test -f '_memcmp.c'; then $(CYGPATH_W) '_memcmp.c'; else $(CYGPATH_W) '$(srcdir)/_memcmp.c'; fi`

libcex_a-__memcpy.o: __memcpy.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-__memcpy.o `test -f '__memcpy.c' || echo '$(srcdir)/'`__memcpy.c

libcex_a-__memcpy.obj: __memcpy.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-__memcpy.obj `if test -f '__memcpy.c'; then $(CYGPATH_W) '__memcpy.c'; else $(CYGPATH_W) '$(srcdir)/__memcpy.c'; fi`

libcex_a-memcpy.o: memcpy.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-memcpy.o `test -f 'memcpy.c' || echo '$(srcdir)/'`memcpy.c

libcex_a-memcpy.obj: memcpy.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-memcpy.obj `if test -f 'memcpy.c'; then $(CYGPATH_W) 'memcpy.c'; else $(CYGPATH_W) '$(srcdir)/memcpy.c'; fi`

libcex_a-_memmove.o: _memmove.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-_memmove.o `test -f '_memmove.c' || echo '$(srcdir)/'`_memmove.c

libcex_a-_memmove.obj: _memmove.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-_memmove.obj `if test -f '_memmove.c'; then $(CYGPATH_W) '_memmove.c'; else $(CYGPATH_W) '$(srcdir)/_memmove.c'; fi`

libcex_a-_memset.o: _memset.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-_memset.o `test -f '_memset.c' || echo '$(srcdir)/'`_memset.c

libcex_a-_memset.obj: _memset.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-_memset.obj `if test -f '_memset.c'; then $(CYGPATH_W) '_memset.c'; else $(CYGPATH_W) '$(srcdir)/_memset.c'; fi`

libcex_a-_strcat.o: _strcat.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-_strcat.o `test -f '_strcat.c' || echo '$(srcdir)/'`_strcat.c

libcex_a-_strcat.obj: _strcat.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-_strcat.obj `if test -f '_strcat.c'; then $(CYGPATH_W) '_strcat.c'; else $(CYGPATH_W) '$(srcdir)/_strcat.c'; fi`

libcex_a-_strchr.o: _strchr.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-_strchr.o `test -f '_strchr.c' || echo '$(srcdir)/'`_strchr.c

libcex_a-_strchr.obj: _strchr.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-_strchr.obj `if test -f '_strchr.c'; then $(CYGPATH_W) '_strchr.c'; else $(CYGPATH_W) '$(srcdir)/_strchr.c'; fi`

libcex_a-_strcmp.o: _strcmp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-_strcmp.o `test -f '_strcmp.c' || echo '$(srcdir)/'`_strcmp.c

libcex_a-_strcmp.obj: _strcmp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-_strcmp.obj `if test -f '_strcmp.c'; then $(CYGPATH_W) '_strcmp.c'; else $(CYGPATH_W) '$(srcdir)/_strcmp.c'; fi`

libcex_a-_strcpy.o: _strcpy.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-_strcpy.o `test -f '_strcpy.c' || echo '$(srcdir)/'`_strcpy.c

libcex_a-_strcpy.obj: _strcpy.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-_strcpy.obj `if test -f '_strcpy.c'; then $(CYGPATH_W) '_strcpy.c'; else $(CYGPATH_W) '$(srcdir)/_strcpy.c'; fi`

libcex_a-_strcspn.o: _strcspn.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-_strcspn.o `test -f '_strcspn.c' || echo '$(srcdir)/'`_strcspn.c

libcex_a-_strcspn.obj: _strcspn.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-_strcspn.obj `if test -f '_strcspn.c'; then $(CYGPATH_W) '_strcspn.c'; else $(CYGPATH_W) '$(srcdir)/_strcspn.c'; fi`

libcex_a-_strlen.o: _strlen.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-_strlen.o `test -f '_strlen.c' || echo '$(srcdir)/'`_strlen.c

libcex_a-_strlen.obj: _strlen.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-_strlen.obj `if test -f '_strlen.c'; then $(CYGPATH_W) '_strlen.c'; else $(CYGPATH_W) '$(srcdir)/_strlen.c'; fi`

libcex_a-_strncat.o: _strncat.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-_strncat.o `test -f '_strncat.c' || echo '$(srcdir)/'`_strncat.c

libcex_a-_strncat.obj: _strncat.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-_strncat.obj `if test -f '_strncat.c'; then $(CYGPATH_W) '_strncat.c'; else $(CYGPATH_W) '$(srcdir)/_strncat.c'; fi`

libcex_a-_strncmp.o: _strncmp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-_strncmp.o `test -f '_strncmp.c' || echo '$(srcdir)/'`_strncmp.c

libcex_a-_strncmp.obj: _strncmp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-_strncmp.obj `if test -f '_strncmp.c'; then $(CYGPATH_W) '_strncmp.c'; else $(CYGPATH_W) '$(srcdir)/_strncmp.c'; fi`

libcex_a-_strncpy.o: _strncpy.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-_strncpy.o `test -f '_strncpy.c' || echo '$(srcdir)/'`_strncpy.c

libcex_a-_strncpy.obj: _strncpy.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-_strncpy.obj `if test -f '_strncpy.c'; then $(CYGPATH_W) '_strncpy.c'; else $(CYGPATH_W) '$(srcdir)/_strncpy.c'; fi`

libcex_a-_strpbrk.o: _strpbrk.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-_strpbrk.o `test -f '_strpbrk.c' || echo '$(srcdir)/'`_strpbrk.c

libcex_a-_strpbrk.obj: _strpbrk.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-_strpbrk.obj `if test -f '_strpbrk.c'; then $(CYGPATH_W) '_strpbrk.c'; else $(CYGPATH_W) '$(srcdir)/_strpbrk.c'; fi`

libcex_a-_strrchr.o: _strrchr.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-_strrchr.o `test -f '_strrchr.c' || echo '$(srcdir)/'`_strrchr.c

libcex_a-_strrchr.obj: _strrchr.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-_strrchr.obj `if test -f '_strrchr.c'; then $(CYGPATH_W) '_strrchr.c'; else $(CYGPATH_W) '$(srcdir)/_strrchr.c'; fi`

libcex_a-_strspn.o: _strspn.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-_strspn.o `test -f '_strspn.c' || echo '$(srcdir)/'`_strspn.c

libcex_a-_strspn.obj: _strspn.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-_strspn.obj `if test -f '_strspn.c'; then $(CYGPATH_W) '_strspn.c'; else $(CYGPATH_W) '$(srcdir)/_strspn.c'; fi`

libcex_a-_strstr.o: _strstr.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-_strstr.o `test -f '_strstr.c' || echo '$(srcdir)/'`_strstr.c

libcex_a-_strstr.obj: _strstr.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-_strstr.obj `if test -f '_strstr.c'; then $(CYGPATH_W) '_strstr.c'; else $(CYGPATH_W) '$(srcdir)/_strstr.c'; fi`

libcex_a-_strtok.o: _strtok.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-_strtok.o `test -f '_strtok.c' || echo '$(srcdir)/'`_strtok.c

libcex_a-_strtok.obj: _strtok.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-_strtok.obj `if test -f '_strtok.c'; then $(CYGPATH_W) '_strtok.c'; else $(CYGPATH_W) '$(srcdir)/_strtok.c'; fi`

libcex_a-strxfrm.o: strxfrm.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-strxfrm.o `test -f 'strxfrm.c' || echo '$(srcdir)/'`strxfrm.c

libcex_a-strxfrm.obj: strxfrm.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-strxfrm.obj `if test -f 'strxfrm.c'; then $(CYGPATH_W) 'strxfrm.c'; else $(CYGPATH_W) '$(srcdir)/strxfrm.c'; fi`

libcex_a-c16rtomb.o: c16rtomb.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-c16rtomb.o `test -f 'c16rtomb.c' || echo '$(srcdir)/'`c16rtomb.c

libcex_a-c16rtomb.obj: c16rtomb.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-c16rtomb.obj `if test -f 'c16rtomb.c'; then $(CYGPATH_W) 'c16rtomb.c'; else $(CYGPATH_W) '$(srcdir)/c16rtomb.c'; fi`

libcex_a-c16stombs.o: c16stombs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-c16stombs.o `test -f 'c16stombs.c' || echo '$(srcdir)/'`c16stombs.c

libcex_a-c16stombs.obj: c16stombs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-c16stombs.obj `if test -f 'c16stombs.c'; then $(CYGPATH_W) 'c16stombs.c'; else $(CYGPATH_W) '$(srcdir)/c16stombs.c'; fi`

libcex_a-c32rtomb.o: c32rtomb.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-c32rtomb.o `test -f 'c32rtomb.c' || echo '$(srcdir)/'`c32rtomb.c

libcex_a-c32rtomb.obj: c32rtomb.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-c32rtomb.obj `if test -f 'c32rtomb.c'; then $(CYGPATH_W) 'c32rtomb.c'; else $(CYGPATH_W) '$(srcdir)/c32rtomb.c'; fi`

libcex_a-mbrtoc16.o: mbrtoc16.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-mbrtoc16.o `test -f 'mbrtoc16.c' || echo '$(srcdir)/'`mbrtoc16.c

libcex_a-mbrtoc16.obj: mbrtoc16.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-mbrtoc16.obj `if test -f 'mbrtoc16.c'; then $(CYGPATH_W) 'mbrtoc16.c'; else $(CYGPATH_W) '$(srcdir)/mbrtoc16.c'; fi`

libcex_a-mbrtoc32.o: mbrtoc32.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-mbrtoc32.o `test -f 'mbrtoc32.c' || echo '$(srcdir)/'`mbrtoc32.c

libcex_a-mbrtoc32.obj: mbrtoc32.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-mbrtoc32.obj `if test -f 'mbrtoc32.c'; then $(CYGPATH_W) 'mbrtoc32.c'; else $(CYGPATH_W) '$(srcdir)/mbrtoc32.c'; fi`

libcex_a-mbstoc16s.o: mbstoc16s.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-mbstoc16s.o `test -f 'mbstoc16s.c' || echo '$(srcdir)/'`mbstoc16s.c

libcex_a-mbstoc16s.obj: mbstoc16s.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-mbstoc16s.obj `if test -f 'mbstoc16s.c'; then $(CYGPATH_W) 'mbstoc16s.c'; else $(CYGPATH_W) '$(srcdir)/mbstoc16s.c'; fi`

libcex_a-btowc.o: btowc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-btowc.o `test -f 'btowc.c' || echo '$(srcdir)/'`btowc.c

libcex_a-btowc.obj: btowc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-btowc.obj `if test -f 'btowc.c'; then $(CYGPATH_W) 'btowc.c'; else $(CYGPATH_W) '$(srcdir)/btowc.c'; fi`

libcex_a-mbrlen.o: mbrlen.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-mbrlen.o `test -f 'mbrlen.c' || echo '$(srcdir)/'`mbrlen.c

libcex_a-mbrlen.obj: mbrlen.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-mbrlen.obj `if test -f 'mbrlen.c'; then $(CYGPATH_W) 'mbrlen.c'; else $(CYGPATH_W) '$(srcdir)/mbrlen.c'; fi`

libcex_a-mbrtowc.o: mbrtowc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-mbrtowc.o `test -f 'mbrtowc.c' || echo '$(srcdir)/'`mbrtowc.c

libcex_a-mbrtowc.obj: mbrtowc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-mbrtowc.obj `if test -f 'mbrtowc.c'; then $(CYGPATH_W) 'mbrtowc.c'; else $(CYGPATH_W) '$(srcdir)/mbrtowc.c'; fi`

libcex_a-mbsinit.o: mbsinit.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-mbsinit.o `test -f 'mbsinit.c' || echo '$(srcdir)/'`mbsinit.c

libcex_a-mbsinit.obj: mbsinit.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-mbsinit.obj `if test -f 'mbsinit.c'; then $(CYGPATH_W) 'mbsinit.c'; else $(CYGPATH_W) '$(srcdir)/mbsinit.c'; fi`

libcex_a-wcrtomb.o: wcrtomb.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-wcrtomb.o `test -f 'wcrtomb.c' || echo '$(srcdir)/'`wcrtomb.c

libcex_a-wcrtomb.obj: wcrtomb.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-wcrtomb.obj `if test -f 'wcrtomb.c'; then $(CYGPATH_W) 'wcrtomb.c'; else $(CYGPATH_W) '$(srcdir)/wcrtomb.c'; fi`

libcex_a-wcscmp.o: wcscmp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-wcscmp.o `test -f 'wcscmp.c' || echo '$(srcdir)/'`wcscmp.c

libcex_a-wcscmp.obj: wcscmp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-wcscmp.obj `if test -f 'wcscmp.c'; then $(CYGPATH_W) 'wcscmp.c'; else $(CYGPATH_W) '$(srcdir)/wcscmp.c'; fi`

libcex_a-wcslen.o: wcslen.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-wcslen.o `test -f 'wcslen.c' || echo '$(srcdir)/'`wcslen.c

libcex_a-wcslen.obj: wcslen.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-wcslen.obj `if test -f 'wcslen.c'; then $(CYGPATH_W) 'wcslen.c'; else $(CYGPATH_W) '$(srcdir)/wcslen.c'; fi`

libcex_a-wctob.o: wctob.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-wctob.o `test -f 'wctob.c' || echo '$(srcdir)/'`wctob.c

libcex_a-wctob.obj: wctob.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcex_a_CFLAGS) $(CFLAGS) -c -o libcex_a-wctob.obj `if test -f 'wctob.c'; then $(CYGPATH_W) 'wctob.c'; else $(CYGPATH_W) '$(srcdir)/wctob.c'; fi`

libco_a-__assert.o: __assert.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-__assert.o `test -f '__assert.c' || echo '$(srcdir)/'`__assert.c

libco_a-__assert.obj: __assert.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-__assert.obj `if test -f '__assert.c'; then $(CYGPATH_W) '__assert.c'; else $(CYGPATH_W) '$(srcdir)/__assert.c'; fi`

libco_a-isalnum.o: isalnum.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-isalnum.o `test -f 'isalnum.c' || echo '$(srcdir)/'`isalnum.c

libco_a-isalnum.obj: isalnum.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-isalnum.obj `if test -f 'isalnum.c'; then $(CYGPATH_W) 'isalnum.c'; else $(CYGPATH_W) '$(srcdir)/isalnum.c'; fi`

libco_a-isalpha.o: isalpha.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-isalpha.o `test -f 'isalpha.c' || echo '$(srcdir)/'`isalpha.c

libco_a-isalpha.obj: isalpha.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-isalpha.obj `if test -f 'isalpha.c'; then $(CYGPATH_W) 'isalpha.c'; else $(CYGPATH_W) '$(srcdir)/isalpha.c'; fi`

libco_a-isblank.o: isblank.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-isblank.o `test -f 'isblank.c' || echo '$(srcdir)/'`isblank.c

libco_a-isblank.obj: isblank.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-isblank.obj `if test -f 'isblank.c'; then $(CYGPATH_W) 'isblank.c'; else $(CYGPATH_W) '$(srcdir)/isblank.c'; fi`

libco_a-iscntrl.o: iscntrl.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-iscntrl.o `test -f 'iscntrl.c' || echo '$(srcdir)/'`iscntrl.c

libco_a-iscntrl.obj: iscntrl.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-iscntrl.obj `if test -f 'iscntrl.c'; then $(CYGPATH_W) 'iscntrl.c'; else $(CYGPATH_W) '$(srcdir)/iscntrl.c'; fi`

libco_a-isdigit.o: isdigit.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-isdigit.o `test -f 'isdigit.c' || echo '$(srcdir)/'`isdigit.c

libco_a-isdigit.obj: isdigit.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-isdigit.obj `if test -f 'isdigit.c'; then $(CYGPATH_W) 'isdigit.c'; else $(CYGPATH_W) '$(srcdir)/isdigit.c'; fi`

libco_a-isgraph.o: isgraph.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-isgraph.o `test -f 'isgraph.c' || echo '$(srcdir)/'`isgraph.c

libco_a-isgraph.obj: isgraph.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-isgraph.obj `if test -f 'isgraph.c'; then $(CYGPATH_W) 'isgraph.c'; else $(CYGPATH_W) '$(srcdir)/isgraph.c'; fi`

libco_a-islower.o: islower.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-islower.o `test -f 'islower.c' || echo '$(srcdir)/'`islower.c

libco_a-islower.obj: islower.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-islower.obj `if test -f 'islower.c'; then $(CYGPATH_W) 'islower.c'; else $(CYGPATH_W) '$(srcdir)/islower.c'; fi`

libco_a-isprint.o: isprint.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-isprint.o `test -f 'isprint.c' || echo '$(srcdir)/'`isprint.c

libco_a-isprint.obj: isprint.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-isprint.obj `if test -f 'isprint.c'; then $(CYGPATH_W) 'isprint.c'; else $(CYGPATH_W) '$(srcdir)/isprint.c'; fi`

libco_a-ispunct.o: ispunct.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-ispunct.o `test -f 'ispunct.c' || echo '$(srcdir)/'`ispunct.c

libco_a-ispunct.obj: ispunct.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-ispunct.obj `if test -f 'ispunct.c'; then $(CYGPATH_W) 'ispunct.c'; else $(CYGPATH_W) '$(srcdir)/ispunct.c'; fi`

libco_a-isspace.o: isspace.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-isspace.o `test -f 'isspace.c' || echo '$(srcdir)/'`isspace.c

libco_a-isspace.obj: isspace.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-isspace.obj `if test -f 'isspace.c'; then $(CYGPATH_W) 'isspace.c'; else $(CYGPATH_W) '$(srcdir)/isspace.c'; fi`

libco_a-isupper.o: isupper.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-isupper.o `test -f 'isupper.c' || echo '$(srcdir)/'`isupper.c

libco_a-isupper.obj: isupper.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-isupper.obj `if test -f 'isupper.c'; then $(CYGPATH_W) 'isupper.c'; else $(CYGPATH_W) '$(srcdir)/isupper.c'; fi`

libco_a-isxdigit.o: isxdigit.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-isxdigit.o `test -f 'isxdigit.c' || echo '$(srcdir)/'`isxdigit.c

libco_a-isxdigit.obj: isxdigit.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-isxdigit.obj `if test -f 'isxdigit.c'; then $(CYGPATH_W) 'isxdigit.c'; else $(CYGPATH_W) '$(srcdir)/isxdigit.c'; fi`

libco_a-tolower.o: tolower.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-tolower.o `test -f 'tolower.c' || echo '$(srcdir)/'`tolower.c

libco_a-tolower.obj: tolower.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-tolower.obj `if test -f 'tolower.c'; then $(CYGPATH_W) 'tolower.c'; else $(CYGPATH_W) '$(srcdir)/tolower.c'; fi`

libco_a-toupper.o: toupper.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-toupper.o `test -f 'toupper.c' || echo '$(srcdir)/'`toupper.c

libco_a-toupper.obj: toupper.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-toupper.obj `if test -f 'toupper.c'; then $(CYGPATH_W) 'toupper.c'; else $(CYGPATH_W) '$(srcdir)/toupper.c'; fi`

libco_a-errno.o: errno.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-errno.o `test -f 'errno.c' || echo '$(srcdir)/'`errno.c

libco_a-errno.obj: errno.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-errno.obj `if test -f 'errno.c'; then $(CYGPATH_W) 'errno.c'; else $(CYGPATH_W) '$(srcdir)/errno.c'; fi`

libco_a-fprintf.o: fprintf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-fprintf.o `test -f 'fprintf.c' || echo '$(srcdir)/'`fprintf.c

libco_a-fprintf.obj: fprintf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-fprintf.obj `if test -f 'fprintf.c'; then $(CYGPATH_W) 'fprintf.c'; else $(CYGPATH_W) '$(srcdir)/fprintf.c'; fi`

libco_a-fputc.o: fputc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-fputc.o `test -f 'fputc.c' || echo '$(srcdir)/'`fputc.c

libco_a-fputc.obj: fputc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-fputc.obj `if test -f 'fputc.c'; then $(CYGPATH_W) 'fputc.c'; else $(CYGPATH_W) '$(srcdir)/fputc.c'; fi`

libco_a-fputs.o: fputs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-fputs.o `test -f 'fputs.c' || echo '$(srcdir)/'`fputs.c

libco_a-fputs.obj: fputs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-fputs.obj `if test -f 'fputs.c'; then $(CYGPATH_W) 'fputs.c'; else $(CYGPATH_W) '$(srcdir)/fputs.c'; fi`

libco_a-getchar.o: getchar.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-getchar.o `test -f 'getchar.c' || echo '$(srcdir)/'`getchar.c

libco_a-getchar.obj: getchar.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-getchar.obj `if test -f 'getchar.c'; then $(CYGPATH_W) 'getchar.c'; else $(CYGPATH_W) '$(srcdir)/getchar.c'; fi`

libco_a-gets.o: gets.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-gets.o `test -f 'gets.c' || echo '$(srcdir)/'`gets.c

libco_a-gets.obj: gets.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-gets.obj `if test -f 'gets.c'; then $(CYGPATH_W) 'gets.c'; else $(CYGPATH_W) '$(srcdir)/gets.c'; fi`

libco_a-printf.o: printf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-printf.o `test -f 'printf.c' || echo '$(srcdir)/'`printf.c

libco_a-printf.obj: printf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-printf.obj `if test -f 'printf.c'; then $(CYGPATH_W) 'printf.c'; else $(CYGPATH_W) '$(srcdir)/printf.c'; fi`

libco_a-printfl.o: printfl.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-printfl.o `test -f 'printfl.c' || echo '$(srcdir)/'`printfl.c

libco_a-printfl.obj: printfl.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-printfl.obj `if test -f 'printfl.c'; then $(CYGPATH_W) 'printfl.c'; else $(CYGPATH_W) '$(srcdir)/printfl.c'; fi`

libco_a-putchar.o: putchar.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-putchar.o `test -f 'putchar.c' || echo '$(srcdir)/'`putchar.c

libco_a-putchar.obj: putchar.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-putchar.obj `if test -f 'putchar.c'; then $(CYGPATH_W) 'putchar.c'; else $(CYGPATH_W) '$(srcdir)/putchar.c'; fi`

libco_a-puts.o: puts.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-puts.o `test -f 'puts.c' || echo '$(srcdir)/'`puts.c

libco_a-puts.obj: puts.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-puts.obj `if test -f 'puts.c'; then $(CYGPATH_W) 'puts.c'; else $(CYGPATH_W) '$(srcdir)/puts.c'; fi`

libco_a-sprintf.o: sprintf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-sprintf.o `test -f 'sprintf.c' || echo '$(srcdir)/'`sprintf.c

libco_a-sprintf.obj: sprintf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-sprintf.obj `if test -f 'sprintf.c'; then $(CYGPATH_W) 'sprintf.c'; else $(CYGPATH_W) '$(srcdir)/sprintf.c'; fi`

libco_a-streams.o: streams.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-streams.o `test -f 'streams.c' || echo '$(srcdir)/'`streams.c

libco_a-streams.obj: streams.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-streams.obj `if test -f 'streams.c'; then $(CYGPATH_W) 'streams.c'; else $(CYGPATH_W) '$(srcdir)/streams.c'; fi`

libco_a-strmgpsim.o: strmgpsim.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-strmgpsim.o `test -f 'strmgpsim.c' || echo '$(srcdir)/'`strmgpsim.c

libco_a-strmgpsim.obj: strmgpsim.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-strmgpsim.obj `if test -f 'strmgpsim.c'; then $(CYGPATH_W) 'strmgpsim.c'; else $(CYGPATH_W) '$(srcdir)/strmgpsim.c'; fi`

libco_a-strmmssp.o: strmmssp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-strmmssp.o `test -f 'strmmssp.c' || echo '$(srcdir)/'`strmmssp.c

libco_a-strmmssp.obj: strmmssp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-strmmssp.obj `if test -f 'strmmssp.c'; then $(CYGPATH_W) 'strmmssp.c'; else $(CYGPATH_W) '$(srcdir)/strmmssp.c'; fi`

libco_a-strmusart.o: strmusart.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-strmusart.o `test -f 'strmusart.c' || echo '$(srcdir)/'`strmusart.c

libco_a-strmusart.obj: strmusart.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-strmusart.obj `if test -f 'strmusart.c'; then $(CYGPATH_W) 'strmusart.c'; else $(CYGPATH_W) '$(srcdir)/strmusart.c'; fi`

libco_a-vfprintf.o: vfprintf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-vfprintf.o `test -f 'vfprintf.c' || echo '$(srcdir)/'`vfprintf.c

libco_a-vfprintf.obj: vfprintf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-vfprintf.obj `if test -f 'vfprintf.c'; then $(CYGPATH_W) 'vfprintf.c'; else $(CYGPATH_W) '$(srcdir)/vfprintf.c'; fi`

libco_a-vprintf.o: vprintf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-vprintf.o `test -f 'vprintf.c' || echo '$(srcdir)/'`vprintf.c

libco_a-vprintf.obj: vprintf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-vprintf.obj `if test -f 'vprintf.c'; then $(CYGPATH_W) 'vprintf.c'; else $(CYGPATH_W) '$(srcdir)/vprintf.c'; fi`

libco_a-vsprintf.o: vsprintf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-vsprintf.o `test -f 'vsprintf.c' || echo '$(srcdir)/'`vsprintf.c

libco_a-vsprintf.obj: vsprintf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-vsprintf.obj `if test -f 'vsprintf.c'; then $(CYGPATH_W) 'vsprintf.c'; else $(CYGPATH_W) '$(srcdir)/vsprintf.c'; fi`

libco_a-_atof.o: _atof.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-_atof.o `test -f '_atof.c' || echo '$(srcdir)/'`_atof.c

libco_a-_atof.obj: _atof.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-_atof.obj `if test -f '_atof.c'; then $(CYGPATH_W) '_atof.c'; else $(CYGPATH_W) '$(srcdir)/_atof.c'; fi`

libco_a-_ftoa.o: _ftoa.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-_ftoa.o `test -f '_ftoa.c' || echo '$(srcdir)/'`_ftoa.c

libco_a-_ftoa.obj: _ftoa.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-_ftoa.obj `if test -f '_ftoa.c'; then $(CYGPATH_W) '_ftoa.c'; else $(CYGPATH_W) '$(srcdir)/_ftoa.c'; fi`

libco_a-__itoa.o: __itoa.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-__itoa.o `test -f '__itoa.c' || echo '$(srcdir)/'`__itoa.c

libco_a-__itoa.obj: __itoa.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-__itoa.obj `if test -f '__itoa.c'; then $(CYGPATH_W) '__itoa.c'; else $(CYGPATH_W) '$(srcdir)/__itoa.c'; fi`

libco_a-__ltoa.o: __ltoa.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-__ltoa.o `test -f '__ltoa.c' || echo '$(srcdir)/'`__ltoa.c

libco_a-__ltoa.obj: __ltoa.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-__ltoa.obj `if test -f '__ltoa.c'; then $(CYGPATH_W) '__ltoa.c'; else $(CYGPATH_W) '$(srcdir)/__ltoa.c'; fi`

libco_a-abs.o: abs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-abs.o `test -f 'abs.c' || echo '$(srcdir)/'`abs.c

libco_a-abs.obj: abs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-abs.obj `if test -f 'abs.c'; then $(CYGPATH_W) 'abs.c'; else $(CYGPATH_W) '$(srcdir)/abs.c'; fi`

libco_a-aligned_alloc.o: aligned_alloc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-aligned_alloc.o `test -f 'aligned_alloc.c' || echo '$(srcdir)/'`aligned_alloc.c

libco_a-aligned_alloc.obj: aligned_alloc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-aligned_alloc.obj `if test -f 'aligned_alloc.c'; then $(CYGPATH_W) 'aligned_alloc.c'; else $(CYGPATH_W) '$(srcdir)/aligned_alloc.c'; fi`

libco_a-atoi.o: atoi.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-atoi.o `test -f 'atoi.c' || echo '$(srcdir)/'`atoi.c

libco_a-atoi.obj: atoi.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-atoi.obj `if test -f 'atoi.c'; then $(CYGPATH_W) 'atoi.c'; else $(CYGPATH_W) '$(srcdir)/atoi.c'; fi`

libco_a-atol.o: atol.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-atol.o `test -f 'atol.c' || echo '$(srcdir)/'`atol.c

libco_a-atol.obj: atol.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-atol.obj `if test -f 'atol.c'; then $(CYGPATH_W) 'atol.c'; else $(CYGPATH_W) '$(srcdir)/atol.c'; fi`

libco_a-bsearch.o: bsearch.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-bsearch.o `test -f 'bsearch.c' || echo '$(srcdir)/'`bsearch.c

libco_a-bsearch.obj: bsearch.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-bsearch.obj `if test -f 'bsearch.c'; then $(CYGPATH_W) 'bsearch.c'; else $(CYGPATH_W) '$(srcdir)/bsearch.c'; fi`

libco_a-_calloc.o: _calloc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-_calloc.o `test -f '_calloc.c' || echo '$(srcdir)/'`_calloc.c

libco_a-_calloc.obj: _calloc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-_calloc.obj `if test -f '_calloc.c'; then $(CYGPATH_W) '_calloc.c'; else $(CYGPATH_W) '$(srcdir)/_calloc.c'; fi`

libco_a-free.o: free.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-free.o `test -f 'free.c' || echo '$(srcdir)/'`free.c

libco_a-free.obj: free.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-free.obj `if test -f 'free.c'; then $(CYGPATH_W) 'free.c'; else $(CYGPATH_W) '$(srcdir)/free.c'; fi`

libco_a-labs.o: labs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-labs.o `test -f 'labs.c' || echo '$(srcdir)/'`labs.c

libco_a-labs.obj: labs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-labs.obj `if test -f 'labs.c'; then $(CYGPATH_W) 'labs.c'; else $(CYGPATH_W) '$(srcdir)/labs.c'; fi`

libco_a-malloc.o: malloc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-malloc.o `test -f 'malloc.c' || echo '$(srcdir)/'`malloc.c

libco_a-malloc.obj: malloc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-malloc.obj `if test -f 'malloc.c'; then $(CYGPATH_W) 'malloc.c'; else $(CYGPATH_W) '$(srcdir)/malloc.c'; fi`

libco_a-mblen.o: mblen.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-mblen.o `test -f 'mblen.c' || echo '$(srcdir)/'`mblen.c

libco_a-mblen.obj: mblen.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-mblen.obj `if test -f 'mblen.c'; then $(CYGPATH_W) 'mblen.c'; else $(CYGPATH_W) '$(srcdir)/mblen.c'; fi`

libco_a-mbstowcs.o: mbstowcs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-mbstowcs.o `test -f 'mbstowcs.c' || echo '$(srcdir)/'`mbstowcs.c

libco_a-mbstowcs.obj: mbstowcs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-mbstowcs.obj `if test -f 'mbstowcs.c'; then $(CYGPATH_W) 'mbstowcs.c'; else $(CYGPATH_W) '$(srcdir)/mbstowcs.c'; fi`

libco_a-mbtowc.o: mbtowc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-mbtowc.o `test -f 'mbtowc.c' || echo '$(srcdir)/'`mbtowc.c

libco_a-mbtowc.obj: mbtowc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-mbtowc.obj `if test -f 'mbtowc.c'; then $(CYGPATH_W) 'mbtowc.c'; else $(CYGPATH_W) '$(srcdir)/mbtowc.c'; fi`

libco_a-memfree.o: memfree.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-memfree.o `test -f 'memfree.c' || echo '$(srcdir)/'`memfree.c

libco_a-memfree.obj: memfree.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-memfree.obj `if test -f 'memfree.c'; then $(CYGPATH_W) 'memfree.c'; else $(CYGPATH_W) '$(srcdir)/memfree.c'; fi`

libco_a-memfreemax.o: memfreemax.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-memfreemax.o `test -f 'memfreemax.c' || echo '$(srcdir)/'`memfreemax.c

libco_a-memfreemax.obj: memfreemax.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-memfreemax.obj `if test -f 'memfreemax.c'; then $(CYGPATH_W) 'memfreemax.c'; else $(CYGPATH_W) '$(srcdir)/memfreemax.c'; fi`

libco_a-memmisc.o: memmisc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-memmisc.o `test -f 'memmisc.c' || echo '$(srcdir)/'`memmisc.c

libco_a-memmisc.obj: memmisc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-memmisc.obj `if test -f 'memmisc.c'; then $(CYGPATH_W) 'memmisc.c'; else $(CYGPATH_W) '$(srcdir)/memmisc.c'; fi`

libco_a-qsort.o: qsort.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-qsort.o `test -f 'qsort.c' || echo '$(srcdir)/'`qsort.c

libco_a-qsort.obj: qsort.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-qsort.obj `if test -f 'qsort.c'; then $(CYGPATH_W) 'qsort.c'; else $(CYGPATH_W) '$(srcdir)/qsort.c'; fi`

libco_a-rand.o: rand.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-rand.o `test -f 'rand.c' || echo '$(srcdir)/'`rand.c

libco_a-rand.obj: rand.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-rand.obj `if test -f 'rand.c'; then $(CYGPATH_W) 'rand.c'; else $(CYGPATH_W) '$(srcdir)/rand.c'; fi`

libco_a-realloc.o: realloc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-realloc.o `test -f 'realloc.c' || echo '$(srcdir)/'`realloc.c

libco_a-realloc.obj: realloc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-realloc.obj `if test -f 'realloc.c'; then $(CYGPATH_W) 'realloc.c'; else $(CYGPATH_W) '$(srcdir)/realloc.c'; fi`

libco_a-strtol.o: strtol.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-strtol.o `test -f 'strtol.c' || echo '$(srcdir)/'`strtol.c

libco_a-strtol.obj: strtol.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-strtol.obj `if test -f 'strtol.c'; then $(CYGPATH_W) 'strtol.c'; else $(CYGPATH_W) '$(srcdir)/strtol.c'; fi`

libco_a-strtoul.o: strtoul.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-strtoul.o `test -f 'strtoul.c' || echo '$(srcdir)/'`strtoul.c

libco_a-strtoul.obj: strtoul.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-strtoul.obj `if test -f 'strtoul.c'; then $(CYGPATH_W) 'strtoul.c'; else $(CYGPATH_W) '$(srcdir)/strtoul.c'; fi`

libco_a-wcstombs.o: wcstombs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-wcstombs.o `test -f 'wcstombs.c' || echo '$(srcdir)/'`wcstombs.c

libco_a-wcstombs.obj: wcstombs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-wcstombs.obj `if test -f 'wcstombs.c'; then $(CYGPATH_W) 'wcstombs.c'; else $(CYGPATH_W) '$(srcdir)/wcstombs.c'; fi`

libco_a-wctomb.o: wctomb.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-wctomb.o `test -f 'wctomb.c' || echo '$(srcdir)/'`wctomb.c

libco_a-wctomb.obj: wctomb.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-wctomb.obj `if test -f 'wctomb.c'; then $(CYGPATH_W) 'wctomb.c'; else $(CYGPATH_W) '$(srcdir)/wctomb.c'; fi`

libco_a-_memchr.o: _memchr.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-_memchr.o `test -f '_memchr.c' || echo '$(srcdir)/'`_memchr.c

libco_a-_memchr.obj: _memchr.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-_memchr.obj `if test -f '_memchr.c'; then $(CYGPATH_W) '_memchr.c'; else $(CYGPATH_W) '$(srcdir)/_memchr.c'; fi`

libco_a-_memcmp.o: _memcmp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-_memcmp.o `test -f '_memcmp.c' || echo '$(srcdir)/'`_memcmp.c

libco_a-_memcmp.obj: _memcmp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-_memcmp.obj `if test -f '_memcmp.c'; then $(CYGPATH_W) '_memcmp.c'; else $(CYGPATH_W) '$(srcdir)/_memcmp.c'; fi`

libco_a-__memcpy.o: __memcpy.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-__memcpy.o `test -f '__memcpy.c' || echo '$(srcdir)/'`__memcpy.c

libco_a-__memcpy.obj: __memcpy.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-__memcpy.obj `if test -f '__memcpy.c'; then $(CYGPATH_W) '__memcpy.c'; else $(CYGPATH_W) '$(srcdir)/__memcpy.c'; fi`

libco_a-memcpy.o: memcpy.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-memcpy.o `test -f 'memcpy.c' || echo '$(srcdir)/'`memcpy.c

libco_a-memcpy.obj: memcpy.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-memcpy.obj `if test -f 'memcpy.c'; then $(CYGPATH_W) 'memcpy.c'; else $(CYGPATH_W) '$(srcdir)/memcpy.c'; fi`

libco_a-_memmove.o: _memmove.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-_memmove.o `test -f '_memmove.c' || echo '$(srcdir)/'`_memmove.c

libco_a-_memmove.obj: _memmove.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-_memmove.obj `if test -f '_memmove.c'; then $(CYGPATH_W) '_memmove.c'; else $(CYGPATH_W) '$(srcdir)/_memmove.c'; fi`

libco_a-_memset.o: _memset.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-_memset.o `test -f '_memset.c' || echo '$(srcdir)/'`_memset.c

libco_a-_memset.obj: _memset.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-_memset.obj `if test -f '_memset.c'; then $(CYGPATH_W) '_memset.c'; else $(CYGPATH_W) '$(srcdir)/_memset.c'; fi`

libco_a-_strcat.o: _strcat.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-_strcat.o `test -f '_strcat.c' || echo '$(srcdir)/'`_strcat.c

libco_a-_strcat.obj: _strcat.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-_strcat.obj `if test -f '_strcat.c'; then $(CYGPATH_W) '_strcat.c'; else $(CYGPATH_W) '$(srcdir)/_strcat.c'; fi`

libco_a-_strchr.o: _strchr.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-_strchr.o `test -f '_strchr.c' || echo '$(srcdir)/'`_strchr.c

libco_a-_strchr.obj: _strchr.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-_strchr.obj `if test -f '_strchr.c'; then $(CYGPATH_W) '_strchr.c'; else $(CYGPATH_W) '$(srcdir)/_strchr.c'; fi`

libco_a-_strcmp.o: _strcmp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-_strcmp.o `test -f '_strcmp.c' || echo '$(srcdir)/'`_strcmp.c

libco_a-_strcmp.obj: _strcmp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-_strcmp.obj `if test -f '_strcmp.c'; then $(CYGPATH_W) '_strcmp.c'; else $(CYGPATH_W) '$(srcdir)/_strcmp.c'; fi`

libco_a-_strcpy.o: _strcpy.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-_strcpy.o `test -f '_strcpy.c' || echo '$(srcdir)/'`_strcpy.c

libco_a-_strcpy.obj: _strcpy.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-_strcpy.obj `if test -f '_strcpy.c'; then $(CYGPATH_W) '_strcpy.c'; else $(CYGPATH_W) '$(srcdir)/_strcpy.c'; fi`

libco_a-_strcspn.o: _strcspn.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-_strcspn.o `test -f '_strcspn.c' || echo '$(srcdir)/'`_strcspn.c

libco_a-_strcspn.obj: _strcspn.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-_strcspn.obj `if test -f '_strcspn.c'; then $(CYGPATH_W) '_strcspn.c'; else $(CYGPATH_W) '$(srcdir)/_strcspn.c'; fi`

libco_a-_strlen.o: _strlen.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-_strlen.o `test -f '_strlen.c' || echo '$(srcdir)/'`_strlen.c

libco_a-_strlen.obj: _strlen.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-_strlen.obj `if test -f '_strlen.c'; then $(CYGPATH_W) '_strlen.c'; else $(CYGPATH_W) '$(srcdir)/_strlen.c'; fi`

libco_a-_strncat.o: _strncat.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-_strncat.o `test -f '_strncat.c' || echo '$(srcdir)/'`_strncat.c

libco_a-_strncat.obj: _strncat.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-_strncat.obj `if test -f '_strncat.c'; then $(CYGPATH_W) '_strncat.c'; else $(CYGPATH_W) '$(srcdir)/_strncat.c'; fi`

libco_a-_strncmp.o: _strncmp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-_strncmp.o `test -f '_strncmp.c' || echo '$(srcdir)/'`_strncmp.c

libco_a-_strncmp.obj: _strncmp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-_strncmp.obj `if test -f '_strncmp.c'; then $(CYGPATH_W) '_strncmp.c'; else $(CYGPATH_W) '$(srcdir)/_strncmp.c'; fi`

libco_a-_strncpy.o: _strncpy.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-_strncpy.o `test -f '_strncpy.c' || echo '$(srcdir)/'`_strncpy.c

libco_a-_strncpy.obj: _strncpy.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-_strncpy.obj `if test -f '_strncpy.c'; then $(CYGPATH_W) '_strncpy.c'; else $(CYGPATH_W) '$(srcdir)/_strncpy.c'; fi`

libco_a-_strpbrk.o: _strpbrk.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-_strpbrk.o `test -f '_strpbrk.c' || echo '$(srcdir)/'`_strpbrk.c

libco_a-_strpbrk.obj: _strpbrk.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-_strpbrk.obj `if test -f '_strpbrk.c'; then $(CYGPATH_W) '_strpbrk.c'; else $(CYGPATH_W) '$(srcdir)/_strpbrk.c'; fi`

libco_a-_strrchr.o: _strrchr.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-_strrchr.o `test -f '_strrchr.c' || echo '$(srcdir)/'`_strrchr.c

libco_a-_strrchr.obj: _strrchr.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-_strrchr.obj `if test -f '_strrchr.c'; then $(CYGPATH_W) '_strrchr.c'; else $(CYGPATH_W) '$(srcdir)/_strrchr.c'; fi`

libco_a-_strspn.o: _strspn.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-_strspn.o `test -f '_strspn.c' || echo '$(srcdir)/'`_strspn.c

libco_a-_strspn.obj: _strspn.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-_strspn.obj `if test -f '_strspn.c'; then $(CYGPATH_W) '_strspn.c'; else $(CYGPATH_W) '$(srcdir)/_strspn.c'; fi`

libco_a-_strstr.o: _strstr.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-_strstr.o `test -f '_strstr.c' || echo '$(srcdir)/'`_strstr.c

libco_a-_strstr.obj: _strstr.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-_strstr.obj `if test -f '_strstr.c'; then $(CYGPATH_W) '_strstr.c'; else $(CYGPATH_W) '$(srcdir)/_strstr.c'; fi`

libco_a-_strtok.o: _strtok.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-_strtok.o `test -f '_strtok.c' || echo '$(srcdir)/'`_strtok.c

libco_a-_strtok.obj: _strtok.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-_strtok.obj `if test -f '_strtok.c'; then $(CYGPATH_W) '_strtok.c'; else $(CYGPATH_W) '$(srcdir)/_strtok.c'; fi`

libco_a-strxfrm.o: strxfrm.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-strxfrm.o `test -f 'strxfrm.c' || echo '$(srcdir)/'`strxfrm.c

libco_a-strxfrm.obj: strxfrm.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-strxfrm.obj `if test -f 'strxfrm.c'; then $(CYGPATH_W) 'strxfrm.c'; else $(CYGPATH_W) '$(srcdir)/strxfrm.c'; fi`

libco_a-c16rtomb.o: c16rtomb.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-c16rtomb.o `test -f 'c16rtomb.c' || echo '$(srcdir)/'`c16rtomb.c

libco_a-c16rtomb.obj: c16rtomb.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-c16rtomb.obj `if test -f 'c16rtomb.c'; then $(CYGPATH_W) 'c16rtomb.c'; else $(CYGPATH_W) '$(srcdir)/c16rtomb.c'; fi`

libco_a-c16stombs.o: c16stombs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-c16stombs.o `test -f 'c16stombs.c' || echo '$(srcdir)/'`c16stombs.c

libco_a-c16stombs.obj: c16stombs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-c16stombs.obj `if test -f 'c16stombs.c'; then $(CYGPATH_W) 'c16stombs.c'; else $(CYGPATH_W) '$(srcdir)/c16stombs.c'; fi`

libco_a-c32rtomb.o: c32rtomb.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-c32rtomb.o `test -f 'c32rtomb.c' || echo '$(srcdir)/'`c32rtomb.c

libco_a-c32rtomb.obj: c32rtomb.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-c32rtomb.obj `if test -f 'c32rtomb.c'; then $(CYGPATH_W) 'c32rtomb.c'; else $(CYGPATH_W) '$(srcdir)/c32rtomb.c'; fi`

libco_a-mbrtoc16.o: mbrtoc16.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-mbrtoc16.o `test -f 'mbrtoc16.c' || echo '$(srcdir)/'`mbrtoc16.c

libco_a-mbrtoc16.obj: mbrtoc16.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-mbrtoc16.obj `if test -f 'mbrtoc16.c'; then $(CYGPATH_W) 'mbrtoc16.c'; else $(CYGPATH_W) '$(srcdir)/mbrtoc16.c'; fi`

libco_a-mbrtoc32.o: mbrtoc32.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-mbrtoc32.o `test -f 'mbrtoc32.c' || echo '$(srcdir)/'`mbrtoc32.c

libco_a-mbrtoc32.obj: mbrtoc32.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-mbrtoc32.obj `if test -f 'mbrtoc32.c'; then $(CYGPATH_W) 'mbrtoc32.c'; else $(CYGPATH_W) '$(srcdir)/mbrtoc32.c'; fi`

libco_a-mbstoc16s.o: mbstoc16s.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-mbstoc16s.o `test -f 'mbstoc16s.c' || echo '$(srcdir)/'`mbstoc16s.c

libco_a-mbstoc16s.obj: mbstoc16s.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-mbstoc16s.obj `if test -f 'mbstoc16s.c'; then $(CYGPATH_W) 'mbstoc16s.c'; else $(CYGPATH_W) '$(srcdir)/mbstoc16s.c'; fi`

libco_a-btowc.o: btowc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-btowc.o `test -f 'btowc.c' || echo '$(srcdir)/'`btowc.c

libco_a-btowc.obj: btowc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-btowc.obj `if test -f 'btowc.c'; then $(CYGPATH_W) 'btowc.c'; else $(CYGPATH_W) '$(srcdir)/btowc.c'; fi`

libco_a-mbrlen.o: mbrlen.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-mbrlen.o `test -f 'mbrlen.c' || echo '$(srcdir)/'`mbrlen.c

libco_a-mbrlen.obj: mbrlen.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-mbrlen.obj `if test -f 'mbrlen.c'; then $(CYGPATH_W) 'mbrlen.c'; else $(CYGPATH_W) '$(srcdir)/mbrlen.c'; fi`

libco_a-mbrtowc.o: mbrtowc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-mbrtowc.o `test -f 'mbrtowc.c' || echo '$(srcdir)/'`mbrtowc.c

libco_a-mbrtowc.obj: mbrtowc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-mbrtowc.obj `if test -f 'mbrtowc.c'; then $(CYGPATH_W) 'mbrtowc.c'; else $(CYGPATH_W) '$(srcdir)/mbrtowc.c'; fi`

libco_a-mbsinit.o: mbsinit.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-mbsinit.o `test -f 'mbsinit.c' || echo '$(srcdir)/'`mbsinit.c

libco_a-mbsinit.obj: mbsinit.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-mbsinit.obj `if test -f 'mbsinit.c'; then $(CYGPATH_W) 'mbsinit.c'; else $(CYGPATH_W) '$(srcdir)/mbsinit.c'; fi`

libco_a-wcrtomb.o: wcrtomb.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-wcrtomb.o `test -f 'wcrtomb.c' || echo '$(srcdir)/'`wcrtomb.c

libco_a-wcrtomb.obj: wcrtomb.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-wcrtomb.obj `if test -f 'wcrtomb.c'; then $(CYGPATH_W) 'wcrtomb.c'; else $(CYGPATH_W) '$(srcdir)/wcrtomb.c'; fi`

libco_a-wcscmp.o: wcscmp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-wcscmp.o `test -f 'wcscmp.c' || echo '$(srcdir)/'`wcscmp.c

libco_a-wcscmp.obj: wcscmp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-wcscmp.obj `if test -f 'wcscmp.c'; then $(CYGPATH_W) 'wcscmp.c'; else $(CYGPATH_W) '$(srcdir)/wcscmp.c'; fi`

libco_a-wcslen.o: wcslen.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-wcslen.o `test -f 'wcslen.c' || echo '$(srcdir)/'`wcslen.c

libco_a-wcslen.obj: wcslen.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-wcslen.obj `if test -f 'wcslen.c'; then $(CYGPATH_W) 'wcslen.c'; else $(CYGPATH_W) '$(srcdir)/wcslen.c'; fi`

libco_a-wctob.o: wctob.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-wctob.o `test -f 'wctob.c' || echo '$(srcdir)/'`wctob.c

libco_a-wctob.obj: wctob.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libco_a_CFLAGS) $(CFLAGS) -c -o libco_a-wctob.obj `if test -f 'wctob.c'; then $(CYGPATH_W) 'wctob.c'; else $(CYGPATH_W) '$(srcdir)/wctob.c'; fi`

libcox_a-__assert.o: __assert.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-__assert.o `test -f '__assert.c' || echo '$(srcdir)/'`__assert.c

libcox_a-__assert.obj: __assert.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-__assert.obj `if test -f '__assert.c'; then $(CYGPATH_W) '__assert.c'; else $(CYGPATH_W) '$(srcdir)/__assert.c'; fi`

libcox_a-isalnum.o: isalnum.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-isalnum.o `test -f 'isalnum.c' || echo '$(srcdir)/'`isalnum.c

libcox_a-isalnum.obj: isalnum.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-isalnum.obj `if test -f 'isalnum.c'; then $(CYGPATH_W) 'isalnum.c'; else $(CYGPATH_W) '$(srcdir)/isalnum.c'; fi`

libcox_a-isalpha.o: isalpha.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-isalpha.o `test -f 'isalpha.c' || echo '$(srcdir)/'`isalpha.c

libcox_a-isalpha.obj: isalpha.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-isalpha.obj `if test -f 'isalpha.c'; then $(CYGPATH_W) 'isalpha.c'; else $(CYGPATH_W) '$(srcdir)/isalpha.c'; fi`

libcox_a-isblank.o: isblank.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-isblank.o `test -f 'isblank.c' || echo '$(srcdir)/'`isblank.c

libcox_a-isblank.obj: isblank.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-isblank.obj `if test -f 'isblank.c'; then $(CYGPATH_W) 'isblank.c'; else $(CYGPATH_W) '$(srcdir)/isblank.c'; fi`

libcox_a-iscntrl.o: iscntrl.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-iscntrl.o `test -f 'iscntrl.c' || echo '$(srcdir)/'`iscntrl.c

libcox_a-iscntrl.obj: iscntrl.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-iscntrl.obj `if test -f 'iscntrl.c'; then $(CYGPATH_W) 'iscntrl.c'; else $(CYGPATH_W) '$(srcdir)/iscntrl.c'; fi`

libcox_a-isdigit.o: isdigit.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-isdigit.o `test -f 'isdigit.c' || echo '$(srcdir)/'`isdigit.c

libcox_a-isdigit.obj: isdigit.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-isdigit.obj `if test -f 'isdigit.c'; then $(CYGPATH_W) 'isdigit.c'; else $(CYGPATH_W) '$(srcdir)/isdigit.c'; fi`

libcox_a-isgraph.o: isgraph.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-isgraph.o `test -f 'isgraph.c' || echo '$(srcdir)/'`isgraph.c

libcox_a-isgraph.obj: isgraph.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-isgraph.obj `if test -f 'isgraph.c'; then $(CYGPATH_W) 'isgraph.c'; else $(CYGPATH_W) '$(srcdir)/isgraph.c'; fi`

libcox_a-islower.o: islower.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-islower.o `test -f 'islower.c' || echo '$(srcdir)/'`islower.c

libcox_a-islower.obj: islower.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-islower.obj `if test -f 'islower.c'; then $(CYGPATH_W) 'islower.c'; else $(CYGPATH_W) '$(srcdir)/islower.c'; fi`

libcox_a-isprint.o: isprint.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-isprint.o `test -f 'isprint.c' || echo '$(srcdir)/'`isprint.c

libcox_a-isprint.obj: isprint.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-isprint.obj `if test -f 'isprint.c'; then $(CYGPATH_W) 'isprint.c'; else $(CYGPATH_W) '$(srcdir)/isprint.c'; fi`

libcox_a-ispunct.o: ispunct.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-ispunct.o `test -f 'ispunct.c' || echo '$(srcdir)/'`ispunct.c

libcox_a-ispunct.obj: ispunct.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-ispunct.obj `if test -f 'ispunct.c'; then $(CYGPATH_W) 'ispunct.c'; else $(CYGPATH_W) '$(srcdir)/ispunct.c'; fi`

libcox_a-isspace.o: isspace.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-isspace.o `test -f 'isspace.c' || echo '$(srcdir)/'`isspace.c

libcox_a-isspace.obj: isspace.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-isspace.obj `if test -f 'isspace.c'; then $(CYGPATH_W) 'isspace.c'; else $(CYGPATH_W) '$(srcdir)/isspace.c'; fi`

libcox_a-isupper.o: isupper.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-isupper.o `test -f 'isupper.c' || echo '$(srcdir)/'`isupper.c

libcox_a-isupper.obj: isupper.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-isupper.obj `if test -f 'isupper.c'; then $(CYGPATH_W) 'isupper.c'; else $(CYGPATH_W) '$(srcdir)/isupper.c'; fi`

libcox_a-isxdigit.o: isxdigit.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-isxdigit.o `test -f 'isxdigit.c' || echo '$(srcdir)/'`isxdigit.c

libcox_a-isxdigit.obj: isxdigit.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-isxdigit.obj `if test -f 'isxdigit.c'; then $(CYGPATH_W) 'isxdigit.c'; else $(CYGPATH_W) '$(srcdir)/isxdigit.c'; fi`

libcox_a-tolower.o: tolower.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-tolower.o `test -f 'tolower.c' || echo '$(srcdir)/'`tolower.c

libcox_a-tolower.obj: tolower.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-tolower.obj `if test -f 'tolower.c'; then $(CYGPATH_W) 'tolower.c'; else $(CYGPATH_W) '$(srcdir)/tolower.c'; fi`

libcox_a-toupper.o: toupper.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-toupper.o `test -f 'toupper.c' || echo '$(srcdir)/'`toupper.c

libcox_a-toupper.obj: toupper.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-toupper.obj `if test -f 'toupper.c'; then $(CYGPATH_W) 'toupper.c'; else $(CYGPATH_W) '$(srcdir)/toupper.c'; fi`

libcox_a-errno.o: errno.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-errno.o `test -f 'errno.c' || echo '$(srcdir)/'`errno.c

libcox_a-errno.obj: errno.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-errno.obj `if test -f 'errno.c'; then $(CYGPATH_W) 'errno.c'; else $(CYGPATH_W) '$(srcdir)/errno.c'; fi`

libcox_a-fprintf.o: fprintf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-fprintf.o `test -f 'fprintf.c' || echo '$(srcdir)/'`fprintf.c

libcox_a-fprintf.obj: fprintf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-fprintf.obj `if test -f 'fprintf.c'; then $(CYGPATH_W) 'fprintf.c'; else $(CYGPATH_W) '$(srcdir)/fprintf.c'; fi`

libcox_a-fputc.o: fputc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-fputc.o `test -f 'fputc.c' || echo '$(srcdir)/'`fputc.c

libcox_a-fputc.obj: fputc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-fputc.obj `if test -f 'fputc.c'; then $(CYGPATH_W) 'fputc.c'; else $(CYGPATH_W) '$(srcdir)/fputc.c'; fi`

libcox_a-fputs.o: fputs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-fputs.o `test -f 'fputs.c' || echo '$(srcdir)/'`fputs.c

libcox_a-fputs.obj: fputs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-fputs.obj `if test -f 'fputs.c'; then $(CYGPATH_W) 'fputs.c'; else $(CYGPATH_W) '$(srcdir)/fputs.c'; fi`

libcox_a-getchar.o: getchar.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-getchar.o `test -f 'getchar.c' || echo '$(srcdir)/'`getchar.c

libcox_a-getchar.obj: getchar.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-getchar.obj `if test -f 'getchar.c'; then $(CYGPATH_W) 'getchar.c'; else $(CYGPATH_W) '$(srcdir)/getchar.c'; fi`

libcox_a-gets.o: gets.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-gets.o `test -f 'gets.c' || echo '$(srcdir)/'`gets.c

libcox_a-gets.obj: gets.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-gets.obj `if test -f 'gets.c'; then $(CYGPATH_W) 'gets.c'; else $(CYGPATH_W) '$(srcdir)/gets.c'; fi`

libcox_a-printf.o: printf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-printf.o `test -f 'printf.c' || echo '$(srcdir)/'`printf.c

libcox_a-printf.obj: printf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-printf.obj `if test -f 'printf.c'; then $(CYGPATH_W) 'printf.c'; else $(CYGPATH_W) '$(srcdir)/printf.c'; fi`

libcox_a-printfl.o: printfl.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-printfl.o `test -f 'printfl.c' || echo '$(srcdir)/'`printfl.c

libcox_a-printfl.obj: printfl.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-printfl.obj `if test -f 'printfl.c'; then $(CYGPATH_W) 'printfl.c'; else $(CYGPATH_W) '$(srcdir)/printfl.c'; fi`

libcox_a-putchar.o: putchar.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-putchar.o `test -f 'putchar.c' || echo '$(srcdir)/'`putchar.c

libcox_a-putchar.obj: putchar.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-putchar.obj `if test -f 'putchar.c'; then $(CYGPATH_W) 'putchar.c'; else $(CYGPATH_W) '$(srcdir)/putchar.c'; fi`

libcox_a-puts.o: puts.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-puts.o `test -f 'puts.c' || echo '$(srcdir)/'`puts.c

libcox_a-puts.obj: puts.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-puts.obj `if test -f 'puts.c'; then $(CYGPATH_W) 'puts.c'; else $(CYGPATH_W) '$(srcdir)/puts.c'; fi`

libcox_a-sprintf.o: sprintf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-sprintf.o `test -f 'sprintf.c' || echo '$(srcdir)/'`sprintf.c

libcox_a-sprintf.obj: sprintf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-sprintf.obj `if test -f 'sprintf.c'; then $(CYGPATH_W) 'sprintf.c'; else $(CYGPATH_W) '$(srcdir)/sprintf.c'; fi`

libcox_a-streams.o: streams.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-streams.o `test -f 'streams.c' || echo '$(srcdir)/'`streams.c

libcox_a-streams.obj: streams.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-streams.obj `if test -f 'streams.c'; then $(CYGPATH_W) 'streams.c'; else $(CYGPATH_W) '$(srcdir)/streams.c'; fi`

libcox_a-strmgpsim.o: strmgpsim.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-strmgpsim.o `test -f 'strmgpsim.c' || echo '$(srcdir)/'`strmgpsim.c

libcox_a-strmgpsim.obj: strmgpsim.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-strmgpsim.obj `if test -f 'strmgpsim.c'; then $(CYGPATH_W) 'strmgpsim.c'; else $(CYGPATH_W) '$(srcdir)/strmgpsim.c'; fi`

libcox_a-strmmssp.o: strmmssp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-strmmssp.o `test -f 'strmmssp.c' || echo '$(srcdir)/'`strmmssp.c

libcox_a-strmmssp.obj: strmmssp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-strmmssp.obj `if test -f 'strmmssp.c'; then $(CYGPATH_W) 'strmmssp.c'; else $(CYGPATH_W) '$(srcdir)/strmmssp.c'; fi`

libcox_a-strmusart.o: strmusart.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-strmusart.o `test -f 'strmusart.c' || echo '$(srcdir)/'`strmusart.c

libcox_a-strmusart.obj: strmusart.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-strmusart.obj `if test -f 'strmusart.c'; then $(CYGPATH_W) 'strmusart.c'; else $(CYGPATH_W) '$(srcdir)/strmusart.c'; fi`

libcox_a-vfprintf.o: vfprintf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-vfprintf.o `test -f 'vfprintf.c' || echo '$(srcdir)/'`vfprintf.c

libcox_a-vfprintf.obj: vfprintf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-vfprintf.obj `if test -f 'vfprintf.c'; then $(CYGPATH_W) 'vfprintf.c'; else $(CYGPATH_W) '$(srcdir)/vfprintf.c'; fi`

libcox_a-vprintf.o: vprintf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-vprintf.o `test -f 'vprintf.c' || echo '$(srcdir)/'`vprintf.c

libcox_a-vprintf.obj: vprintf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-vprintf.obj `if test -f 'vprintf.c'; then $(CYGPATH_W) 'vprintf.c'; else $(CYGPATH_W) '$(srcdir)/vprintf.c'; fi`

libcox_a-vsprintf.o: vsprintf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-vsprintf.o `test -f 'vsprintf.c' || echo '$(srcdir)/'`vsprintf.c

libcox_a-vsprintf.obj: vsprintf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-vsprintf.obj `if test -f 'vsprintf.c'; then $(CYGPATH_W) 'vsprintf.c'; else $(CYGPATH_W) '$(srcdir)/vsprintf.c'; fi`

libcox_a-_atof.o: _atof.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-_atof.o `test -f '_atof.c' || echo '$(srcdir)/'`_atof.c

libcox_a-_atof.obj: _atof.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-_atof.obj `if test -f '_atof.c'; then $(CYGPATH_W) '_atof.c'; else $(CYGPATH_W) '$(srcdir)/_atof.c'; fi`

libcox_a-_ftoa.o: _ftoa.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-_ftoa.o `test -f '_ftoa.c' || echo '$(srcdir)/'`_ftoa.c

libcox_a-_ftoa.obj: _ftoa.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-_ftoa.obj `if test -f '_ftoa.c'; then $(CYGPATH_W) '_ftoa.c'; else $(CYGPATH_W) '$(srcdir)/_ftoa.c'; fi`

libcox_a-__itoa.o: __itoa.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-__itoa.o `test -f '__itoa.c' || echo '$(srcdir)/'`__itoa.c

libcox_a-__itoa.obj: __itoa.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-__itoa.obj `if test -f '__itoa.c'; then $(CYGPATH_W) '__itoa.c'; else $(CYGPATH_W) '$(srcdir)/__itoa.c'; fi`

libcox_a-__ltoa.o: __ltoa.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-__ltoa.o `test -f '__ltoa.c' || echo '$(srcdir)/'`__ltoa.c

libcox_a-__ltoa.obj: __ltoa.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-__ltoa.obj `if test -f '__ltoa.c'; then $(CYGPATH_W) '__ltoa.c'; else $(CYGPATH_W) '$(srcdir)/__ltoa.c'; fi`

libcox_a-abs.o: abs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-abs.o `test -f 'abs.c' || echo '$(srcdir)/'`abs.c

libcox_a-abs.obj: abs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-abs.obj `if test -f 'abs.c'; then $(CYGPATH_W) 'abs.c'; else $(CYGPATH_W) '$(srcdir)/abs.c'; fi`

libcox_a-aligned_alloc.o: aligned_alloc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-aligned_alloc.o `test -f 'aligned_alloc.c' || echo '$(srcdir)/'`aligned_alloc.c

libcox_a-aligned_alloc.obj: aligned_alloc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-aligned_alloc.obj `if test -f 'aligned_alloc.c'; then $(CYGPATH_W) 'aligned_alloc.c'; else $(CYGPATH_W) '$(srcdir)/aligned_alloc.c'; fi`

libcox_a-atoi.o: atoi.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-atoi.o `test -f 'atoi.c' || echo '$(srcdir)/'`atoi.c

libcox_a-atoi.obj: atoi.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-atoi.obj `if test -f 'atoi.c'; then $(CYGPATH_W) 'atoi.c'; else $(CYGPATH_W) '$(srcdir)/atoi.c'; fi`

libcox_a-atol.o: atol.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-atol.o `test -f 'atol.c' || echo '$(srcdir)/'`atol.c

libcox_a-atol.obj: atol.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-atol.obj `if test -f 'atol.c'; then $(CYGPATH_W) 'atol.c'; else $(CYGPATH_W) '$(srcdir)/atol.c'; fi`

libcox_a-bsearch.o: bsearch.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-bsearch.o `test -f 'bsearch.c' || echo '$(srcdir)/'`bsearch.c

libcox_a-bsearch.obj: bsearch.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-bsearch.obj `if test -f 'bsearch.c'; then $(CYGPATH_W) 'bsearch.c'; else $(CYGPATH_W) '$(srcdir)/bsearch.c'; fi`

libcox_a-_calloc.o: _calloc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-_calloc.o `test -f '_calloc.c' || echo '$(srcdir)/'`_calloc.c

libcox_a-_calloc.obj: _calloc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-_calloc.obj `if test -f '_calloc.c'; then $(CYGPATH_W) '_calloc.c'; else $(CYGPATH_W) '$(srcdir)/_calloc.c'; fi`

libcox_a-free.o: free.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-free.o `test -f 'free.c' || echo '$(srcdir)/'`free.c

libcox_a-free.obj: free.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-free.obj `if test -f 'free.c'; then $(CYGPATH_W) 'free.c'; else $(CYGPATH_W) '$(srcdir)/free.c'; fi`

libcox_a-labs.o: labs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-labs.o `test -f 'labs.c' || echo '$(srcdir)/'`labs.c

libcox_a-labs.obj: labs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-labs.obj `if test -f 'labs.c'; then $(CYGPATH_W) 'labs.c'; else $(CYGPATH_W) '$(srcdir)/labs.c'; fi`

libcox_a-malloc.o: malloc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-malloc.o `test -f 'malloc.c' || echo '$(srcdir)/'`malloc.c

libcox_a-malloc.obj: malloc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-malloc.obj `if test -f 'malloc.c'; then $(CYGPATH_W) 'malloc.c'; else $(CYGPATH_W) '$(srcdir)/malloc.c'; fi`

libcox_a-mblen.o: mblen.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-mblen.o `test -f 'mblen.c' || echo '$(srcdir)/'`mblen.c

libcox_a-mblen.obj: mblen.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-mblen.obj `if test -f 'mblen.c'; then $(CYGPATH_W) 'mblen.c'; else $(CYGPATH_W) '$(srcdir)/mblen.c'; fi`

libcox_a-mbstowcs.o: mbstowcs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-mbstowcs.o `test -f 'mbstowcs.c' || echo '$(srcdir)/'`mbstowcs.c

libcox_a-mbstowcs.obj: mbstowcs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-mbstowcs.obj `if test -f 'mbstowcs.c'; then $(CYGPATH_W) 'mbstowcs.c'; else $(CYGPATH_W) '$(srcdir)/mbstowcs.c'; fi`

libcox_a-mbtowc.o: mbtowc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-mbtowc.o `test -f 'mbtowc.c' || echo '$(srcdir)/'`mbtowc.c

libcox_a-mbtowc.obj: mbtowc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-mbtowc.obj `if test -f 'mbtowc.c'; then $(CYGPATH_W) 'mbtowc.c'; else $(CYGPATH_W) '$(srcdir)/mbtowc.c'; fi`

libcox_a-memfree.o: memfree.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-memfree.o `test -f 'memfree.c' || echo '$(srcdir)/'`memfree.c

libcox_a-memfree.obj: memfree.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-memfree.obj `if test -f 'memfree.c'; then $(CYGPATH_W) 'memfree.c'; else $(CYGPATH_W) '$(srcdir)/memfree.c'; fi`

libcox_a-memfreemax.o: memfreemax.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-memfreemax.o `test -f 'memfreemax.c' || echo '$(srcdir)/'`memfreemax.c

libcox_a-memfreemax.obj: memfreemax.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-memfreemax.obj `if test -f 'memfreemax.c'; then $(CYGPATH_W) 'memfreemax.c'; else $(CYGPATH_W) '$(srcdir)/memfreemax.c'; fi`

libcox_a-memmisc.o: memmisc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-memmisc.o `test -f 'memmisc.c' || echo '$(srcdir)/'`memmisc.c

libcox_a-memmisc.obj: memmisc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-memmisc.obj `if test -f 'memmisc.c'; then $(CYGPATH_W) 'memmisc.c'; else $(CYGPATH_W) '$(srcdir)/memmisc.c'; fi`

libcox_a-qsort.o: qsort.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-qsort.o `test -f 'qsort.c' || echo '$(srcdir)/'`qsort.c

libcox_a-qsort.obj: qsort.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-qsort.obj `if test -f 'qsort.c'; then $(CYGPATH_W) 'qsort.c'; else $(CYGPATH_W) '$(srcdir)/qsort.c'; fi`

libcox_a-rand.o: rand.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-rand.o `test -f 'rand.c' || echo '$(srcdir)/'`rand.c

libcox_a-rand.obj: rand.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-rand.obj `if test -f 'rand.c'; then $(CYGPATH_W) 'rand.c'; else $(CYGPATH_W) '$(srcdir)/rand.c'; fi`

libcox_a-realloc.o: realloc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-realloc.o `test -f 'realloc.c' || echo '$(srcdir)/'`realloc.c

libcox_a-realloc.obj: realloc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-realloc.obj `if test -f 'realloc.c'; then $(CYGPATH_W) 'realloc.c'; else $(CYGPATH_W) '$(srcdir)/realloc.c'; fi`

libcox_a-strtol.o: strtol.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-strtol.o `test -f 'strtol.c' || echo '$(srcdir)/'`strtol.c

libcox_a-strtol.obj: strtol.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-strtol.obj `if test -f 'strtol.c'; then $(CYGPATH_W) 'strtol.c'; else $(CYGPATH_W) '$(srcdir)/strtol.c'; fi`

libcox_a-strtoul.o: strtoul.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-strtoul.o `test -f 'strtoul.c' || echo '$(srcdir)/'`strtoul.c

libcox_a-strtoul.obj: strtoul.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-strtoul.obj `if test -f 'strtoul.c'; then $(CYGPATH_W) 'strtoul.c'; else $(CYGPATH_W) '$(srcdir)/strtoul.c'; fi`

libcox_a-wcstombs.o: wcstombs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-wcstombs.o `test -f 'wcstombs.c' || echo '$(srcdir)/'`wcstombs.c

libcox_a-wcstombs.obj: wcstombs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-wcstombs.obj `if test -f 'wcstombs.c'; then $(CYGPATH_W) 'wcstombs.c'; else $(CYGPATH_W) '$(srcdir)/wcstombs.c'; fi`

libcox_a-wctomb.o: wctomb.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-wctomb.o `test -f 'wctomb.c' || echo '$(srcdir)/'`wctomb.c

libcox_a-wctomb.obj: wctomb.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-wctomb.obj `if test -f 'wctomb.c'; then $(CYGPATH_W) 'wctomb.c'; else $(CYGPATH_W) '$(srcdir)/wctomb.c'; fi`

libcox_a-_memchr.o: _memchr.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-_memchr.o `test -f '_memchr.c' || echo '$(srcdir)/'`_memchr.c

libcox_a-_memchr.obj: _memchr.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-_memchr.obj `if test -f '_memchr.c'; then $(CYGPATH_W) '_memchr.c'; else $(CYGPATH_W) '$(srcdir)/_memchr.c'; fi`

libcox_a-_memcmp.o: _memcmp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-_memcmp.o `test -f '_memcmp.c' || echo '$(srcdir)/'`_memcmp.c

libcox_a-_memcmp.obj: _memcmp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-_memcmp.obj `if test -f '_memcmp.c'; then $(CYGPATH_W) '_memcmp.c'; else $(CYGPATH_W) '$(srcdir)/_memcmp.c'; fi`

libcox_a-__memcpy.o: __memcpy.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-__memcpy.o `test -f '__memcpy.c' || echo '$(srcdir)/'`__memcpy.c

libcox_a-__memcpy.obj: __memcpy.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-__memcpy.obj `if test -f '__memcpy.c'; then $(CYGPATH_W) '__memcpy.c'; else $(CYGPATH_W) '$(srcdir)/__memcpy.c'; fi`

libcox_a-memcpy.o: memcpy.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-memcpy.o `test -f 'memcpy.c' || echo '$(srcdir)/'`memcpy.c

libcox_a-memcpy.obj: memcpy.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-memcpy.obj `if test -f 'memcpy.c'; then $(CYGPATH_W) 'memcpy.c'; else $(CYGPATH_W) '$(srcdir)/memcpy.c'; fi`

libcox_a-_memmove.o: _memmove.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-_memmove.o `test -f '_memmove.c' || echo '$(srcdir)/'`_memmove.c

libcox_a-_memmove.obj: _memmove.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-_memmove.obj `if test -f '_memmove.c'; then $(CYGPATH_W) '_memmove.c'; else $(CYGPATH_W) '$(srcdir)/_memmove.c'; fi`

libcox_a-_memset.o: _memset.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-_memset.o `test -f '_memset.c' || echo '$(srcdir)/'`_memset.c

libcox_a-_memset.obj: _memset.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-_memset.obj `if test -f '_memset.c'; then $(CYGPATH_W) '_memset.c'; else $(CYGPATH_W) '$(srcdir)/_memset.c'; fi`

libcox_a-_strcat.o: _strcat.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-_strcat.o `test -f '_strcat.c' || echo '$(srcdir)/'`_strcat.c

libcox_a-_strcat.obj: _strcat.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-_strcat.obj `if test -f '_strcat.c'; then $(CYGPATH_W) '_strcat.c'; else $(CYGPATH_W) '$(srcdir)/_strcat.c'; fi`

libcox_a-_strchr.o: _strchr.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-_strchr.o `test -f '_strchr.c' || echo '$(srcdir)/'`_strchr.c

libcox_a-_strchr.obj: _strchr.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-_strchr.obj `if test -f '_strchr.c'; then $(CYGPATH_W) '_strchr.c'; else $(CYGPATH_W) '$(srcdir)/_strchr.c'; fi`

libcox_a-_strcmp.o: _strcmp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-_strcmp.o `test -f '_strcmp.c' || echo '$(srcdir)/'`_strcmp.c

libcox_a-_strcmp.obj: _strcmp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-_strcmp.obj `if test -f '_strcmp.c'; then $(CYGPATH_W) '_strcmp.c'; else $(CYGPATH_W) '$(srcdir)/_strcmp.c'; fi`

libcox_a-_strcpy.o: _strcpy.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-_strcpy.o `test -f '_strcpy.c' || echo '$(srcdir)/'`_strcpy.c

libcox_a-_strcpy.obj: _strcpy.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-_strcpy.obj `if test -f '_strcpy.c'; then $(CYGPATH_W) '_strcpy.c'; else $(CYGPATH_W) '$(srcdir)/_strcpy.c'; fi`

libcox_a-_strcspn.o: _strcspn.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-_strcspn.o `test -f '_strcspn.c' || echo '$(srcdir)/'`_strcspn.c

libcox_a-_strcspn.obj: _strcspn.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-_strcspn.obj `if test -f '_strcspn.c'; then $(CYGPATH_W) '_strcspn.c'; else $(CYGPATH_W) '$(srcdir)/_strcspn.c'; fi`

libcox_a-_strlen.o: _strlen.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-_strlen.o `test -f '_strlen.c' || echo '$(srcdir)/'`_strlen.c

libcox_a-_strlen.obj: _strlen.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-_strlen.obj `if test -f '_strlen.c'; then $(CYGPATH_W) '_strlen.c'; else $(CYGPATH_W) '$(srcdir)/_strlen.c'; fi`

libcox_a-_strncat.o: _strncat.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-_strncat.o `test -f '_strncat.c' || echo '$(srcdir)/'`_strncat.c

libcox_a-_strncat.obj: _strncat.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-_strncat.obj `if test -f '_strncat.c'; then $(CYGPATH_W) '_strncat.c'; else $(CYGPATH_W) '$(srcdir)/_strncat.c'; fi`

libcox_a-_strncmp.o: _strncmp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-_strncmp.o `test -f '_strncmp.c' || echo '$(srcdir)/'`_strncmp.c

libcox_a-_strncmp.obj: _strncmp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-_strncmp.obj `if test -f '_strncmp.c'; then $(CYGPATH_W) '_strncmp.c'; else $(CYGPATH_W) '$(srcdir)/_strncmp.c'; fi`

libcox_a-_strncpy.o: _strncpy.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-_strncpy.o `test -f '_strncpy.c' || echo '$(srcdir)/'`_strncpy.c

libcox_a-_strncpy.obj: _strncpy.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-_strncpy.obj `if test -f '_strncpy.c'; then $(CYGPATH_W) '_strncpy.c'; else $(CYGPATH_W) '$(srcdir)/_strncpy.c'; fi`

libcox_a-_strpbrk.o: _strpbrk.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-_strpbrk.o `test -f '_strpbrk.c' || echo '$(srcdir)/'`_strpbrk.c

libcox_a-_strpbrk.obj: _strpbrk.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-_strpbrk.obj `if test -f '_strpbrk.c'; then $(CYGPATH_W) '_strpbrk.c'; else $(CYGPATH_W) '$(srcdir)/_strpbrk.c'; fi`

libcox_a-_strrchr.o: _strrchr.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-_strrchr.o `test -f '_strrchr.c' || echo '$(srcdir)/'`_strrchr.c

libcox_a-_strrchr.obj: _strrchr.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-_strrchr.obj `if test -f '_strrchr.c'; then $(CYGPATH_W) '_strrchr.c'; else $(CYGPATH_W) '$(srcdir)/_strrchr.c'; fi`

libcox_a-_strspn.o: _strspn.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-_strspn.o `test -f '_strspn.c' || echo '$(srcdir)/'`_strspn.c

libcox_a-_strspn.obj: _strspn.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-_strspn.obj `if test -f '_strspn.c'; then $(CYGPATH_W) '_strspn.c'; else $(CYGPATH_W) '$(srcdir)/_strspn.c'; fi`

libcox_a-_strstr.o: _strstr.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-_strstr.o `test -f '_strstr.c' || echo '$(srcdir)/'`_strstr.c

libcox_a-_strstr.obj: _strstr.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-_strstr.obj `if test -f '_strstr.c'; then $(CYGPATH_W) '_strstr.c'; else $(CYGPATH_W) '$(srcdir)/_strstr.c'; fi`

libcox_a-_strtok.o: _strtok.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-_strtok.o `test -f '_strtok.c' || echo '$(srcdir)/'`_strtok.c

libcox_a-_strtok.obj: _strtok.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-_strtok.obj `if test -f '_strtok.c'; then $(CYGPATH_W) '_strtok.c'; else $(CYGPATH_W) '$(srcdir)/_strtok.c'; fi`

libcox_a-strxfrm.o: strxfrm.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-strxfrm.o `test -f 'strxfrm.c' || echo '$(srcdir)/'`strxfrm.c

libcox_a-strxfrm.obj: strxfrm.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-strxfrm.obj `if test -f 'strxfrm.c'; then $(CYGPATH_W) 'strxfrm.c'; else $(CYGPATH_W) '$(srcdir)/strxfrm.c'; fi`

libcox_a-c16rtomb.o: c16rtomb.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-c16rtomb.o `test -f 'c16rtomb.c' || echo '$(srcdir)/'`c16rtomb.c

libcox_a-c16rtomb.obj: c16rtomb.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-c16rtomb.obj `if test -f 'c16rtomb.c'; then $(CYGPATH_W) 'c16rtomb.c'; else $(CYGPATH_W) '$(srcdir)/c16rtomb.c'; fi`

libcox_a-c16stombs.o: c16stombs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-c16stombs.o `test -f 'c16stombs.c' || echo '$(srcdir)/'`c16stombs.c

libcox_a-c16stombs.obj: c16stombs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-c16stombs.obj `if test -f 'c16stombs.c'; then $(CYGPATH_W) 'c16stombs.c'; else $(CYGPATH_W) '$(srcdir)/c16stombs.c'; fi`

libcox_a-c32rtomb.o: c32rtomb.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-c32rtomb.o `test -f 'c32rtomb.c' || echo '$(srcdir)/'`c32rtomb.c

libcox_a-c32rtomb.obj: c32rtomb.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-c32rtomb.obj `if test -f 'c32rtomb.c'; then $(CYGPATH_W) 'c32rtomb.c'; else $(CYGPATH_W) '$(srcdir)/c32rtomb.c'; fi`

libcox_a-mbrtoc16.o: mbrtoc16.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-mbrtoc16.o `test -f 'mbrtoc16.c' || echo '$(srcdir)/'`mbrtoc16.c

libcox_a-mbrtoc16.obj: mbrtoc16.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-mbrtoc16.obj `if test -f 'mbrtoc16.c'; then $(CYGPATH_W) 'mbrtoc16.c'; else $(CYGPATH_W) '$(srcdir)/mbrtoc16.c'; fi`

libcox_a-mbrtoc32.o: mbrtoc32.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-mbrtoc32.o `test -f 'mbrtoc32.c' || echo '$(srcdir)/'`mbrtoc32.c

libcox_a-mbrtoc32.obj: mbrtoc32.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-mbrtoc32.obj `if test -f 'mbrtoc32.c'; then $(CYGPATH_W) 'mbrtoc32.c'; else $(CYGPATH_W) '$(srcdir)/mbrtoc32.c'; fi`

libcox_a-mbstoc16s.o: mbstoc16s.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-mbstoc16s.o `test -f 'mbstoc16s.c' || echo '$(srcdir)/'`mbstoc16s.c

libcox_a-mbstoc16s.obj: mbstoc16s.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-mbstoc16s.obj `if test -f 'mbstoc16s.c'; then $(CYGPATH_W) 'mbstoc16s.c'; else $(CYGPATH_W) '$(srcdir)/mbstoc16s.c'; fi`

libcox_a-btowc.o: btowc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-btowc.o `test -f 'btowc.c' || echo '$(srcdir)/'`btowc.c

libcox_a-btowc.obj: btowc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-btowc.obj `if test -f 'btowc.c'; then $(CYGPATH_W) 'btowc.c'; else $(CYGPATH_W) '$(srcdir)/btowc.c'; fi`

libcox_a-mbrlen.o: mbrlen.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-mbrlen.o `test -f 'mbrlen.c' || echo '$(srcdir)/'`mbrlen.c

libcox_a-mbrlen.obj: mbrlen.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-mbrlen.obj `if test -f 'mbrlen.c'; then $(CYGPATH_W) 'mbrlen.c'; else $(CYGPATH_W) '$(srcdir)/mbrlen.c'; fi`

libcox_a-mbrtowc.o: mbrtowc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-mbrtowc.o `test -f 'mbrtowc.c' || echo '$(srcdir)/'`mbrtowc.c

libcox_a-mbrtowc.obj: mbrtowc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-mbrtowc.obj `if test -f 'mbrtowc.c'; then $(CYGPATH_W) 'mbrtowc.c'; else $(CYGPATH_W) '$(srcdir)/mbrtowc.c'; fi`

libcox_a-mbsinit.o: mbsinit.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-mbsinit.o `test -f 'mbsinit.c' || echo '$(srcdir)/'`mbsinit.c

libcox_a-mbsinit.obj: mbsinit.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-mbsinit.obj `if test -f 'mbsinit.c'; then $(CYGPATH_W) 'mbsinit.c'; else $(CYGPATH_W) '$(srcdir)/mbsinit.c'; fi`

libcox_a-wcrtomb.o: wcrtomb.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-wcrtomb.o `test -f 'wcrtomb.c' || echo '$(srcdir)/'`wcrtomb.c

libcox_a-wcrtomb.obj: wcrtomb.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-wcrtomb.obj `if test -f 'wcrtomb.c'; then $(CYGPATH_W) 'wcrtomb.c'; else $(CYGPATH_W) '$(srcdir)/wcrtomb.c'; fi`

libcox_a-wcscmp.o: wcscmp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-wcscmp.o `test -f 'wcscmp.c' || echo '$(srcdir)/'`wcscmp.c

libcox_a-wcscmp.obj: wcscmp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-wcscmp.obj `if test -f 'wcscmp.c'; then $(CYGPATH_W) 'wcscmp.c'; else $(CYGPATH_W) '$(srcdir)/wcscmp.c'; fi`

libcox_a-wcslen.o: wcslen.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-wcslen.o `test -f 'wcslen.c' || echo '$(srcdir)/'`wcslen.c

libcox_a-wcslen.obj: wcslen.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-wcslen.obj `if test -f 'wcslen.c'; then $(CYGPATH_W) 'wcslen.c'; else $(CYGPATH_W) '$(srcdir)/wcslen.c'; fi`

libcox_a-wctob.o: wctob.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-wctob.o `test -f 'wctob.c' || echo '$(srcdir)/'`wctob.c

libcox_a-wctob.obj: wctob.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcox_a_CFLAGS) $(CFLAGS) -c -o libcox_a-wctob.obj `if test -f 'wctob.c'; then $(CYGPATH_W) 'wctob.c'; else $(CYGPATH_W) '$(srcdir)/wctob.c'; fi`

libcx_a-__assert.o: __assert.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-__assert.o `test -f '__assert.c' || echo '$(srcdir)/'`__assert.c

libcx_a-__assert.obj: __assert.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-__assert.obj `if test -f '__assert.c'; then $(CYGPATH_W) '__assert.c'; else $(CYGPATH_W) '$(srcdir)/__assert.c'; fi`

libcx_a-isalnum.o: isalnum.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-isalnum.o `test -f 'isalnum.c' || echo '$(srcdir)/'`isalnum.c

libcx_a-isalnum.obj: isalnum.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-isalnum.obj `if test -f 'isalnum.c'; then $(CYGPATH_W) 'isalnum.c'; else $(CYGPATH_W) '$(srcdir)/isalnum.c'; fi`

libcx_a-isalpha.o: isalpha.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-isalpha.o `test -f 'isalpha.c' || echo '$(srcdir)/'`isalpha.c

libcx_a-isalpha.obj: isalpha.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-isalpha.obj `if test -f 'isalpha.c'; then $(CYGPATH_W) 'isalpha.c'; else $(CYGPATH_W) '$(srcdir)/isalpha.c'; fi`

libcx_a-isblank.o: isblank.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-isblank.o `test -f 'isblank.c' || echo '$(srcdir)/'`isblank.c

libcx_a-isblank.obj: isblank.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-isblank.obj `if test -f 'isblank.c'; then $(CYGPATH_W) 'isblank.c'; else $(CYGPATH_W) '$(srcdir)/isblank.c'; fi`

libcx_a-iscntrl.o: iscntrl.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-iscntrl.o `test -f 'iscntrl.c' || echo '$(srcdir)/'`iscntrl.c

libcx_a-iscntrl.obj: iscntrl.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-iscntrl.obj `if test -f 'iscntrl.c'; then $(CYGPATH_W) 'iscntrl.c'; else $(CYGPATH_W) '$(srcdir)/iscntrl.c'; fi`

libcx_a-isdigit.o: isdigit.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-isdigit.o `test -f 'isdigit.c' || echo '$(srcdir)/'`isdigit.c

libcx_a-isdigit.obj: isdigit.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-isdigit.obj `if test -f 'isdigit.c'; then $(CYGPATH_W) 'isdigit.c'; else $(CYGPATH_W) '$(srcdir)/isdigit.c'; fi`

libcx_a-isgraph.o: isgraph.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-isgraph.o `test -f 'isgraph.c' || echo '$(srcdir)/'`isgraph.c

libcx_a-isgraph.obj: isgraph.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-isgraph.obj `if test -f 'isgraph.c'; then $(CYGPATH_W) 'isgraph.c'; else $(CYGPATH_W) '$(srcdir)/isgraph.c'; fi`

libcx_a-islower.o: islower.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-islower.o `test -f 'islower.c' || echo '$(srcdir)/'`islower.c

libcx_a-islower.obj: islower.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-islower.obj `if test -f 'islower.c'; then $(CYGPATH_W) 'islower.c'; else $(CYGPATH_W) '$(srcdir)/islower.c'; fi`

libcx_a-isprint.o: isprint.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-isprint.o `test -f 'isprint.c' || echo '$(srcdir)/'`isprint.c

libcx_a-isprint.obj: isprint.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-isprint.obj `if test -f 'isprint.c'; then $(CYGPATH_W) 'isprint.c'; else $(CYGPATH_W) '$(srcdir)/isprint.c'; fi`

libcx_a-ispunct.o: ispunct.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-ispunct.o `test -f 'ispunct.c' || echo '$(srcdir)/'`ispunct.c

libcx_a-ispunct.obj: ispunct.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-ispunct.obj `if test -f 'ispunct.c'; then $(CYGPATH_W) 'ispunct.c'; else $(CYGPATH_W) '$(srcdir)/ispunct.c'; fi`

libcx_a-isspace.o: isspace.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-isspace.o `test -f 'isspace.c' || echo '$(srcdir)/'`isspace.c

libcx_a-isspace.obj: isspace.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-isspace.obj `if test -f 'isspace.c'; then $(CYGPATH_W) 'isspace.c'; else $(CYGPATH_W) '$(srcdir)/isspace.c'; fi`

libcx_a-isupper.o: isupper.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-isupper.o `test -f 'isupper.c' || echo '$(srcdir)/'`isupper.c

libcx_a-isupper.obj: isupper.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-isupper.obj `if test -f 'isupper.c'; then $(CYGPATH_W) 'isupper.c'; else $(CYGPATH_W) '$(srcdir)/isupper.c'; fi`

libcx_a-isxdigit.o: isxdigit.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-isxdigit.o `test -f 'isxdigit.c' || echo '$(srcdir)/'`isxdigit.c

libcx_a-isxdigit.obj: isxdigit.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-isxdigit.obj `if test -f 'isxdigit.c'; then $(CYGPATH_W) 'isxdigit.c'; else $(CYGPATH_W) '$(srcdir)/isxdigit.c'; fi`

libcx_a-tolower.o: tolower.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-tolower.o `test -f 'tolower.c' || echo '$(srcdir)/'`tolower.c

libcx_a-tolower.obj: tolower.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-tolower.obj `if test -f 'tolower.c'; then $(CYGPATH_W) 'tolower.c'; else $(CYGPATH_W) '$(srcdir)/tolower.c'; fi`

libcx_a-toupper.o: toupper.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-toupper.o `test -f 'toupper.c' || echo '$(srcdir)/'`toupper.c

libcx_a-toupper.obj: toupper.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-toupper.obj `if test -f 'toupper.c'; then $(CYGPATH_W) 'toupper.c'; else $(CYGPATH_W) '$(srcdir)/toupper.c'; fi`

libcx_a-errno.o: errno.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-errno.o `test -f 'errno.c' || echo '$(srcdir)/'`errno.c

libcx_a-errno.obj: errno.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-errno.obj `if test -f 'errno.c'; then $(CYGPATH_W) 'errno.c'; else $(CYGPATH_W) '$(srcdir)/errno.c'; fi`

libcx_a-fprintf.o: fprintf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-fprintf.o `test -f 'fprintf.c' || echo '$(srcdir)/'`fprintf.c

libcx_a-fprintf.obj: fprintf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-fprintf.obj `if test -f 'fprintf.c'; then $(CYGPATH_W) 'fprintf.c'; else $(CYGPATH_W) '$(srcdir)/fprintf.c'; fi`

libcx_a-fputc.o: fputc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-fputc.o `test -f 'fputc.c' || echo '$(srcdir)/'`fputc.c

libcx_a-fputc.obj: fputc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-fputc.obj `if test -f 'fputc.c'; then $(CYGPATH_W) 'fputc.c'; else $(CYGPATH_W) '$(srcdir)/fputc.c'; fi`

libcx_a-fputs.o: fputs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-fputs.o `test -f 'fputs.c' || echo '$(srcdir)/'`fputs.c

libcx_a-fputs.obj: fputs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-fputs.obj `if test -f 'fputs.c'; then $(CYGPATH_W) 'fputs.c'; else $(CYGPATH_W) '$(srcdir)/fputs.c'; fi`

libcx_a-getchar.o: getchar.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-getchar.o `test -f 'getchar.c' || echo '$(srcdir)/'`getchar.c

libcx_a-getchar.obj: getchar.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-getchar.obj `if test -f 'getchar.c'; then $(CYGPATH_W) 'getchar.c'; else $(CYGPATH_W) '$(srcdir)/getchar.c'; fi`

libcx_a-gets.o: gets.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-gets.o `test -f 'gets.c' || echo '$(srcdir)/'`gets.c

libcx_a-gets.obj: gets.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-gets.obj `if test -f 'gets.c'; then $(CYGPATH_W) 'gets.c'; else $(CYGPATH_W) '$(srcdir)/gets.c'; fi`

libcx_a-printf.o: printf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-printf.o `test -f 'printf.c' || echo '$(srcdir)/'`printf.c

libcx_a-printf.obj: printf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-printf.obj `if test -f 'printf.c'; then $(CYGPATH_W) 'printf.c'; else $(CYGPATH_W) '$(srcdir)/printf.c'; fi`

libcx_a-printfl.o: printfl.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-printfl.o `test -f 'printfl.c' || echo '$(srcdir)/'`printfl.c

libcx_a-printfl.obj: printfl.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-printfl.obj `if test -f 'printfl.c'; then $(CYGPATH_W) 'printfl.c'; else $(CYGPATH_W) '$(srcdir)/printfl.c'; fi`

libcx_a-putchar.o: putchar.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-putchar.o `test -f 'putchar.c' || echo '$(srcdir)/'`putchar.c

libcx_a-putchar.obj: putchar.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-putchar.obj `if test -f 'putchar.c'; then $(CYGPATH_W) 'putchar.c'; else $(CYGPATH_W) '$(srcdir)/putchar.c'; fi`

libcx_a-puts.o: puts.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-puts.o `test -f 'puts.c' || echo '$(srcdir)/'`puts.c

libcx_a-puts.obj: puts.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-puts.obj `if test -f 'puts.c'; then $(CYGPATH_W) 'puts.c'; else $(CYGPATH_W) '$(srcdir)/puts.c'; fi`

libcx_a-sprintf.o: sprintf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-sprintf.o `test -f 'sprintf.c' || echo '$(srcdir)/'`sprintf.c

libcx_a-sprintf.obj: sprintf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-sprintf.obj `if test -f 'sprintf.c'; then $(CYGPATH_W) 'sprintf.c'; else $(CYGPATH_W) '$(srcdir)/sprintf.c'; fi`

libcx_a-streams.o: streams.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-streams.o `test -f 'streams.c' || echo '$(srcdir)/'`streams.c

libcx_a-streams.obj: streams.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-streams.obj `if test -f 'streams.c'; then $(CYGPATH_W) 'streams.c'; else $(CYGPATH_W) '$(srcdir)/streams.c'; fi`

libcx_a-strmgpsim.o: strmgpsim.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-strmgpsim.o `test -f 'strmgpsim.c' || echo '$(srcdir)/'`strmgpsim.c

libcx_a-strmgpsim.obj: strmgpsim.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-strmgpsim.obj `if test -f 'strmgpsim.c'; then $(CYGPATH_W) 'strmgpsim.c'; else $(CYGPATH_W) '$(srcdir)/strmgpsim.c'; fi`

libcx_a-strmmssp.o: strmmssp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-strmmssp.o `test -f 'strmmssp.c' || echo '$(srcdir)/'`strmmssp.c

libcx_a-strmmssp.obj: strmmssp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-strmmssp.obj `if test -f 'strmmssp.c'; then $(CYGPATH_W) 'strmmssp.c'; else $(CYGPATH_W) '$(srcdir)/strmmssp.c'; fi`

libcx_a-strmusart.o: strmusart.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-strmusart.o `test -f 'strmusart.c' || echo '$(srcdir)/'`strmusart.c

libcx_a-strmusart.obj: strmusart.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-strmusart.obj `if test -f 'strmusart.c'; then $(CYGPATH_W) 'strmusart.c'; else $(CYGPATH_W) '$(srcdir)/strmusart.c'; fi`

libcx_a-vfprintf.o: vfprintf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-vfprintf.o `test -f 'vfprintf.c' || echo '$(srcdir)/'`vfprintf.c

libcx_a-vfprintf.obj: vfprintf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-vfprintf.obj `if test -f 'vfprintf.c'; then $(CYGPATH_W) 'vfprintf.c'; else $(CYGPATH_W) '$(srcdir)/vfprintf.c'; fi`

libcx_a-vprintf.o: vprintf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-vprintf.o `test -f 'vprintf.c' || echo '$(srcdir)/'`vprintf.c

libcx_a-vprintf.obj: vprintf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-vprintf.obj `if test -f 'vprintf.c'; then $(CYGPATH_W) 'vprintf.c'; else $(CYGPATH_W) '$(srcdir)/vprintf.c'; fi`

libcx_a-vsprintf.o: vsprintf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-vsprintf.o `test -f 'vsprintf.c' || echo '$(srcdir)/'`vsprintf.c

libcx_a-vsprintf.obj: vsprintf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-vsprintf.obj `if test -f 'vsprintf.c'; then $(CYGPATH_W) 'vsprintf.c'; else $(CYGPATH_W) '$(srcdir)/vsprintf.c'; fi`

libcx_a-_atof.o: _atof.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-_atof.o `test -f '_atof.c' || echo '$(srcdir)/'`_atof.c

libcx_a-_atof.obj: _atof.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-_atof.obj `if test -f '_atof.c'; then $(CYGPATH_W) '_atof.c'; else $(CYGPATH_W) '$(srcdir)/_atof.c'; fi`

libcx_a-_ftoa.o: _ftoa.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-_ftoa.o `test -f '_ftoa.c' || echo '$(srcdir)/'`_ftoa.c

libcx_a-_ftoa.obj: _ftoa.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-_ftoa.obj `if test -f '_ftoa.c'; then $(CYGPATH_W) '_ftoa.c'; else $(CYGPATH_W) '$(srcdir)/_ftoa.c'; fi`

libcx_a-__itoa.o: __itoa.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-__itoa.o `test -f '__itoa.c' || echo '$(srcdir)/'`__itoa.c

libcx_a-__itoa.obj: __itoa.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-__itoa.obj `if test -f '__itoa.c'; then $(CYGPATH_W) '__itoa.c'; else $(CYGPATH_W) '$(srcdir)/__itoa.c'; fi`

libcx_a-__ltoa.o: __ltoa.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-__ltoa.o `test -f '__ltoa.c' || echo '$(srcdir)/'`__ltoa.c

libcx_a-__ltoa.obj: __ltoa.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-__ltoa.obj `if test -f '__ltoa.c'; then $(CYGPATH_W) '__ltoa.c'; else $(CYGPATH_W) '$(srcdir)/__ltoa.c'; fi`

libcx_a-abs.o: abs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-abs.o `test -f 'abs.c' || echo '$(srcdir)/'`abs.c

libcx_a-abs.obj: abs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-abs.obj `if test -f 'abs.c'; then $(CYGPATH_W) 'abs.c'; else $(CYGPATH_W) '$(srcdir)/abs.c'; fi`

libcx_a-aligned_alloc.o: aligned_alloc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-aligned_alloc.o `test -f 'aligned_alloc.c' || echo '$(srcdir)/'`aligned_alloc.c

libcx_a-aligned_alloc.obj: aligned_alloc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-aligned_alloc.obj `if test -f 'aligned_alloc.c'; then $(CYGPATH_W) 'aligned_alloc.c'; else $(CYGPATH_W) '$(srcdir)/aligned_alloc.c'; fi`

libcx_a-atoi.o: atoi.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-atoi.o `test -f 'atoi.c' || echo '$(srcdir)/'`atoi.c

libcx_a-atoi.obj: atoi.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-atoi.obj `if test -f 'atoi.c'; then $(CYGPATH_W) 'atoi.c'; else $(CYGPATH_W) '$(srcdir)/atoi.c'; fi`

libcx_a-atol.o: atol.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-atol.o `test -f 'atol.c' || echo '$(srcdir)/'`atol.c

libcx_a-atol.obj: atol.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-atol.obj `if test -f 'atol.c'; then $(CYGPATH_W) 'atol.c'; else $(CYGPATH_W) '$(srcdir)/atol.c'; fi`

libcx_a-bsearch.o: bsearch.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-bsearch.o `test -f 'bsearch.c' || echo '$(srcdir)/'`bsearch.c

libcx_a-bsearch.obj: bsearch.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-bsearch.obj `if test -f 'bsearch.c'; then $(CYGPATH_W) 'bsearch.c'; else $(CYGPATH_W) '$(srcdir)/bsearch.c'; fi`

libcx_a-_calloc.o: _calloc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-_calloc.o `test -f '_calloc.c' || echo '$(srcdir)/'`_calloc.c

libcx_a-_calloc.obj: _calloc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-_calloc.obj `if test -f '_calloc.c'; then $(CYGPATH_W) '_calloc.c'; else $(CYGPATH_W) '$(srcdir)/_calloc.c'; fi`

libcx_a-free.o: free.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-free.o `test -f 'free.c' || echo '$(srcdir)/'`free.c

libcx_a-free.obj: free.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-free.obj `if test -f 'free.c'; then $(CYGPATH_W) 'free.c'; else $(CYGPATH_W) '$(srcdir)/free.c'; fi`

libcx_a-labs.o: labs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-labs.o `test -f 'labs.c' || echo '$(srcdir)/'`labs.c

libcx_a-labs.obj: labs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-labs.obj `if test -f 'labs.c'; then $(CYGPATH_W) 'labs.c'; else $(CYGPATH_W) '$(srcdir)/labs.c'; fi`

libcx_a-malloc.o: malloc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-malloc.o `test -f 'malloc.c' || echo '$(srcdir)/'`malloc.c

libcx_a-malloc.obj: malloc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-malloc.obj `if test -f 'malloc.c'; then $(CYGPATH_W) 'malloc.c'; else $(CYGPATH_W) '$(srcdir)/malloc.c'; fi`

libcx_a-mblen.o: mblen.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-mblen.o `test -f 'mblen.c' || echo '$(srcdir)/'`mblen.c

libcx_a-mblen.obj: mblen.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-mblen.obj `if test -f 'mblen.c'; then $(CYGPATH_W) 'mblen.c'; else $(CYGPATH_W) '$(srcdir)/mblen.c'; fi`

libcx_a-mbstowcs.o: mbstowcs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-mbstowcs.o `test -f 'mbstowcs.c' || echo '$(srcdir)/'`mbstowcs.c

libcx_a-mbstowcs.obj: mbstowcs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-mbstowcs.obj `if test -f 'mbstowcs.c'; then $(CYGPATH_W) 'mbstowcs.c'; else $(CYGPATH_W) '$(srcdir)/mbstowcs.c'; fi`

libcx_a-mbtowc.o: mbtowc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-mbtowc.o `test -f 'mbtowc.c' || echo '$(srcdir)/'`mbtowc.c

libcx_a-mbtowc.obj: mbtowc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-mbtowc.obj `if test -f 'mbtowc.c'; then $(CYGPATH_W) 'mbtowc.c'; else $(CYGPATH_W) '$(srcdir)/mbtowc.c'; fi`

libcx_a-memfree.o: memfree.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-memfree.o `test -f 'memfree.c' || echo '$(srcdir)/'`memfree.c

libcx_a-memfree.obj: memfree.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-memfree.obj `if test -f 'memfree.c'; then $(CYGPATH_W) 'memfree.c'; else $(CYGPATH_W) '$(srcdir)/memfree.c'; fi`

libcx_a-memfreemax.o: memfreemax.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-memfreemax.o `test -f 'memfreemax.c' || echo '$(srcdir)/'`memfreemax.c

libcx_a-memfreemax.obj: memfreemax.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-memfreemax.obj `if test -f 'memfreemax.c'; then $(CYGPATH_W) 'memfreemax.c'; else $(CYGPATH_W) '$(srcdir)/memfreemax.c'; fi`

libcx_a-memmisc.o: memmisc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-memmisc.o `test -f 'memmisc.c' || echo '$(srcdir)/'`memmisc.c

libcx_a-memmisc.obj: memmisc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-memmisc.obj `if test -f 'memmisc.c'; then $(CYGPATH_W) 'memmisc.c'; else $(CYGPATH_W) '$(srcdir)/memmisc.c'; fi`

libcx_a-qsort.o: qsort.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-qsort.o `test -f 'qsort.c' || echo '$(srcdir)/'`qsort.c

libcx_a-qsort.obj: qsort.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-qsort.obj `if test -f 'qsort.c'; then $(CYGPATH_W) 'qsort.c'; else $(CYGPATH_W) '$(srcdir)/qsort.c'; fi`

libcx_a-rand.o: rand.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-rand.o `test -f 'rand.c' || echo '$(srcdir)/'`rand.c

libcx_a-rand.obj: rand.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-rand.obj `if test -f 'rand.c'; then $(CYGPATH_W) 'rand.c'; else $(CYGPATH_W) '$(srcdir)/rand.c'; fi`

libcx_a-realloc.o: realloc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-realloc.o `test -f 'realloc.c' || echo '$(srcdir)/'`realloc.c

libcx_a-realloc.obj: realloc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-realloc.obj `if test -f 'realloc.c'; then $(CYGPATH_W) 'realloc.c'; else $(CYGPATH_W) '$(srcdir)/realloc.c'; fi`

libcx_a-strtol.o: strtol.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-strtol.o `test -f 'strtol.c' || echo '$(srcdir)/'`strtol.c

libcx_a-strtol.obj: strtol.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-strtol.obj `if test -f 'strtol.c'; then $(CYGPATH_W) 'strtol.c'; else $(CYGPATH_W) '$(srcdir)/strtol.c'; fi`

libcx_a-strtoul.o: strtoul.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-strtoul.o `test -f 'strtoul.c' || echo '$(srcdir)/'`strtoul.c

libcx_a-strtoul.obj: strtoul.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-strtoul.obj `if test -f 'strtoul.c'; then $(CYGPATH_W) 'strtoul.c'; else $(CYGPATH_W) '$(srcdir)/strtoul.c'; fi`

libcx_a-wcstombs.o: wcstombs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-wcstombs.o `test -f 'wcstombs.c' || echo '$(srcdir)/'`wcstombs.c

libcx_a-wcstombs.obj: wcstombs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-wcstombs.obj `if test -f 'wcstombs.c'; then $(CYGPATH_W) 'wcstombs.c'; else $(CYGPATH_W) '$(srcdir)/wcstombs.c'; fi`

libcx_a-wctomb.o: wctomb.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-wctomb.o `test -f 'wctomb.c' || echo '$(srcdir)/'`wctomb.c

libcx_a-wctomb.obj: wctomb.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-wctomb.obj `if test -f 'wctomb.c'; then $(CYGPATH_W) 'wctomb.c'; else $(CYGPATH_W) '$(srcdir)/wctomb.c'; fi`

libcx_a-_memchr.o: _memchr.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-_memchr.o `test -f '_memchr.c' || echo '$(srcdir)/'`_memchr.c

libcx_a-_memchr.obj: _memchr.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-_memchr.obj `if test -f '_memchr.c'; then $(CYGPATH_W) '_memchr.c'; else $(CYGPATH_W) '$(srcdir)/_memchr.c'; fi`

libcx_a-_memcmp.o: _memcmp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-_memcmp.o `test -f '_memcmp.c' || echo '$(srcdir)/'`_memcmp.c

libcx_a-_memcmp.obj: _memcmp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-_memcmp.obj `if test -f '_memcmp.c'; then $(CYGPATH_W) '_memcmp.c'; else $(CYGPATH_W) '$(srcdir)/_memcmp.c'; fi`

libcx_a-__memcpy.o: __memcpy.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-__memcpy.o `test -f '__memcpy.c' || echo '$(srcdir)/'`__memcpy.c

libcx_a-__memcpy.obj: __memcpy.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-__memcpy.obj `if test -f '__memcpy.c'; then $(CYGPATH_W) '__memcpy.c'; else $(CYGPATH_W) '$(srcdir)/__memcpy.c'; fi`

libcx_a-memcpy.o: memcpy.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-memcpy.o `test -f 'memcpy.c' || echo '$(srcdir)/'`memcpy.c

libcx_a-memcpy.obj: memcpy.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-memcpy.obj `if test -f 'memcpy.c'; then $(CYGPATH_W) 'memcpy.c'; else $(CYGPATH_W) '$(srcdir)/memcpy.c'; fi`

libcx_a-_memmove.o: _memmove.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-_memmove.o `test -f '_memmove.c' || echo '$(srcdir)/'`_memmove.c

libcx_a-_memmove.obj: _memmove.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-_memmove.obj `if test -f '_memmove.c'; then $(CYGPATH_W) '_memmove.c'; else $(CYGPATH_W) '$(srcdir)/_memmove.c'; fi`

libcx_a-_memset.o: _memset.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-_memset.o `test -f '_memset.c' || echo '$(srcdir)/'`_memset.c

libcx_a-_memset.obj: _memset.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-_memset.obj `if test -f '_memset.c'; then $(CYGPATH_W) '_memset.c'; else $(CYGPATH_W) '$(srcdir)/_memset.c'; fi`

libcx_a-_strcat.o: _strcat.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-_strcat.o `test -f '_strcat.c' || echo '$(srcdir)/'`_strcat.c

libcx_a-_strcat.obj: _strcat.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-_strcat.obj `if test -f '_strcat.c'; then $(CYGPATH_W) '_strcat.c'; else $(CYGPATH_W) '$(srcdir)/_strcat.c'; fi`

libcx_a-_strchr.o: _strchr.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-_strchr.o `test -f '_strchr.c' || echo '$(srcdir)/'`_strchr.c

libcx_a-_strchr.obj: _strchr.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-_strchr.obj `if test -f '_strchr.c'; then $(CYGPATH_W) '_strchr.c'; else $(CYGPATH_W) '$(srcdir)/_strchr.c'; fi`

libcx_a-_strcmp.o: _strcmp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-_strcmp.o `test -f '_strcmp.c' || echo '$(srcdir)/'`_strcmp.c

libcx_a-_strcmp.obj: _strcmp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-_strcmp.obj `if test -f '_strcmp.c'; then $(CYGPATH_W) '_strcmp.c'; else $(CYGPATH_W) '$(srcdir)/_strcmp.c'; fi`

libcx_a-_strcpy.o: _strcpy.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-_strcpy.o `test -f '_strcpy.c' || echo '$(srcdir)/'`_strcpy.c

libcx_a-_strcpy.obj: _strcpy.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-_strcpy.obj `if test -f '_strcpy.c'; then $(CYGPATH_W) '_strcpy.c'; else $(CYGPATH_W) '$(srcdir)/_strcpy.c'; fi`

libcx_a-_strcspn.o: _strcspn.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-_strcspn.o `test -f '_strcspn.c' || echo '$(srcdir)/'`_strcspn.c

libcx_a-_strcspn.obj: _strcspn.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-_strcspn.obj `if test -f '_strcspn.c'; then $(CYGPATH_W) '_strcspn.c'; else $(CYGPATH_W) '$(srcdir)/_strcspn.c'; fi`

libcx_a-_strlen.o: _strlen.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-_strlen.o `test -f '_strlen.c' || echo '$(srcdir)/'`_strlen.c

libcx_a-_strlen.obj: _strlen.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-_strlen.obj `if test -f '_strlen.c'; then $(CYGPATH_W) '_strlen.c'; else $(CYGPATH_W) '$(srcdir)/_strlen.c'; fi`

libcx_a-_strncat.o: _strncat.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-_strncat.o `test -f '_strncat.c' || echo '$(srcdir)/'`_strncat.c

libcx_a-_strncat.obj: _strncat.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-_strncat.obj `if test -f '_strncat.c'; then $(CYGPATH_W) '_strncat.c'; else $(CYGPATH_W) '$(srcdir)/_strncat.c'; fi`

libcx_a-_strncmp.o: _strncmp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-_strncmp.o `test -f '_strncmp.c' || echo '$(srcdir)/'`_strncmp.c

libcx_a-_strncmp.obj: _strncmp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-_strncmp.obj `if test -f '_strncmp.c'; then $(CYGPATH_W) '_strncmp.c'; else $(CYGPATH_W) '$(srcdir)/_strncmp.c'; fi`

libcx_a-_strncpy.o: _strncpy.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-_strncpy.o `test -f '_strncpy.c' || echo '$(srcdir)/'`_strncpy.c

libcx_a-_strncpy.obj: _strncpy.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-_strncpy.obj `if test -f '_strncpy.c'; then $(CYGPATH_W) '_strncpy.c'; else $(CYGPATH_W) '$(srcdir)/_strncpy.c'; fi`

libcx_a-_strpbrk.o: _strpbrk.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-_strpbrk.o `test -f '_strpbrk.c' || echo '$(srcdir)/'`_strpbrk.c

libcx_a-_strpbrk.obj: _strpbrk.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-_strpbrk.obj `if test -f '_strpbrk.c'; then $(CYGPATH_W) '_strpbrk.c'; else $(CYGPATH_W) '$(srcdir)/_strpbrk.c'; fi`

libcx_a-_strrchr.o: _strrchr.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-_strrchr.o `test -f '_strrchr.c' || echo '$(srcdir)/'`_strrchr.c

libcx_a-_strrchr.obj: _strrchr.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-_strrchr.obj `if test -f '_strrchr.c'; then $(CYGPATH_W) '_strrchr.c'; else $(CYGPATH_W) '$(srcdir)/_strrchr.c'; fi`

libcx_a-_strspn.o: _strspn.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-_strspn.o `test -f '_strspn.c' || echo '$(srcdir)/'`_strspn.c

libcx_a-_strspn.obj: _strspn.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-_strspn.obj `if test -f '_strspn.c'; then $(CYGPATH_W) '_strspn.c'; else $(CYGPATH_W) '$(srcdir)/_strspn.c'; fi`

libcx_a-_strstr.o: _strstr.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-_strstr.o `test -f '_strstr.c' || echo '$(srcdir)/'`_strstr.c

libcx_a-_strstr.obj: _strstr.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-_strstr.obj `if test -f '_strstr.c'; then $(CYGPATH_W) '_strstr.c'; else $(CYGPATH_W) '$(srcdir)/_strstr.c'; fi`

libcx_a-_strtok.o: _strtok.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-_strtok.o `test -f '_strtok.c' || echo '$(srcdir)/'`_strtok.c

libcx_a-_strtok.obj: _strtok.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-_strtok.obj `if test -f '_strtok.c'; then $(CYGPATH_W) '_strtok.c'; else $(CYGPATH_W) '$(srcdir)/_strtok.c'; fi`

libcx_a-strxfrm.o: strxfrm.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-strxfrm.o `test -f 'strxfrm.c' || echo '$(srcdir)/'`strxfrm.c

libcx_a-strxfrm.obj: strxfrm.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-strxfrm.obj `if test -f 'strxfrm.c'; then $(CYGPATH_W) 'strxfrm.c'; else $(CYGPATH_W) '$(srcdir)/strxfrm.c'; fi`

libcx_a-c16rtomb.o: c16rtomb.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-c16rtomb.o `test -f 'c16rtomb.c' || echo '$(srcdir)/'`c16rtomb.c

libcx_a-c16rtomb.obj: c16rtomb.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-c16rtomb.obj `if test -f 'c16rtomb.c'; then $(CYGPATH_W) 'c16rtomb.c'; else $(CYGPATH_W) '$(srcdir)/c16rtomb.c'; fi`

libcx_a-c16stombs.o: c16stombs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-c16stombs.o `test -f 'c16stombs.c' || echo '$(srcdir)/'`c16stombs.c

libcx_a-c16stombs.obj: c16stombs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-c16stombs.obj `if test -f 'c16stombs.c'; then $(CYGPATH_W) 'c16stombs.c'; else $(CYGPATH_W) '$(srcdir)/c16stombs.c'; fi`

libcx_a-c32rtomb.o: c32rtomb.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-c32rtomb.o `test -f 'c32rtomb.c' || echo '$(srcdir)/'`c32rtomb.c

libcx_a-c32rtomb.obj: c32rtomb.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-c32rtomb.obj `if test -f 'c32rtomb.c'; then $(CYGPATH_W) 'c32rtomb.c'; else $(CYGPATH_W) '$(srcdir)/c32rtomb.c'; fi`

libcx_a-mbrtoc16.o: mbrtoc16.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-mbrtoc16.o `test -f 'mbrtoc16.c' || echo '$(srcdir)/'`mbrtoc16.c

libcx_a-mbrtoc16.obj: mbrtoc16.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-mbrtoc16.obj `if test -f 'mbrtoc16.c'; then $(CYGPATH_W) 'mbrtoc16.c'; else $(CYGPATH_W) '$(srcdir)/mbrtoc16.c'; fi`

libcx_a-mbrtoc32.o: mbrtoc32.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-mbrtoc32.o `test -f 'mbrtoc32.c' || echo '$(srcdir)/'`mbrtoc32.c

libcx_a-mbrtoc32.obj: mbrtoc32.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-mbrtoc32.obj `if test -f 'mbrtoc32.c'; then $(CYGPATH_W) 'mbrtoc32.c'; else $(CYGPATH_W) '$(srcdir)/mbrtoc32.c'; fi`

libcx_a-mbstoc16s.o: mbstoc16s.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-mbstoc16s.o `test -f 'mbstoc16s.c' || echo '$(srcdir)/'`mbstoc16s.c

libcx_a-mbstoc16s.obj: mbstoc16s.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-mbstoc16s.obj `if test -f 'mbstoc16s.c'; then $(CYGPATH_W) 'mbstoc16s.c'; else $(CYGPATH_W) '$(srcdir)/mbstoc16s.c'; fi`

libcx_a-btowc.o: btowc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-btowc.o `test -f 'btowc.c' || echo '$(srcdir)/'`btowc.c

libcx_a-btowc.obj: btowc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-btowc.obj `if test -f 'btowc.c'; then $(CYGPATH_W) 'btowc.c'; else $(CYGPATH_W) '$(srcdir)/btowc.c'; fi`

libcx_a-mbrlen.o: mbrlen.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-mbrlen.o `test -f 'mbrlen.c' || echo '$(srcdir)/'`mbrlen.c

libcx_a-mbrlen.obj: mbrlen.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-mbrlen.obj `if test -f 'mbrlen.c'; then $(CYGPATH_W) 'mbrlen.c'; else $(CYGPATH_W) '$(srcdir)/mbrlen.c'; fi`

libcx_a-mbrtowc.o: mbrtowc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-mbrtowc.o `test -f 'mbrtowc.c' || echo '$(srcdir)/'`mbrtowc.c

libcx_a-mbrtowc.obj: mbrtowc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-mbrtowc.obj `if test -f 'mbrtowc.c'; then $(CYGPATH_W) 'mbrtowc.c'; else $(CYGPATH_W) '$(srcdir)/mbrtowc.c'; fi`

libcx_a-mbsinit.o: mbsinit.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-mbsinit.o `test -f 'mbsinit.c' || echo '$(srcdir)/'`mbsinit.c

libcx_a-mbsinit.obj: mbsinit.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-mbsinit.obj `if test -f 'mbsinit.c'; then $(CYGPATH_W) 'mbsinit.c'; else $(CYGPATH_W) '$(srcdir)/mbsinit.c'; fi`

libcx_a-wcrtomb.o: wcrtomb.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-wcrtomb.o `test -f 'wcrtomb.c' || echo '$(srcdir)/'`wcrtomb.c

libcx_a-wcrtomb.obj: wcrtomb.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-wcrtomb.obj `if test -f 'wcrtomb.c'; then $(CYGPATH_W) 'wcrtomb.c'; else $(CYGPATH_W) '$(srcdir)/wcrtomb.c'; fi`

libcx_a-wcscmp.o: wcscmp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-wcscmp.o `test -f 'wcscmp.c' || echo '$(srcdir)/'`wcscmp.c

libcx_a-wcscmp.obj: wcscmp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-wcscmp.obj `if test -f 'wcscmp.c'; then $(CYGPATH_W) 'wcscmp.c'; else $(CYGPATH_W) '$(srcdir)/wcscmp.c'; fi`

libcx_a-wcslen.o: wcslen.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-wcslen.o `test -f 'wcslen.c' || echo '$(srcdir)/'`wcslen.c

libcx_a-wcslen.obj: wcslen.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-wcslen.obj `if test -f 'wcslen.c'; then $(CYGPATH_W) 'wcslen.c'; else $(CYGPATH_W) '$(srcdir)/wcslen.c'; fi`

libcx_a-wctob.o: wctob.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-wctob.o `test -f 'wctob.c' || echo '$(srcdir)/'`wctob.c

libcx_a-wctob.obj: wctob.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcx_a_CFLAGS) $(CFLAGS) -c -o libcx_a-wctob.obj `if test -f 'wctob.c'; then $(CYGPATH_W) 'wctob.c'; else $(CYGPATH_W) '$(srcdir)/wctob.c'; fi`

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) distdir-am

distdir-am: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LIBRARIES)
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-local clean-noinstLIBRARIES \
	mostlyclean-am

distclean: distclean-am
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-am clean clean-generic \
	clean-local clean-noinstLIBRARIES cscopelist-am ctags ctags-am \
	distclean distclean-compile distclean-generic distclean-tags \
	distdir dvi dvi-am html html-am info info-am install \
	install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic pdf pdf-am ps ps-am \
	tags tags-am uninstall uninstall-am

.PRECIOUS: Makefile


ARCH  ?= @ARCH@
EARCH ?= @EARCH@

############################################################
# Common actions
############################################################

# link missing source files to the generic sdcc ones
# NOTE: last empty line required because foreach concatenates several copies of this text
define link-generic-files
$(1)/%.c: $$(GENERIC_SRC_DIR_ABS)/%.c
	test -e $$(srcdir)/$$@ || ln -s $$< $$@

endef

# create links to generic source files in the source directories
$(foreach SOURCE_DIR,$(SOURCE_DIRS),$(eval $(call link-generic-files,$(SOURCE_DIR))))

# remove links to generic source files
# NOTE: last semicolon required because foreach concatenates several copies of this text
define remove-generic-links
	list='$(wildcard $(SOURCE_DIR)/*.c)' ; \
	for file in $$list ; do \
	  if test -L $$file ; then rm $$file ; fi \
	done ;
endef

# remove intermediate files generated by the build process
# NOTE: last semicolon required because foreach concatenates several copies of this text
define remove-intermediate-files
	list='$(wildcard $(addprefix $(SOURCE_DIR)/*,$(CLEAN_EXTENSIONS)))' ; \
	if test -n "$$list" ; then rm -rf $$list ; fi ;
endef

# clean-up (remove intermediate files and links to missing source files)
clean-local:
	$(foreach SOURCE_DIR,$(SOURCE_DIRS),$(remove-generic-links))
	$(foreach SOURCE_DIR,$(SOURCE_DIRS),$(remove-intermediate-files))

# do not remove intermediate files when DEBUG is enabled
@ENABLE_DEBUG_TRUE@clean-intermediate:
@ENABLE_DEBUG_TRUE@	list='$(SUBDIRS)'; for subdir in $$list; do \
@ENABLE_DEBUG_TRUE@	  echo "Making $@ in $$subdir"; \
@ENABLE_DEBUG_TRUE@	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $@); \
@ENABLE_DEBUG_TRUE@	done
@ENABLE_DEBUG_FALSE@clean-intermediate: clean-local
@ENABLE_DEBUG_FALSE@	list='$(SUBDIRS)'; for subdir in $$list; do \
@ENABLE_DEBUG_FALSE@	  echo "Making $@ in $$subdir"; \
@ENABLE_DEBUG_FALSE@	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $@); \
@ENABLE_DEBUG_FALSE@	done

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
